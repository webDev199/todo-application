{"version":3,"file":"scripts.js","mappings":";oHAAA,MAiBA,EAjBgCA,GACL,4DAEcA,EAAWC,0DAExBD,EAAWE,0DAEzBF,EAAWG,4KAIYH,EAAWI,OAAS,UAAY,wGCXrE,MAWA,EAXwBC,IACpB,MAAMC,EAAUD,EAAcE,KAAIP,GAAcA,EAAWQ,KAC3D,IAAIC,EAMJ,OAJQA,EADa,IAAjBH,EAAQI,OACE,EAEAC,KAAKC,OAAON,GAAS,EAE5BG,CAAK,+HCNhB,MAuBA,EAvBiB,CAACI,EAAaC,IACpB,IAAI,UACPC,SAASC,eAAe,sBACxB,CACIC,KAAM,MACNC,KAAM,CACFC,OAAQ,CACJ,aACA,YAEJC,SAAU,CAAC,CACPF,KAAM,CAACL,EAAaC,GACpBO,gBAAiB,CACb,oBACA,qBAEJC,YAAa,mECZjC,SAASC,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,qSACA,MAAMC,EAAM,CAACD,EAAGE,EAAGC,IAAMhB,KAAKC,IAAID,KAAKiB,IAAIJ,EAAGG,GAAID,GAClD,SAASG,EAAIL,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CACA,SAASM,EAAIN,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAO,EAAG,IACjC,CACA,SAASO,EAAIP,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMU,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAEvC,SAASS,EAASC,GAChB,IACIC,EADAC,EAAMF,EAAI1C,OAmBd,MAjBe,MAAX0C,EAAI,KACM,IAARE,GAAqB,IAARA,EACfD,EAAM,CACJE,EAAG,IAAsB,GAAhBrB,EAAMkB,EAAI,IACnBI,EAAG,IAAsB,GAAhBtB,EAAMkB,EAAI,IACnBV,EAAG,IAAsB,GAAhBR,EAAMkB,EAAI,IACnBX,EAAW,IAARa,EAA4B,GAAhBpB,EAAMkB,EAAI,IAAW,KAErB,IAARE,GAAqB,IAARA,IACtBD,EAAM,CACJE,EAAGrB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCI,EAAGtB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCV,EAAGR,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAClCX,EAAW,IAARa,EAAapB,EAAMkB,EAAI,KAAO,EAAIlB,EAAMkB,EAAI,IAAO,OAIrDC,CACT,CAEA,SAASI,EAAUjC,GACjB,IAAIsB,EAzBUtB,IAAK0B,EAAG1B,EAAE+B,IAAML,EAAG1B,EAAEgC,IAAMN,EAAG1B,EAAEkB,IAAMQ,EAAG1B,EAAEiB,GAyBjDiB,CAAQlC,GAAKwB,EAAKC,EAC1B,OAAOzB,EACH,IAAMsB,EAAEtB,EAAE+B,GAAKT,EAAEtB,EAAEgC,GAAKV,EAAEtB,EAAEkB,GAJpB,EAACD,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GAIFkB,CAAMnC,EAAEiB,EAAGK,QAC5Cc,CACN,CAEA,MAAMC,EAAS,+GACf,SAASC,EAASnC,EAAGoC,EAAGrC,GACtB,MAAMe,EAAIsB,EAAIpD,KAAKiB,IAAIF,EAAG,EAAIA,GACxBoB,EAAI,CAACkB,EAAGC,GAAKD,EAAIrC,EAAI,IAAM,KAAOD,EAAIe,EAAI9B,KAAKC,IAAID,KAAKiB,IAAIqC,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACnB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASoB,EAASvC,EAAGoC,EAAGvC,GACtB,MAAMsB,EAAI,CAACkB,EAAGC,GAAKD,EAAIrC,EAAI,IAAM,IAAMH,EAAIA,EAAIuC,EAAIpD,KAAKC,IAAID,KAAKiB,IAAIqC,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACnB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASqB,EAASxC,EAAGyC,EAAG1B,GACtB,MAAM2B,EAAMP,EAASnC,EAAG,EAAG,IAC3B,IAAI2C,EAMJ,IALIF,EAAI1B,EAAI,IACV4B,EAAI,GAAKF,EAAI1B,GACb0B,GAAKE,EACL5B,GAAK4B,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAI1B,EAClB2B,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CAUA,SAASE,EAAQ/C,GACf,MACM+B,EAAI/B,EAAE+B,EADE,IAERC,EAAIhC,EAAEgC,EAFE,IAGRd,EAAIlB,EAAEkB,EAHE,IAIR9B,EAAMD,KAAKC,IAAI2C,EAAGC,EAAGd,GACrBd,EAAMjB,KAAKiB,IAAI2B,EAAGC,EAAGd,GACrBhB,GAAKd,EAAMgB,GAAO,EACxB,IAAID,EAAGoC,EAAGnB,EAOV,OANIhC,IAAQgB,IACVgB,EAAIhC,EAAMgB,EACVmC,EAAIrC,EAAI,GAAMkB,GAAK,EAAIhC,EAAMgB,GAAOgB,GAAKhC,EAAMgB,GAC/CD,EArBJ,SAAkB4B,EAAGC,EAAGd,EAAGE,EAAGhC,GAC5B,OAAI2C,IAAM3C,GACC4C,EAAId,GAAKE,GAAMY,EAAId,EAAI,EAAI,GAElCc,IAAM5C,GACA8B,EAAIa,GAAKX,EAAI,GAEfW,EAAIC,GAAKZ,EAAI,CACvB,CAaQ4B,CAASjB,EAAGC,EAAGd,EAAGE,EAAGhC,GACzBe,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOoC,GAAK,EAAGrC,EACzB,CACA,SAAS+C,EAAM3B,EAAGL,EAAGC,EAAGC,GACtB,OACE+B,MAAMC,QAAQlC,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZpC,IAAIwB,EACR,CACA,SAAS6C,EAAQjD,EAAGoC,EAAGrC,GACrB,OAAO+C,EAAMX,EAAUnC,EAAGoC,EAAGrC,EAC/B,CACA,SAASmD,EAAQlD,EAAGyC,EAAG1B,GACrB,OAAO+B,EAAMN,EAAUxC,EAAGyC,EAAG1B,EAC/B,CACA,SAASoC,EAAQnD,EAAGoC,EAAGvC,GACrB,OAAOiD,EAAMP,EAAUvC,EAAGoC,EAAGvC,EAC/B,CACA,SAASuD,EAAIpD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASqD,EAAS5B,GAChB,MAAM6B,EAAIpB,EAAOqB,KAAK9B,GACtB,IACI5B,EADAiB,EAAI,IAER,IAAKwC,EACH,OAEEA,EAAE,KAAOzD,IACXiB,EAAIwC,EAAE,GAAKpD,GAAKoD,EAAE,IAAMlD,GAAKkD,EAAE,KAEjC,MAAMtD,EAAIoD,GAAKE,EAAE,IACXE,GAAMF,EAAE,GAAK,IACbG,GAAMH,EAAE,GAAK,IAQnB,OANEzD,EADW,QAATyD,EAAE,GACAJ,EAAQlD,EAAGwD,EAAIC,GACD,QAATH,EAAE,GACPH,EAAQnD,EAAGwD,EAAIC,GAEfR,EAAQjD,EAAGwD,EAAIC,GAEd,CACL7B,EAAG/B,EAAE,GACLgC,EAAGhC,EAAE,GACLkB,EAAGlB,EAAE,GACLiB,EAAGA,EAEP,CACA,SAAS4C,EAAO7D,EAAG8D,GACjB,IAAI3D,EAAI4C,EAAQ/C,GAChBG,EAAE,GAAKoD,EAAIpD,EAAE,GAAK2D,GAClB3D,EAAIiD,EAAQjD,GACZH,EAAE+B,EAAI5B,EAAE,GACRH,EAAEgC,EAAI7B,EAAE,GACRH,EAAEkB,EAAIf,EAAE,EACV,CACA,SAAS4D,EAAU/D,GACjB,IAAKA,EACH,OAEF,MAAMiB,EAAI8B,EAAQ/C,GACZG,EAAIc,EAAE,GACNsB,EAAI9B,EAAIQ,EAAE,IACVf,EAAIO,EAAIQ,EAAE,IAChB,OAAOjB,EAAEiB,EAAI,IACT,QAAQd,MAAMoC,OAAOrC,OAAOM,EAAIR,EAAEiB,MAClC,OAAOd,MAAMoC,OAAOrC,KAC1B,CAEA,MAAMnB,EAAM,CACViF,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH3D,EAAG,KACH4D,EAAG,KACHC,EAAG,KACH5D,EAAG,KACHC,EAAG,QACHC,EAAG,QACH2D,EAAG,KACHC,EAAG,WACH3D,EAAG,KACH4D,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH/D,EAAG,KACHgE,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIC,EACJ,SAASC,EAAU/M,GACZ8M,IACHA,EApBJ,WACE,MAAME,EAAW,CAAC,EACZC,EAAOC,OAAOD,KAAKxJ,GACnB0J,EAAQD,OAAOD,KAAK9P,GAC1B,IAAI+D,EAAGkM,EAAGvM,EAAGwM,EAAIC,EACjB,IAAKpM,EAAI,EAAGA,EAAI+L,EAAK3P,OAAQ4D,IAAK,CAEhC,IADAmM,EAAKC,EAAKL,EAAK/L,GACVkM,EAAI,EAAGA,EAAID,EAAM7P,OAAQ8P,IAC5BvM,EAAIsM,EAAMC,GACVE,EAAKA,EAAGC,QAAQ1M,EAAG1D,EAAI0D,IAEzBA,EAAI2M,SAAS/J,EAAQ4J,GAAK,IAC1BL,EAASM,GAAM,CAACzM,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOmM,CACT,CAKYS,GACRX,EAAMY,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMrO,EAAIyN,EAAM9M,EAAI2N,eACpB,OAAOtO,GAAK,CACVc,EAAGd,EAAE,GACLe,EAAGf,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAE/B,OAAe+B,EAAE,GAAK,IAE/B,CAEA,MAAMuO,EAAS,uGACf,SAASC,EAAS7N,GAChB,MAAM6B,EAAI+L,EAAO9L,KAAK9B,GACtB,IACIG,EAAGC,EAAGd,EADND,EAAI,IAER,GAAKwC,EAAL,CAGA,GAAIA,EAAE,KAAO1B,EAAG,CACd,MAAM/B,GAAKyD,EAAE,GACbxC,EAAIwC,EAAE,GAAKpD,EAAIL,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANA+B,GAAK0B,EAAE,GACPzB,GAAKyB,EAAE,GACPvC,GAAKuC,EAAE,GACP1B,EAAI,KAAO0B,EAAE,GAAKpD,EAAI0B,GAAK9B,EAAI8B,EAAG,EAAG,MACrCC,EAAI,KAAOyB,EAAE,GAAKpD,EAAI2B,GAAK/B,EAAI+B,EAAG,EAAG,MACrCd,EAAI,KAAOuC,EAAE,GAAKpD,EAAIa,GAAKjB,EAAIiB,EAAG,EAAG,MAC9B,CACLa,EAAGA,EACHC,EAAGA,EACHd,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CACA,SAASyO,EAAU1P,GACjB,OAAOA,IACLA,EAAEiB,EAAI,IACF,QAAQjB,EAAE+B,MAAM/B,EAAEgC,MAAMhC,EAAEkB,MAAMV,EAAIR,EAAEiB,MACtC,OAAOjB,EAAE+B,MAAM/B,EAAEgC,MAAMhC,EAAEkB,KAEjC,CAEA,MAAMyO,EAAK3P,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBb,KAAKyQ,IAAI5P,EAAG,EAAM,KAAe,KACxE6P,EAAO7P,GAAKA,GAAK,OAAUA,EAAI,MAAQb,KAAKyQ,KAAK5P,EAAI,MAAS,MAAO,KAa3E,SAAS8P,EAAO9P,EAAG8C,EAAGiN,GACpB,GAAI/P,EAAG,CACL,IAAIgQ,EAAMjN,EAAQ/C,GAClBgQ,EAAIlN,GAAK3D,KAAKC,IAAI,EAAGD,KAAKiB,IAAI4P,EAAIlN,GAAKkN,EAAIlN,GAAKiN,EAAa,IAANjN,EAAU,IAAM,IACvEkN,EAAM5M,EAAQ4M,GACdhQ,EAAE+B,EAAIiO,EAAI,GACVhQ,EAAEgC,EAAIgO,EAAI,GACVhQ,EAAEkB,EAAI8O,EAAI,EACZ,CACF,CACA,SAASC,EAAMjQ,EAAGkQ,GAChB,OAAOlQ,EAAI8O,OAAOqB,OAAOD,GAAS,CAAC,EAAGlQ,GAAKA,CAC7C,CACA,SAASoQ,EAAWC,GAClB,IAAIrQ,EAAI,CAAC+B,EAAG,EAAGC,EAAG,EAAGd,EAAG,EAAGD,EAAG,KAY9B,OAXIiC,MAAMC,QAAQkN,GACZA,EAAMnR,QAAU,IAClBc,EAAI,CAAC+B,EAAGsO,EAAM,GAAIrO,EAAGqO,EAAM,GAAInP,EAAGmP,EAAM,GAAIpP,EAAG,KAC3CoP,EAAMnR,OAAS,IACjBc,EAAEiB,EAAIV,EAAI8P,EAAM,OAIpBrQ,EAAIiQ,EAAMI,EAAO,CAACtO,EAAG,EAAGC,EAAG,EAAGd,EAAG,EAAGD,EAAG,KACrCA,EAAIV,EAAIP,EAAEiB,GAEPjB,CACT,CAOA,MAAMsQ,EACJC,YAAYF,GACV,GAAIA,aAAiBC,EACnB,OAAOD,EAET,MAAM5Q,SAAc4Q,EACpB,IAAIrQ,EAZR,IAAuB4B,EAaN,WAATnC,EACFO,EAAIoQ,EAAWC,GACG,WAAT5Q,IACTO,EAAI2B,EAAS0O,IAAU1B,EAAU0B,KAff,OADDzO,EAgBwCyO,GAfrDG,OAAO,GACNf,EAAS7N,GAEX4B,EAAS5B,KAcd6O,KAAKC,KAAO1Q,EACZyQ,KAAKE,SAAW3Q,CAClB,CACI4Q,YACF,OAAOH,KAAKE,MACd,CACI9N,UACF,IAAI7C,EAAIiQ,EAAMQ,KAAKC,MAInB,OAHI1Q,IACFA,EAAEiB,EAAIT,EAAIR,EAAEiB,IAEPjB,CACT,CACI6C,QAAIgO,GACNJ,KAAKC,KAAON,EAAWS,EACzB,CACAnB,YACE,OAAOe,KAAKE,OAASjB,EAAUe,KAAKC,WAAQtO,CAC9C,CACAH,YACE,OAAOwO,KAAKE,OAAS1O,EAAUwO,KAAKC,WAAQtO,CAC9C,CACA2B,YACE,OAAO0M,KAAKE,OAAS5M,EAAU0M,KAAKC,WAAQtO,CAC9C,CACA0O,IAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKR,KAAK5N,IACVqO,EAAKH,EAAMlO,IACjB,IAAIsO,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1BpO,EAAI,EAAIwO,EAAI,EACZnQ,EAAIgQ,EAAGhQ,EAAIiQ,EAAGjQ,EACdoQ,IAAOzO,EAAI3B,IAAO,EAAI2B,GAAKA,EAAI3B,IAAM,EAAI2B,EAAI3B,IAAM,GAAK,EAC9DkQ,EAAK,EAAIE,EACTJ,EAAGlP,EAAI,IAAOsP,EAAKJ,EAAGlP,EAAIoP,EAAKD,EAAGnP,EAAI,GACtCkP,EAAGjP,EAAI,IAAOqP,EAAKJ,EAAGjP,EAAImP,EAAKD,EAAGlP,EAAI,GACtCiP,EAAG/P,EAAI,IAAOmQ,EAAKJ,EAAG/P,EAAIiQ,EAAKD,EAAGhQ,EAAI,GACtC+P,EAAGhQ,EAAImQ,EAAIH,EAAGhQ,GAAK,EAAImQ,GAAKF,EAAGjQ,EAC/BwP,KAAK5N,IAAMoO,CACb,CACA,OAAOR,IACT,CACAa,YAAYP,EAAOQ,GAIjB,OAHIR,IACFN,KAAKC,KAvGX,SAAqBc,EAAMC,EAAMF,GAC/B,MAAMxP,EAAI8N,EAAKrP,EAAIgR,EAAKzP,IAClBC,EAAI6N,EAAKrP,EAAIgR,EAAKxP,IAClBd,EAAI2O,EAAKrP,EAAIgR,EAAKtQ,IACxB,MAAO,CACLa,EAAGxB,EAAIoP,EAAG5N,EAAIwP,GAAK1B,EAAKrP,EAAIiR,EAAK1P,IAAMA,KACvCC,EAAGzB,EAAIoP,EAAG3N,EAAIuP,GAAK1B,EAAKrP,EAAIiR,EAAKzP,IAAMA,KACvCd,EAAGX,EAAIoP,EAAGzO,EAAIqQ,GAAK1B,EAAKrP,EAAIiR,EAAKvQ,IAAMA,KACvCD,EAAGuQ,EAAKvQ,EAAIsQ,GAAKE,EAAKxQ,EAAIuQ,EAAKvQ,GAEnC,CA6FkBqQ,CAAYb,KAAKC,KAAMK,EAAML,KAAMa,IAE1Cd,IACT,CACAR,QACE,OAAO,IAAIK,EAAMG,KAAK5N,IACxB,CACAV,MAAMlB,GAEJ,OADAwP,KAAKC,KAAKzP,EAAIV,EAAIU,GACXwP,IACT,CACAiB,QAAQ3B,GAGN,OAFYU,KAAKC,KACbzP,GAAK,EAAI8O,EACNU,IACT,CACAkB,YACE,MAAM9O,EAAM4N,KAAKC,KACXkB,EAAM7R,EAAc,GAAR8C,EAAId,EAAkB,IAARc,EAAIb,EAAmB,IAARa,EAAI3B,GAEnD,OADA2B,EAAId,EAAIc,EAAIb,EAAIa,EAAI3B,EAAI0Q,EACjBnB,IACT,CACAoB,QAAQ9B,GAGN,OAFYU,KAAKC,KACbzP,GAAK,EAAI8O,EACNU,IACT,CACAqB,SACE,MAAM9R,EAAIyQ,KAAKC,KAIf,OAHA1Q,EAAE+B,EAAI,IAAM/B,EAAE+B,EACd/B,EAAEgC,EAAI,IAAMhC,EAAEgC,EACdhC,EAAEkB,EAAI,IAAMlB,EAAEkB,EACPuP,IACT,CACAsB,QAAQhC,GAEN,OADAD,EAAOW,KAAKC,KAAM,EAAGX,GACdU,IACT,CACAuB,OAAOjC,GAEL,OADAD,EAAOW,KAAKC,KAAM,GAAIX,GACfU,IACT,CACAwB,SAASlC,GAEP,OADAD,EAAOW,KAAKC,KAAM,EAAGX,GACdU,IACT,CACAyB,WAAWnC,GAET,OADAD,EAAOW,KAAKC,KAAM,GAAIX,GACfU,IACT,CACA5M,OAAOC,GAEL,OADAD,EAAO4M,KAAKC,KAAM5M,GACX2M,IACT,EAGF,SAAS0B,EAAU9B,GACjB,OAAO,IAAIC,EAAMD,EACnB,u+CCxkBA,EAAA+B,MAAA,YAAkB,EAAAC,eAGlB,QAAe,EAAK,6+BCMb,MAAMC,EACX/B,cACEE,KAAK8B,SAAW,KAChB9B,KAAK+B,QAAU,IAAIC,IACnBhC,KAAKiC,UAAW,EAChBjC,KAAKkC,eAAYvQ,CACnB,CAKAwQ,QAAQC,EAAOC,EAAOrU,EAAMgB,GAC1B,MAAMsT,EAAYD,EAAME,UAAUvT,GAC5BwT,EAAWH,EAAMI,SAEvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzBP,QACAQ,QAASP,EAAMO,QACfJ,WACAK,YAAanU,KAAKiB,IAAI3B,EAAOqU,EAAMS,MAAON,MAE9C,CAKAO,WACM/C,KAAK8B,WAGT9B,KAAKiC,UAAW,EAEhBjC,KAAK8B,SAAWkB,EAAAA,EAAAA,KAAsBC,QAAQ,KAC5CjD,KAAKkD,UACLlD,KAAK8B,SAAW,KAEZ9B,KAAKiC,UACPjC,KAAK+C,cAGX,CAKAG,QAAQlV,EAAOmV,KAAKC,OAClB,IAAIC,EAAY,EAEhBrD,KAAK+B,QAAQW,SAAQ,CAACL,EAAOD,KAC3B,IAAKC,EAAMiB,UAAYjB,EAAMkB,MAAM9U,OACjC,OAEF,MAAM8U,EAAQlB,EAAMkB,MACpB,IAEIC,EAFAnR,EAAIkR,EAAM9U,OAAS,EACnBgV,GAAO,EAGX,KAAOpR,GAAK,IAAKA,EACfmR,EAAOD,EAAMlR,GAETmR,EAAKE,SACHF,EAAKG,OAAStB,EAAMI,WAGtBJ,EAAMI,SAAWe,EAAKG,QAExBH,EAAKI,KAAK5V,GACVyV,GAAO,IAIPF,EAAMlR,GAAKkR,EAAMA,EAAM9U,OAAS,GAChC8U,EAAMM,OAINJ,IACFrB,EAAMqB,OACNzD,KAAKmC,QAAQC,EAAOC,EAAOrU,EAAM,aAG9BuV,EAAM9U,SACT4T,EAAMiB,SAAU,EAChBtD,KAAKmC,QAAQC,EAAOC,EAAOrU,EAAM,YACjCqU,EAAMO,SAAU,GAGlBS,GAAaE,EAAM9U,MAAM,IAG3BuR,KAAKkC,UAAYlU,EAEC,IAAdqV,IACFrD,KAAKiC,UAAW,EAEpB,CAKA6B,UAAU1B,GACR,MAAM2B,EAAS/D,KAAK+B,QACpB,IAAIM,EAAQ0B,EAAOC,IAAI5B,GAavB,OAZKC,IACHA,EAAQ,CACNiB,SAAS,EACTV,SAAS,EACTW,MAAO,GACPhB,UAAW,CACT1T,SAAU,GACVoV,SAAU,KAGdF,EAAOG,IAAI9B,EAAOC,IAEbA,CACT,CAOA8B,OAAO/B,EAAOgC,EAAOC,GACnBrE,KAAK8D,UAAU1B,GAAOG,UAAU6B,GAAOE,KAAKD,EAC9C,CAOAE,IAAInC,EAAOmB,GACJA,GAAUA,EAAM9U,QAGrBuR,KAAK8D,UAAU1B,GAAOmB,MAAMe,QAAQf,EACtC,CAMAiB,IAAIpC,GACF,OAAOpC,KAAK8D,UAAU1B,GAAOmB,MAAM9U,OAAS,CAC9C,CAMAqU,MAAMV,GACJ,MAAMC,EAAQrC,KAAK+B,QAAQiC,IAAI5B,GAC1BC,IAGLA,EAAMiB,SAAU,EAChBjB,EAAMS,MAAQK,KAAKC,MACnBf,EAAMI,SAAWJ,EAAMkB,MAAMkB,QAAO,CAACC,EAAKC,IAAQjW,KAAKC,IAAI+V,EAAKC,EAAIC,YAAY,GAChF5E,KAAK+C,WACP,CAEAO,QAAQlB,GACN,IAAKpC,KAAKiC,SACR,OAAO,EAET,MAAMI,EAAQrC,KAAK+B,QAAQiC,IAAI5B,GAC/B,SAAKC,GAAUA,EAAMiB,SAAYjB,EAAMkB,MAAM9U,OAI/C,CAMAoW,KAAKzC,GACH,MAAMC,EAAQrC,KAAK+B,QAAQiC,IAAI5B,GAC/B,IAAKC,IAAUA,EAAMkB,MAAM9U,OACzB,OAEF,MAAM8U,EAAQlB,EAAMkB,MACpB,IAAIlR,EAAIkR,EAAM9U,OAAS,EAEvB,KAAO4D,GAAK,IAAKA,EACfkR,EAAMlR,GAAGyS,SAEXzC,EAAMkB,MAAQ,GACdvD,KAAKmC,QAAQC,EAAOC,EAAOc,KAAKC,MAAO,WACzC,CAMA2B,OAAO3C,GACL,OAAOpC,KAAK+B,QAAQiD,OAAO5C,EAC7B,EAIF,MAA+B,IAAIP,ECjNnC,MAAMhD,EAAc,cACdoG,EAAgB,CACpBC,QAAAA,CAAQ9F,EAAMF,EAAIiG,IACTA,EAAS,GAAMjG,EAAKE,EAO7BkB,MAAMlB,EAAMF,EAAIiG,GACd,MAAMC,GAAKC,EAAAA,EAAAA,GAAajG,GAAQP,GAC1B2B,EAAK4E,EAAGjF,QAASkF,EAAAA,EAAAA,GAAanG,GAAML,GAC1C,OAAO2B,GAAMA,EAAGL,MACZK,EAAGH,IAAI+E,EAAID,GAAQ3T,YACnB0N,CACN,EACAoG,OAAAA,CAAOlG,EAAMF,EAAIiG,IACR/F,GAAQF,EAAKE,GAAQ+F,GAIjB,MAAMI,EACnBzF,YAAY0F,EAAKC,EAAQC,EAAMxG,GAC7B,MAAMyG,EAAeF,EAAOC,GAE5BxG,GAAK0G,EAAAA,EAAAA,GAAQ,CAACJ,EAAItG,GAAIA,EAAIyG,EAAcH,EAAIpG,OAC5C,MAAMA,GAAOwG,EAAAA,EAAAA,GAAQ,CAACJ,EAAIpG,KAAMuG,EAAczG,IAE9Cc,KAAK0D,SAAU,EACf1D,KAAK6F,IAAML,EAAI7C,IAAMsC,EAAcO,EAAIxW,aAAeoQ,GACtDY,KAAK8F,QAAUC,EAAAA,EAAQP,EAAIQ,SAAWD,EAAAA,EAAAA,OACtC/F,KAAKiG,OAASvX,KAAKwX,MAAM/C,KAAKC,OAASoC,EAAIW,OAAS,IACpDnG,KAAK4E,UAAY5E,KAAK2D,OAASjV,KAAKwX,MAAMV,EAAI/C,UAC9CzC,KAAKoG,QAAUZ,EAAIa,KACnBrG,KAAKsG,QAAUb,EACfzF,KAAKuG,MAAQb,EACb1F,KAAKwG,MAAQpH,EACbY,KAAKyG,IAAMvH,EACXc,KAAK0G,eAAY/U,CACnB,CAEAgV,SACE,OAAO3G,KAAK0D,OACd,CAEAkD,OAAOpB,EAAKtG,EAAIlR,GACd,GAAIgS,KAAK0D,QAAS,CAChB1D,KAAKmC,SAAQ,GAEb,MAAMwD,EAAe3F,KAAKsG,QAAQtG,KAAKuG,OACjCM,EAAU7Y,EAAOgS,KAAKiG,OACtBa,EAAS9G,KAAK4E,UAAYiC,EAChC7G,KAAKiG,OAASjY,EACdgS,KAAK4E,UAAYlW,KAAKwX,MAAMxX,KAAKC,IAAImY,EAAQtB,EAAI/C,WACjDzC,KAAK2D,QAAUkD,EACf7G,KAAKoG,QAAUZ,EAAIa,KACnBrG,KAAKyG,KAAMb,EAAAA,EAAAA,GAAQ,CAACJ,EAAItG,GAAIA,EAAIyG,EAAcH,EAAIpG,OAClDY,KAAKwG,OAAQZ,EAAAA,EAAAA,GAAQ,CAACJ,EAAIpG,KAAMuG,EAAczG,IAElD,CAEA4F,SACM9E,KAAK0D,UAEP1D,KAAK4D,KAAKT,KAAKC,OACfpD,KAAK0D,SAAU,EACf1D,KAAKmC,SAAQ,GAEjB,CAEAyB,KAAK5V,GACH,MAAM6Y,EAAU7Y,EAAOgS,KAAKiG,OACtBxD,EAAWzC,KAAK4E,UAChBc,EAAO1F,KAAKuG,MACZnH,EAAOY,KAAKwG,MACZH,EAAOrG,KAAKoG,MACZlH,EAAKc,KAAKyG,IAChB,IAAItB,EAIJ,GAFAnF,KAAK0D,QAAUtE,IAASF,IAAOmH,GAASQ,EAAUpE,IAE7CzC,KAAK0D,QAGR,OAFA1D,KAAKsG,QAAQZ,GAAQxG,OACrBc,KAAKmC,SAAQ,GAIX0E,EAAU,EACZ7G,KAAKsG,QAAQZ,GAAQtG,GAIvB+F,EAAU0B,EAAUpE,EAAY,EAChC0C,EAASkB,GAAQlB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASnF,KAAK8F,QAAQpX,KAAKiB,IAAI,EAAGjB,KAAKC,IAAI,EAAGwW,KAE9CnF,KAAKsG,QAAQZ,GAAQ1F,KAAK6F,IAAIzG,EAAMF,EAAIiG,GAC1C,CAEA4B,OACE,MAAMC,EAAWhH,KAAK0G,YAAc1G,KAAK0G,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACvBH,EAAS1C,KAAK,CAAC4C,MAAKC,OAAG,GAE3B,CAEAhF,QAAQiF,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWhH,KAAK0G,WAAa,GACnC,IAAK,IAAIrU,EAAI,EAAGA,EAAI2U,EAASvY,OAAQ4D,IACnC2U,EAAS3U,GAAGgV,IAEhB,EChHa,MAAMC,EACnBxH,YAAYsC,EAAOmF,GACjBvH,KAAKwH,OAASpF,EACdpC,KAAKyH,YAAc,IAAIzF,IACvBhC,KAAK0H,UAAUH,EACjB,CAEAG,UAAUH,GACR,KAAKI,EAAAA,EAAAA,GAASJ,GACZ,OAGF,MAAMK,EAAmBvJ,OAAOD,KAAKyJ,EAAAA,EAAAA,WAC/BC,EAAgB9H,KAAKyH,YAE3BpJ,OAAO0J,oBAAoBR,GAAQ7E,SAAQsF,IACzC,MAAMxC,EAAM+B,EAAOS,GACnB,KAAKL,EAAAA,EAAAA,GAASnC,GACZ,OAEF,MAAM4B,EAAW,CAAC,EAClB,IAAK,MAAMa,KAAUL,EACnBR,EAASa,GAAUzC,EAAIyC,KAGxBvV,EAAAA,EAAAA,GAAQ8S,EAAI0C,aAAe1C,EAAI0C,YAAc,CAACF,IAAMtF,SAASgD,IACxDA,IAASsC,GAAQF,EAActD,IAAIkB,IACrCoC,EAAc5D,IAAIwB,EAAM0B,KAE5B,GAEJ,CAMAe,gBAAgB1C,EAAQ2C,GACtB,MAAMC,EAAaD,EAAOE,QACpBA,EAsGV,SAA8B7C,EAAQ4C,GACpC,IAAKA,EACH,OAEF,IAAIC,EAAU7C,EAAO6C,QACrB,IAAKA,EAEH,YADA7C,EAAO6C,QAAUD,GAGfC,EAAQC,UAGV9C,EAAO6C,QAAUA,EAAUjK,OAAOqB,OAAO,CAAC,EAAG4I,EAAS,CAACC,SAAS,EAAOC,YAAa,CAAC,KAEvF,OAAOF,CACT,CArHoBG,CAAqBhD,EAAQ4C,GAC7C,IAAKC,EACH,MAAO,GAGT,MAAMI,EAAa1I,KAAK2I,kBAAkBL,EAASD,GAYnD,OAXIA,EAAWE,SAmFnB,SAAkBG,EAAYR,GAC5B,MAAM5E,EAAU,GACVlF,EAAOC,OAAOD,KAAK8J,GACzB,IAAK,IAAI7V,EAAI,EAAGA,EAAI+L,EAAK3P,OAAQ4D,IAAK,CACpC,MAAMuW,EAAOF,EAAWtK,EAAK/L,IACzBuW,GAAQA,EAAKjC,UACfrD,EAAQgB,KAAKsE,EAAK7B,OAEtB,CAEA,OAAOE,QAAQ4B,IAAIvF,EACrB,CA1FMwF,CAASrD,EAAO6C,QAAQE,YAAaH,GAAYU,MAAK,KACpDtD,EAAO6C,QAAUD,CAAAA,IAChB,SAKEK,CACT,CAKAC,kBAAkBlD,EAAQ2C,GACxB,MAAMN,EAAgB9H,KAAKyH,YACrBiB,EAAa,GACbpF,EAAUmC,EAAO+C,cAAgB/C,EAAO+C,YAAc,CAAC,GACvDQ,EAAQ3K,OAAOD,KAAKgK,GACpBpa,EAAOmV,KAAKC,MAClB,IAAI/Q,EAEJ,IAAKA,EAAI2W,EAAMva,OAAS,EAAG4D,GAAK,IAAKA,EAAG,CACtC,MAAMqT,EAAOsD,EAAM3W,GACnB,GAAuB,MAAnBqT,EAAK3F,OAAO,GACd,SAGF,GAAa,YAAT2F,EAAoB,CACtBgD,EAAWpE,QAAQtE,KAAKmI,gBAAgB1C,EAAQ2C,IAChD,SAEF,MAAMa,EAAQb,EAAO1C,GACrB,IAAIwD,EAAY5F,EAAQoC,GACxB,MAAMF,EAAMsC,EAAc9D,IAAI0B,GAE9B,GAAIwD,EAAW,CACb,GAAI1D,GAAO0D,EAAUvC,SAAU,CAE7BuC,EAAUtC,OAAOpB,EAAKyD,EAAOjb,GAC7B,SAEAkb,EAAUpE,SAGTU,GAAQA,EAAI/C,UAMjBa,EAAQoC,GAAQwD,EAAY,IAAI3D,EAAUC,EAAKC,EAAQC,EAAMuD,GAC7DP,EAAWpE,KAAK4E,IALdzD,EAAOC,GAAQuD,CAMnB,CACA,OAAOP,CACT,CASA9B,OAAOnB,EAAQ2C,GACb,GAA8B,IAA1BpI,KAAKyH,YAAY0B,KAGnB,YADA9K,OAAOqB,OAAO+F,EAAQ2C,GAIxB,MAAMM,EAAa1I,KAAK2I,kBAAkBlD,EAAQ2C,GAElD,OAAIM,EAAWja,QACb2a,EAAS7E,IAAIvE,KAAKwH,OAAQkB,IACnB,QAFT,CAIF,ECvHF,SAASW,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAMhB,SAAW,CAAC,EAClCmB,EAAUD,EAAKC,QACf9Z,OAAmBgC,IAAb6X,EAAK7Z,IAAoB4Z,EAAkB,EACjD5a,OAAmBgD,IAAb6X,EAAK7a,IAAoB4a,EAAkB,EACvD,MAAO,CACLzG,MAAO2G,EAAU9a,EAAMgB,EACvB+Z,IAAKD,EAAU9Z,EAAMhB,EAEzB,CAsCA,SAASgb,EAAwBvH,EAAOwH,GACtC,MAAMxL,EAAO,GACPyL,EAAWzH,EAAM0H,uBAAuBF,GAC9C,IAAIvX,EAAG0X,EAEP,IAAK1X,EAAI,EAAG0X,EAAOF,EAASpb,OAAQ4D,EAAI0X,IAAQ1X,EAC9C+L,EAAKkG,KAAKuF,EAASxX,GAAG2X,OAExB,OAAO5L,CACT,CAEA,SAAS6L,EAAWC,EAAOjB,EAAOkB,EAAS7B,EAAU,CAAC,GACpD,MAAMlK,EAAO8L,EAAM9L,KACbgM,EAA8B,WAAjB9B,EAAQ+B,KAC3B,IAAIhY,EAAG0X,EAAMO,EAAcC,EAE3B,GAAc,OAAVtB,EAAJ,CAIA,IAAK5W,EAAI,EAAG0X,EAAO3L,EAAK3P,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAE7C,GADAiY,GAAgBlM,EAAK/L,GACjBiY,IAAiBH,EAAS,CAC5B,GAAI7B,EAAQO,IACV,SAEF,MAEF0B,EAAaL,EAAM9B,OAAOkC,IACtBE,EAAAA,EAAAA,GAASD,KAAgBH,GAAyB,IAAVnB,IAAewB,EAAAA,EAAAA,GAAKxB,MAAWwB,EAAAA,EAAAA,GAAKF,MAC9EtB,GAASsB,EAEb,CACA,OAAOtB,EACT,CAgBA,SAASyB,EAAUpB,EAAOqB,GACxB,MAAMC,EAAUtB,GAASA,EAAMhB,QAAQsC,QACvC,OAAOA,QAAwBjZ,IAAZiZ,QAAwCjZ,IAAfgZ,EAAKT,KACnD,CAcA,SAASW,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CAEA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAUpc,GACpD,IAAK,MAAM2b,KAAQQ,EAAOE,wBAAwBrc,GAAMya,UAAW,CACjE,MAAMR,EAAQiB,EAAMS,EAAKX,OACzB,GAAI,GAAaf,EAAQ,IAAQmC,GAAYnC,EAAQ,EACnD,OAAO0B,EAAKX,KAEhB,CAEA,OAAO,IACT,CAEA,SAASsB,EAAaC,EAAYC,GAChC,MAAM,MAACpJ,EAAOqJ,YAAad,GAAQY,EAC7BT,EAAS1I,EAAMsJ,UAAYtJ,EAAMsJ,QAAU,CAAC,IAC5C,OAACC,EAAAA,OAAQR,EAAQnB,MAAOM,GAAgBK,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf7D,EAlCR,SAAqB+D,EAAYC,EAAYrB,GAC3C,MAAO,GAAGoB,EAAWxd,MAAMyd,EAAWzd,MAAMoc,EAAKT,OAASS,EAAK3b,MACjE,CAgCcid,CAAYN,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAO/c,OACpB,IAAIyb,EAEJ,IAAK,IAAI7X,EAAI,EAAGA,EAAI0X,IAAQ1X,EAAG,CAC7B,MAAMmR,EAAOgI,EAAOnZ,IACb,CAACuZ,GAAQ5B,EAAO,CAAC8B,GAAQ7C,GAASzF,EAEzC0G,GADmB1G,EAAKkI,UAAYlI,EAAKkI,QAAU,CAAC,IACjCI,GAASjB,EAAiBC,EAAQ9C,EAAKgC,GAC1DE,EAAMI,GAAgBrB,EAEtBiB,EAAMgC,KAAOhB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAK3b,MAC3Dkb,EAAMiC,QAAUjB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAK3b,OAE1Ckb,EAAMkC,gBAAkBlC,EAAMkC,cAAgB,CAAC,IACvD9B,GAAgBrB,CAC/B,CACF,CAEA,SAASoD,EAAgBjK,EAAOyJ,GAC9B,MAAMS,EAASlK,EAAMkK,OACrB,OAAOjO,OAAOD,KAAKkO,GAAQC,QAAOvE,GAAOsE,EAAOtE,GAAK6D,OAASA,IAAMW,OACtE,CA4BA,SAASC,EAAY9B,EAAMpH,GAEzB,MAAM+G,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAIAtI,EAAQA,GAASoH,EAAK+B,QACtB,IAAK,MAAMlB,KAAUjI,EAAO,CAC1B,MAAMuH,EAASU,EAAOE,QACtB,IAAKZ,QAA2BnZ,IAAjBmZ,EAAOe,SAAsDla,IAA/BmZ,EAAOe,GAAMvB,GACxD,cAEKQ,EAAOe,GAAMvB,QACe3Y,IAA/BmZ,EAAOe,GAAMO,oBAA4Eza,IAA7CmZ,EAAOe,GAAMO,cAAc9B,WAClEQ,EAAOe,GAAMO,cAAc9B,EAEtC,EACF,CAEA,MAAMqC,EAAsBtC,GAAkB,UAATA,GAA6B,SAATA,EACnDuC,EAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASxO,OAAOqB,OAAO,CAAC,EAAGmN,GAIlE,MAAME,EAKnBC,gBAAkB,GAKlBA,0BAA4B,KAK5BA,uBAAyB,KAMzBlN,YAAYsC,EAAOkI,GACjBtK,KAAKoC,MAAQA,EACbpC,KAAKiN,KAAO7K,EAAM8K,IAClBlN,KAAKgK,MAAQM,EACbtK,KAAKmN,gBAAkB,CAAC,EACxBnN,KAAKyL,YAAczL,KAAKoN,UACxBpN,KAAKqN,MAAQrN,KAAKyL,YAAYzc,KAC9BgR,KAAKsI,aAAU3W,EAEfqO,KAAKsN,UAAW,EAChBtN,KAAKuN,WAAQ5b,EACbqO,KAAKwN,iBAAc7b,EACnBqO,KAAKyN,oBAAiB9b,EACtBqO,KAAK0N,gBAAa/b,EAClBqO,KAAK2N,gBAAahc,EAClBqO,KAAK4N,qBAAsB,EAC3B5N,KAAK6N,oBAAqB,EAC1B7N,KAAK8N,cAAWnc,EAChBqO,KAAK+N,UAAY,GACjB/N,KAAKgO,8BAAgCA,mBACrChO,KAAKiO,2BAA6BA,gBAElCjO,KAAKkO,YACP,CAEAA,aACE,MAAMvD,EAAO3K,KAAKyL,YAClBzL,KAAK0H,YACL1H,KAAKmO,aACLxD,EAAKyD,SAAW1D,EAAUC,EAAKQ,OAAQR,GACvC3K,KAAKqO,cAEDrO,KAAKsI,QAAQgG,OAAStO,KAAKoC,MAAMmM,gBAAgB,WACnDC,QAAQC,KAAK,qKAEjB,CAEAC,YAAYpE,GACNtK,KAAKgK,QAAUM,GACjBmC,EAAYzM,KAAKyL,aAEnBzL,KAAKgK,MAAQM,CACf,CAEA6D,aACE,MAAM/L,EAAQpC,KAAKoC,MACbuI,EAAO3K,KAAKyL,YACZkD,EAAU3O,KAAK4O,aAEfC,EAAW,CAAChD,EAAMtY,EAAGub,EAAGxd,IAAe,MAATua,EAAetY,EAAa,MAATsY,EAAeva,EAAIwd,EAEpEC,EAAMpE,EAAKqE,SAAUC,EAAAA,EAAAA,GAAeN,EAAQK,QAAS3C,EAAgBjK,EAAO,MAC5E8M,EAAMvE,EAAKwE,SAAUF,EAAAA,EAAAA,GAAeN,EAAQQ,QAAS9C,EAAgBjK,EAAO,MAC5EgN,EAAMzE,EAAK0E,SAAUJ,EAAAA,EAAAA,GAAeN,EAAQU,QAAShD,EAAgBjK,EAAO,MAC5EkN,EAAY3E,EAAK2E,UACjBC,EAAM5E,EAAK6E,QAAUX,EAASS,EAAWP,EAAKG,EAAKE,GACnDK,EAAM9E,EAAK+E,QAAUb,EAASS,EAAWJ,EAAKH,EAAKK,GACzDzE,EAAKgF,OAAS3P,KAAK4P,cAAcb,GACjCpE,EAAKkF,OAAS7P,KAAK4P,cAAcV,GACjCvE,EAAKmF,OAAS9P,KAAK4P,cAAcR,GACjCzE,EAAKgB,OAAS3L,KAAK4P,cAAcL,GACjC5E,EAAKQ,OAASnL,KAAK4P,cAAcH,EACnC,CAEAb,aACE,OAAO5O,KAAKoC,MAAMnT,KAAKE,SAAS6Q,KAAKgK,MACvC,CAEAoD,UACE,OAAOpN,KAAKoC,MAAM2N,eAAe/P,KAAKgK,MACxC,CAMA4F,cAAcI,GACZ,OAAOhQ,KAAKoC,MAAMkK,OAAO0D,EAC3B,CAKAC,eAAe3G,GACb,MAAMqB,EAAO3K,KAAKyL,YAClB,OAAOnC,IAAUqB,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,MACX,CAEAuE,QACElQ,KAAKkD,QAAQ,QACf,CAKAiN,WACE,MAAMxF,EAAO3K,KAAKyL,YACdzL,KAAKuN,QACP6C,EAAAA,EAAAA,GAAoBpQ,KAAKuN,MAAOvN,MAE9B2K,EAAKyD,UACP3B,EAAY9B,EAEhB,CAKA0F,aACE,MAAM1B,EAAU3O,KAAK4O,aACf3f,EAAO0f,EAAQ1f,OAAS0f,EAAQ1f,KAAO,IACvCse,EAAQvN,KAAKuN,MAMnB,IAAI5F,EAAAA,EAAAA,GAAS1Y,GACX+Q,KAAKuN,MA9QX,SAAkCte,GAChC,MAAMmP,EAAOC,OAAOD,KAAKnP,GACnBqhB,EAAQ,IAAI7d,MAAM2L,EAAK3P,QAC7B,IAAI4D,EAAG0X,EAAM/B,EACb,IAAK3V,EAAI,EAAG0X,EAAO3L,EAAK3P,OAAQ4D,EAAI0X,IAAQ1X,EAC1C2V,EAAM5J,EAAK/L,GACXie,EAAMje,GAAK,CACTkB,EAAGyU,EACH8G,EAAG7f,EAAK+Y,IAGZ,OAAOsI,CACT,CAkQmBC,CAAyBthB,QACjC,GAAIse,IAAUte,EAAM,CACzB,GAAIse,EAAO,EAET6C,EAAAA,EAAAA,GAAoB7C,EAAOvN,MAE3B,MAAM2K,EAAO3K,KAAKyL,YAClBgB,EAAY9B,GACZA,EAAK+B,QAAU,GAEbzd,GAAQoP,OAAOmS,aAAavhB,KAC9BwhB,EAAAA,EAAAA,GAAkBxhB,EAAM+Q,MAE1BA,KAAK+N,UAAY,GACjB/N,KAAKuN,MAAQte,EAEjB,CAEAof,cACE,MAAM1D,EAAO3K,KAAKyL,YAElBzL,KAAKqQ,aAEDrQ,KAAKgO,qBACPrD,EAAKgE,QAAU,IAAI3O,KAAKgO,mBAE5B,CAEA0C,sBAAsBC,GACpB,MAAMhG,EAAO3K,KAAKyL,YACZkD,EAAU3O,KAAK4O,aACrB,IAAIgC,GAAe,EAEnB5Q,KAAKqQ,aAGL,MAAMQ,EAAalG,EAAKyD,SACxBzD,EAAKyD,SAAW1D,EAAUC,EAAKQ,OAAQR,GAGnCA,EAAKT,QAAUyE,EAAQzE,QACzB0G,GAAe,EAEfnE,EAAY9B,GACZA,EAAKT,MAAQyE,EAAQzE,OAKvBlK,KAAK8Q,gBAAgBH,IAGjBC,GAAgBC,IAAelG,EAAKyD,WACtC9C,EAAatL,KAAM2K,EAAK+B,QAE5B,CAMAhF,YACE,MAAMH,EAASvH,KAAKoC,MAAMmF,OACpBwJ,EAAYxJ,EAAOyJ,iBAAiBhR,KAAKqN,OACzC4D,EAAS1J,EAAO2J,gBAAgBlR,KAAK4O,aAAcmC,GAAW,GACpE/Q,KAAKsI,QAAUf,EAAO4J,eAAeF,EAAQjR,KAAKoR,cAClDpR,KAAKsN,SAAWtN,KAAKsI,QAAQ+I,QAC7BrR,KAAKmN,gBAAkB,CAAC,CAC1B,CAMAmE,MAAMxO,EAAOyO,GACX,MAAO9F,YAAad,EAAM4C,MAAOte,GAAQ+Q,MACnC,OAAC2L,EAAAA,SAAQyC,GAAYzD,EACrBiB,EAAQD,EAAOE,KAErB,IAEIxZ,EAAGsS,EAAK6G,EAFRgG,EAAmB,IAAV1O,GAAeyO,IAAUtiB,EAAKR,QAAgBkc,EAAK8G,QAC5DC,EAAO5O,EAAQ,GAAK6H,EAAK+B,QAAQ5J,EAAQ,GAG7C,IAAsB,IAAlB9C,KAAKsN,SACP3C,EAAK+B,QAAUzd,EACf0b,EAAK8G,SAAU,EACfjG,EAASvc,MACJ,CAEHuc,GADE9Y,EAAAA,EAAAA,GAAQzD,EAAK6T,IACN9C,KAAK2R,eAAehH,EAAM1b,EAAM6T,EAAOyO,IACvC5J,EAAAA,EAAAA,GAAS1Y,EAAK6T,IACd9C,KAAK4R,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GAExCvR,KAAK6R,mBAAmBlH,EAAM1b,EAAM6T,EAAOyO,GAGtD,MAAMO,EAA6B,IAAqB,OAAfnN,EAAIiH,IAAoB8F,GAAQ/M,EAAIiH,GAAS8F,EAAK9F,GAC3F,IAAKvZ,EAAI,EAAGA,EAAIkf,IAASlf,EACvBsY,EAAK+B,QAAQra,EAAIyQ,GAAS6B,EAAM6G,EAAOnZ,GACnCmf,IACEM,MACFN,GAAS,GAEXE,EAAO/M,GAGXgG,EAAK8G,QAAUD,EAGbpD,GACF9C,EAAatL,KAAMwL,EAEvB,CAaAqG,mBAAmBlH,EAAM1b,EAAM6T,EAAOyO,GACpC,MAAM,OAAC5F,EAAAA,OAAQR,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf3c,EAASyc,EAAOoG,YAChBC,EAAcrG,IAAWR,EACzBK,EAAS,IAAI/Y,MAAM8e,GACzB,IAAIlf,EAAG0X,EAAMC,EAEb,IAAK3X,EAAI,EAAG0X,EAAOwH,EAAOlf,EAAI0X,IAAQ1X,EACpC2X,EAAQ3X,EAAIyQ,EACZ0I,EAAOnZ,GAAK,CACV,CAACuZ,GAAQoG,GAAerG,EAAO2F,MAAMpiB,EAAO8a,GAAQA,GACpD,CAAC8B,GAAQX,EAAOmG,MAAMriB,EAAK+a,GAAQA,IAGvC,OAAOwB,CACT,CAaAmG,eAAehH,EAAM1b,EAAM6T,EAAOyO,GAChC,MAAM,OAAC5B,EAAAA,OAAQE,GAAUlF,EACnBa,EAAS,IAAI/Y,MAAM8e,GACzB,IAAIlf,EAAG0X,EAAMC,EAAOxG,EAEpB,IAAKnR,EAAI,EAAG0X,EAAOwH,EAAOlf,EAAI0X,IAAQ1X,EACpC2X,EAAQ3X,EAAIyQ,EACZU,EAAOvU,EAAK+a,GACZwB,EAAOnZ,GAAK,CACVkB,EAAGoc,EAAO2B,MAAM9N,EAAK,GAAIwG,GACzB8E,EAAGe,EAAOyB,MAAM9N,EAAK,GAAIwG,IAG7B,OAAOwB,CACT,CAaAoG,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACjC,MAAM,OAAC5B,EAAAA,OAAQE,GAAUlF,GACnB,SAACsH,EAAW,aAAKC,EAAW,KAAOlS,KAAKsN,SACxC9B,EAAS,IAAI/Y,MAAM8e,GACzB,IAAIlf,EAAG0X,EAAMC,EAAOxG,EAEpB,IAAKnR,EAAI,EAAG0X,EAAOwH,EAAOlf,EAAI0X,IAAQ1X,EACpC2X,EAAQ3X,EAAIyQ,EACZU,EAAOvU,EAAK+a,GACZwB,EAAOnZ,GAAK,CACVkB,EAAGoc,EAAO2B,OAAMa,EAAAA,EAAAA,GAAiB3O,EAAMyO,GAAWjI,GAClD8E,EAAGe,EAAOyB,OAAMa,EAAAA,EAAAA,GAAiB3O,EAAM0O,GAAWlI,IAGtD,OAAOwB,CACT,CAKA4G,UAAUpI,GACR,OAAOhK,KAAKyL,YAAYiB,QAAQ1C,EAClC,CAKAqI,eAAerI,GACb,OAAOhK,KAAKyL,YAAYxc,KAAK+a,EAC/B,CAKAC,WAAWX,EAAOkC,EAAQnB,GACxB,MAAMjI,EAAQpC,KAAKoC,MACbuI,EAAO3K,KAAKyL,YACZxC,EAAQuC,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACZ7L,KAAMuL,EAAwBvH,GAAO,GACrCgG,OAAQoD,EAAOE,QAAQpC,EAAMuC,MAAMO,eAEZnD,EAAO0B,EAAKX,MAAO,CAACK,QAC/C,CAKAiI,sBAAsBC,EAAOjJ,EAAOkC,EAAQtB,GAC1C,MAAMsI,EAAchH,EAAOlC,EAAMuC,MACjC,IAAI5C,EAAwB,OAAhBuJ,EAAuBC,IAAMD,EACzC,MAAMpK,EAAS8B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS9B,IACX8B,EAAM9B,OAASA,EACfa,EAAQgB,EAAWC,EAAOsI,EAAaxS,KAAKyL,YAAYzB,QAE1DuI,EAAM5iB,IAAMjB,KAAKiB,IAAI4iB,EAAM5iB,IAAKsZ,GAChCsJ,EAAM5jB,IAAMD,KAAKC,IAAI4jB,EAAM5jB,IAAKsa,EAClC,CAKAyJ,UAAUpJ,EAAOqJ,GACf,MAAMhI,EAAO3K,KAAKyL,YACZiB,EAAU/B,EAAK+B,QACf8E,EAAS7G,EAAK8G,SAAWnI,IAAUqB,EAAKgB,OACxC5B,EAAO2C,EAAQje,OACfmkB,EAAa5S,KAAKiQ,eAAe3G,GACjCY,EA3YU,EAACyI,EAAUhI,EAAMvI,IAAUuQ,IAAahI,EAAKkI,QAAUlI,EAAKyD,UAC3E,CAAChQ,KAAMuL,EAAwBvH,GAAO,GAAOgG,OAAQ,MA0YxC0K,CAAYH,EAAUhI,EAAM3K,KAAKoC,OACzCmQ,EAAQ,CAAC5iB,IAAKojB,OAAOC,kBAAmBrkB,IAAKokB,OAAOE,oBACnDtjB,IAAKujB,EAAUvkB,IAAKwkB,GApf/B,SAAuB7J,GACrB,MAAM,IAAC3Z,EAAG,IAAEhB,EAAG,WAAEykB,EAAU,WAAEC,GAAc/J,EAAMgK,gBACjD,MAAO,CACL3jB,IAAKyjB,EAAazjB,EAAMojB,OAAOE,kBAC/BtkB,IAAK0kB,EAAa1kB,EAAMokB,OAAOC,kBAEnC,CA8e2CM,CAAcV,GACrD,IAAIvgB,EAAGmZ,EAEP,SAAS+H,IACP/H,EAASkB,EAAQra,GACjB,MAAMkY,EAAaiB,EAAOoH,EAAW/G,MACrC,QAAQrB,EAAAA,EAAAA,GAASgB,EAAOlC,EAAMuC,QAAUqH,EAAW3I,GAAc4I,EAAW5I,CAC9E,CAEA,IAAKlY,EAAI,EAAGA,EAAI0X,IACVwJ,MAGJvT,KAAKsS,sBAAsBC,EAAOjJ,EAAOkC,EAAQtB,IAC7CsH,MALkBnf,GAUxB,GAAImf,EAEF,IAAKnf,EAAI0X,EAAO,EAAG1X,GAAK,IAAKA,EAC3B,IAAIkhB,IAAJ,CAGAvT,KAAKsS,sBAAsBC,EAAOjJ,EAAOkC,EAAQtB,GACjD,MAGJ,OAAOqI,CACT,CAEAiB,mBAAmBlK,GACjB,MAAMkC,EAASxL,KAAKyL,YAAYiB,QAC1BtE,EAAS,GACf,IAAI/V,EAAG0X,EAAMd,EAEb,IAAK5W,EAAI,EAAG0X,EAAOyB,EAAO/c,OAAQ4D,EAAI0X,IAAQ1X,EAC5C4W,EAAQuC,EAAOnZ,GAAGiX,EAAMuC,OACpBrB,EAAAA,EAAAA,GAASvB,IACXb,EAAO9D,KAAK2E,GAGhB,OAAOb,CACT,CAMAqL,iBACE,OAAO,CACT,CAKAC,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAASxL,KAAKoS,UAAUpI,GAC9B,MAAO,CACL2J,MAAOhI,EAAS,GAAKA,EAAOiI,iBAAiBpI,EAAOG,EAAOE,OAAS,GACpE5C,MAAOkC,EAAS,GAAKA,EAAOyI,iBAAiBpI,EAAOL,EAAOU,OAAS,GAExE,CAKA3I,QAAQmH,GACN,MAAMM,EAAO3K,KAAKyL,YAClBzL,KAAK4G,OAAOyD,GAAQ,WACpBM,EAAKkJ,MA9oBT,SAAgB5K,GACd,IAAInI,EAAGxP,EAAGb,EAAGhB,EAWb,OATIkY,EAAAA,EAAAA,GAASsB,IACXnI,EAAImI,EAAM6K,IACVxiB,EAAI2X,EAAM8K,MACVtjB,EAAIwY,EAAM+K,OACVvkB,EAAIwZ,EAAMgL,MAEVnT,EAAIxP,EAAIb,EAAIhB,EAAIwZ,EAGX,CACL6K,IAAKhT,EACLiT,MAAOziB,EACP0iB,OAAQvjB,EACRwjB,KAAMxkB,EACNykB,UAAoB,IAAVjL,EAEd,CA2nBiBkL,EAAOlF,EAAAA,EAAAA,GAAejP,KAAKsI,QAAQ8L,KA7pBpD,SAAqBzE,EAAQE,EAAQtG,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMhW,EAAI8V,EAAUsG,EAAQpG,GACtBuF,EAAIzF,EAAUwG,EAAQtG,GAE5B,MAAO,CACLuK,IAAKhF,EAAEpF,IACPqK,MAAOxgB,EAAEmW,IACTsK,OAAQlF,EAAEhM,MACVmR,KAAM1gB,EAAEuP,MAEZ,CAgpB0DuR,CAAY1J,EAAKgF,OAAQhF,EAAKkF,OAAQ7P,KAAKyT,mBACnG,CAKA7M,OAAOyD,GAAO,CAEd5G,OACE,MAAMyJ,EAAMlN,KAAKiN,KACX7K,EAAQpC,KAAKoC,MACbuI,EAAO3K,KAAKyL,YACZ6I,EAAW3J,EAAK1b,MAAQ,GACxBslB,EAAOnS,EAAMoS,UACb7N,EAAS,GACT7D,EAAQ9C,KAAK0N,YAAc,EAC3B6D,EAAQvR,KAAK2N,YAAe2G,EAAS7lB,OAASqU,EAC9C2R,EAA0BzU,KAAKsI,QAAQmM,wBAC7C,IAAIpiB,EAMJ,IAJIsY,EAAKgE,SACPhE,EAAKgE,QAAQlL,KAAKyJ,EAAKqH,EAAMzR,EAAOyO,GAGjClf,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,IAASlf,EAAG,CACtC,MAAMqiB,EAAUJ,EAASjiB,GACrBqiB,EAAQ7B,SAGR6B,EAAQ/N,QAAU8N,EACpB9N,EAAOrC,KAAKoQ,GAEZA,EAAQjR,KAAKyJ,EAAKqH,GAEtB,CAEA,IAAKliB,EAAI,EAAGA,EAAIsU,EAAOlY,SAAU4D,EAC/BsU,EAAOtU,GAAGoR,KAAKyJ,EAAKqH,EAExB,CASAI,SAAS3K,EAAOrD,GACd,MAAM0D,EAAO1D,EAAS,SAAW,UACjC,YAAiBhV,IAAVqY,GAAuBhK,KAAKyL,YAAYkD,QAC3C3O,KAAK4U,6BAA6BvK,GAClCrK,KAAK6U,0BAA0B7K,GAAS,EAAGK,EACjD,CAKA+G,WAAWpH,EAAOrD,EAAQ0D,GACxB,MAAMsE,EAAU3O,KAAK4O,aACrB,IAAIkG,EACJ,GAAI9K,GAAS,GAAKA,EAAQhK,KAAKyL,YAAYxc,KAAKR,OAAQ,CACtD,MAAMimB,EAAU1U,KAAKyL,YAAYxc,KAAK+a,GACtC8K,EAAUJ,EAAQ5G,WACf4G,EAAQ5G,SA3jBjB,SAA2BiH,EAAQ/K,EAAO0K,GACxC,OAAOM,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BpO,QAAQ,EACRsO,UAAWjL,EACXwB,YAAQ7Z,EACRujB,SAAKvjB,EACL+iB,UACA1K,QACAK,KAAM,UACNrb,KAAM,QAEV,CAgjB4BmmB,CAAkBnV,KAAKoR,aAAcpH,EAAO0K,IAClEI,EAAQtJ,OAASxL,KAAKoS,UAAUpI,GAChC8K,EAAQI,IAAMvG,EAAQ1f,KAAK+a,GAC3B8K,EAAQ9K,MAAQ8K,EAAQG,UAAYjL,OAEpC8K,EAAU9U,KAAK8N,WACZ9N,KAAK8N,SA9kBd,SAA8BiH,EAAQ/K,GACpC,OAAOgL,EAAAA,EAAAA,GAAcD,EACnB,CACEpO,QAAQ,EACRgI,aAAShd,EACT2Y,aAAcN,EACdA,QACAK,KAAM,UACNrb,KAAM,WAGZ,CAmkByBomB,CAAqBpV,KAAKoC,MAAMgP,aAAcpR,KAAKgK,QACtE8K,EAAQnG,QAAUA,EAClBmG,EAAQ9K,MAAQ8K,EAAQxK,aAAetK,KAAKgK,MAK9C,OAFA8K,EAAQnO,SAAWA,EACnBmO,EAAQzK,KAAOA,EACRyK,CACT,CAMAF,6BAA6BvK,GAC3B,OAAOrK,KAAKqV,uBAAuBrV,KAAKgO,mBAAmBzf,GAAI8b,EACjE,CAOAwK,0BAA0B7K,EAAOK,GAC/B,OAAOrK,KAAKqV,uBAAuBrV,KAAKiO,gBAAgB1f,GAAI8b,EAAML,EACpE,CAKAqL,uBAAuBC,EAAajL,EAAO,UAAWL,GACpD,MAAMrD,EAAkB,WAAT0D,EACTkL,EAAQvV,KAAKmN,gBACbqI,EAAWF,EAAc,IAAMjL,EAC/BwC,EAAS0I,EAAMC,GACfC,EAAUzV,KAAK4N,sBAAuB8H,EAAAA,EAAAA,GAAQ1L,GACpD,GAAI6C,EACF,OAAOD,EAAiBC,EAAQ4I,GAElC,MAAMlO,EAASvH,KAAKoC,MAAMmF,OACpBwJ,EAAYxJ,EAAOoO,wBAAwB3V,KAAKqN,MAAOiI,GACvDM,EAAWjP,EAAS,CAAC,GAAG2O,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFrE,EAAS1J,EAAO2J,gBAAgBlR,KAAK4O,aAAcmC,GACnD9S,EAAQI,OAAOD,KAAKyJ,EAAAA,EAAAA,SAAkByN,IAItClN,EAASb,EAAOsO,oBAAoB5E,EAAQhT,GADlC,IAAM+B,KAAKoR,WAAWpH,EAAOrD,EAAQ0D,IACauL,GAalE,OAXIxN,EAAOG,UAGTH,EAAOG,QAAUkN,EAKjBF,EAAMC,GAAYnX,OAAOyX,OAAOlJ,EAAiBxE,EAAQqN,KAGpDrN,CACT,CAMA2N,mBAAmB/L,EAAOgM,EAAYrP,GACpC,MAAMvE,EAAQpC,KAAKoC,MACbmT,EAAQvV,KAAKmN,gBACbqI,EAAW,aAAaQ,IACxBnJ,EAAS0I,EAAMC,GACrB,GAAI3I,EACF,OAAOA,EAET,IAAIvE,EACJ,IAAgC,IAA5BlG,EAAMkG,QAAQY,UAAqB,CACrC,MAAM3B,EAASvH,KAAKoC,MAAMmF,OACpBwJ,EAAYxJ,EAAO0O,0BAA0BjW,KAAKqN,MAAO2I,GACzD/E,EAAS1J,EAAO2J,gBAAgBlR,KAAK4O,aAAcmC,GACzDzI,EAAUf,EAAO4J,eAAeF,EAAQjR,KAAKoR,WAAWpH,EAAOrD,EAAQqP,IAEzE,MAAMtN,EAAa,IAAIpB,EAAWlF,EAAOkG,GAAWA,EAAQI,YAI5D,OAHIJ,GAAWA,EAAQ4N,aACrBX,EAAMC,GAAYnX,OAAOyX,OAAOpN,IAE3BA,CACT,CAMAyN,iBAAiB7N,GACf,GAAKA,EAAQC,QAGb,OAAOvI,KAAKyN,iBAAmBzN,KAAKyN,eAAiBpP,OAAOqB,OAAO,CAAC,EAAG4I,GACzE,CAMA8N,eAAe/L,EAAMgM,GACnB,OAAQA,GAAiB1J,EAAmBtC,IAASrK,KAAKoC,MAAMkU,mBAClE,CAKAC,kBAAkBzT,EAAOuH,GACvB,MAAMmM,EAAYxW,KAAK6U,0BAA0B/R,EAAOuH,GAClDoM,EAA0BzW,KAAKyN,eAC/B4I,EAAgBrW,KAAKmW,iBAAiBK,GACtCJ,EAAiBpW,KAAKoW,eAAe/L,EAAMgM,IAAmBA,IAAkBI,EAEtF,OADAzW,KAAK0W,oBAAoBL,EAAehM,EAAMmM,GACvC,CAACH,gBAAeD,iBACzB,CAMAO,cAAcjC,EAAS1K,EAAO9B,EAAYmC,GACpCsC,EAAmBtC,GACrBhM,OAAOqB,OAAOgV,EAASxM,GAEvBlI,KAAK+V,mBAAmB/L,EAAOK,GAAMzD,OAAO8N,EAASxM,EAEzD,CAMAwO,oBAAoBL,EAAehM,EAAMhC,GACnCgO,IAAkB1J,EAAmBtC,IACvCrK,KAAK+V,wBAAmBpkB,EAAW0Y,GAAMzD,OAAOyP,EAAehO,EAEnE,CAKAuO,UAAUlC,EAAS1K,EAAOK,EAAM1D,GAC9B+N,EAAQ/N,OAASA,EACjB,MAAM2B,EAAUtI,KAAK2U,SAAS3K,EAAOrD,GACrC3G,KAAK+V,mBAAmB/L,EAAOK,EAAM1D,GAAQC,OAAO8N,EAAS,CAG3DpM,SAAW3B,GAAU3G,KAAKmW,iBAAiB7N,IAAaA,GAE5D,CAEAuO,iBAAiBnC,EAASpK,EAAcN,GACtChK,KAAK4W,UAAUlC,EAAS1K,EAAO,UAAU,EAC3C,CAEA8M,cAAcpC,EAASpK,EAAcN,GACnChK,KAAK4W,UAAUlC,EAAS1K,EAAO,UAAU,EAC3C,CAKA+M,2BACE,MAAMrC,EAAU1U,KAAKyL,YAAYkD,QAE7B+F,GACF1U,KAAK4W,UAAUlC,OAAS/iB,EAAW,UAAU,EAEjD,CAKAqlB,wBACE,MAAMtC,EAAU1U,KAAKyL,YAAYkD,QAE7B+F,GACF1U,KAAK4W,UAAUlC,OAAS/iB,EAAW,UAAU,EAEjD,CAKAmf,gBAAgBH,GACd,MAAM1hB,EAAO+Q,KAAKuN,MACZ+G,EAAWtU,KAAKyL,YAAYxc,KAGlC,IAAK,MAAOoY,EAAQ4P,EAAMC,KAASlX,KAAK+N,UACtC/N,KAAKqH,GAAQ4P,EAAMC,GAErBlX,KAAK+N,UAAY,GAEjB,MAAMoJ,EAAU7C,EAAS7lB,OACnB2oB,EAAUnoB,EAAKR,OACf8iB,EAAQ7iB,KAAKiB,IAAIynB,EAASD,GAE5B5F,GAKFvR,KAAKsR,MAAM,EAAGC,GAGZ6F,EAAUD,EACZnX,KAAKqX,gBAAgBF,EAASC,EAAUD,EAASxG,GACxCyG,EAAUD,GACnBnX,KAAKsX,gBAAgBF,EAASD,EAAUC,EAE5C,CAKAC,gBAAgBvU,EAAOyO,EAAOZ,GAAmB,GAC/C,MAAMhG,EAAO3K,KAAKyL,YACZxc,EAAO0b,EAAK1b,KACZya,EAAM5G,EAAQyO,EACpB,IAAIlf,EAEJ,MAAMklB,EAAQC,IAEZ,IADAA,EAAI/oB,QAAU8iB,EACTlf,EAAImlB,EAAI/oB,OAAS,EAAG4D,GAAKqX,EAAKrX,IACjCmlB,EAAInlB,GAAKmlB,EAAInlB,EAAIkf,EACnB,EAIF,IAFAgG,EAAKtoB,GAEAoD,EAAIyQ,EAAOzQ,EAAIqX,IAAOrX,EACzBpD,EAAKoD,GAAK,IAAI2N,KAAKiO,gBAGjBjO,KAAKsN,UACPiK,EAAK5M,EAAK+B,SAEZ1M,KAAKsR,MAAMxO,EAAOyO,GAEdZ,GACF3Q,KAAKyX,eAAexoB,EAAM6T,EAAOyO,EAAO,QAE5C,CAEAkG,eAAe/C,EAAS5R,EAAOyO,EAAOlH,GAAO,CAK7CiN,gBAAgBxU,EAAOyO,GACrB,MAAM5G,EAAO3K,KAAKyL,YAClB,GAAIzL,KAAKsN,SAAU,CACjB,MAAMoK,EAAU/M,EAAK+B,QAAQiL,OAAO7U,EAAOyO,GACvC5G,EAAKyD,UACP3B,EAAY9B,EAAM+M,GAGtB/M,EAAK1b,KAAK0oB,OAAO7U,EAAOyO,EAC1B,CAKAqG,MAAMC,GACJ,GAAI7X,KAAKsN,SACPtN,KAAK+N,UAAUzJ,KAAKuT,OACf,CACL,MAAOxQ,EAAQ4P,EAAMC,GAAQW,EAC7B7X,KAAKqH,GAAQ4P,EAAMC,GAErBlX,KAAKoC,MAAM0V,aAAaxT,KAAK,CAACtE,KAAKgK,SAAU6N,GAC/C,CAEAE,cACE,MAAMxG,EAAQyG,UAAUvpB,OACxBuR,KAAK4X,MAAM,CAAC,kBAAmB5X,KAAK4O,aAAa3f,KAAKR,OAAS8iB,EAAOA,GACxE,CAEA0G,aACEjY,KAAK4X,MAAM,CAAC,kBAAmB5X,KAAKyL,YAAYxc,KAAKR,OAAS,EAAG,GACnE,CAEAypB,eACElY,KAAK4X,MAAM,CAAC,kBAAmB,EAAG,GACpC,CAEAO,cAAcrV,EAAOyO,GACfA,GACFvR,KAAK4X,MAAM,CAAC,kBAAmB9U,EAAOyO,IAExC,MAAM6G,EAAWJ,UAAUvpB,OAAS,EAChC2pB,GACFpY,KAAK4X,MAAM,CAAC,kBAAmB9U,EAAOsV,GAE1C,CAEAC,iBACErY,KAAK4X,MAAM,CAAC,kBAAmB,EAAGI,UAAUvpB,QAC9C,EChhCF,SAAS6pB,EAAqB3N,GAC5B,MAAMrB,EAAQqB,EAAKgB,OACbvD,EAnBR,SAA2BkB,EAAOta,GAChC,IAAKsa,EAAMiP,OAAOC,KAAM,CACtB,MAAMC,EAAenP,EAAM+B,wBAAwBrc,GACnD,IAAIoZ,EAAS,GAEb,IAAK,IAAI/V,EAAI,EAAG0X,EAAO0O,EAAahqB,OAAQ4D,EAAI0X,EAAM1X,IACpD+V,EAASA,EAAOsQ,OAAOD,EAAapmB,GAAGkZ,WAAWiI,mBAAmBlK,IAEvEA,EAAMiP,OAAOC,MAAOG,EAAAA,EAAAA,GAAavQ,EAAOwQ,MAAK,CAACpoB,EAAGC,IAAMD,EAAIC,KAE7D,OAAO6Y,EAAMiP,OAAOC,IACtB,CAQiBK,CAAkBvP,EAAOqB,EAAK3b,MAC7C,IACIqD,EAAG0X,EAAM+O,EAAMpH,EADf/hB,EAAM2Z,EAAMyP,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,KAIlBpD,EAAAA,EAAAA,GAAQhE,KAEV/hB,EAAMjB,KAAKiB,IAAIA,EAAKjB,KAAKuqB,IAAIH,EAAOpH,IAAS/hB,IAE/C+hB,EAAOoH,EAAAA,EAGT,IAAKzmB,EAAI,EAAG0X,EAAO3B,EAAO3Z,OAAQ4D,EAAI0X,IAAQ1X,EAC5CymB,EAAOxP,EAAM4P,iBAAiB9Q,EAAO/V,IACrC2mB,IAIF,IADAtH,OAAO/f,EACFU,EAAI,EAAG0X,EAAOT,EAAM6P,MAAM1qB,OAAQ4D,EAAI0X,IAAQ1X,EACjDymB,EAAOxP,EAAM8P,gBAAgB/mB,GAC7B2mB,IAGF,OAAOrpB,CACT,CA2FA,SAAS0pB,EAAWC,EAAO9V,EAAM2H,EAAQ9Y,GAMvC,OALIK,EAAAA,EAAAA,GAAQ4mB,GA5Bd,SAAuBA,EAAO9V,EAAM2H,EAAQ9Y,GAC1C,MAAMknB,EAAapO,EAAOmG,MAAMgI,EAAM,GAAIjnB,GACpCmnB,EAAWrO,EAAOmG,MAAMgI,EAAM,GAAIjnB,GAClC1C,EAAMjB,KAAKiB,IAAI4pB,EAAYC,GAC3B7qB,EAAMD,KAAKC,IAAI4qB,EAAYC,GACjC,IAAIC,EAAW9pB,EACX+pB,EAAS/qB,EAETD,KAAKuqB,IAAItpB,GAAOjB,KAAKuqB,IAAItqB,KAC3B8qB,EAAW9qB,EACX+qB,EAAS/pB,GAKX6T,EAAK2H,EAAOU,MAAQ6N,EAEpBlW,EAAKmW,QAAU,CACbF,WACAC,SACA5W,MAAOyW,EACP7P,IAAK8P,EACL7pB,MACAhB,MAEJ,CAIIirB,CAAcN,EAAO9V,EAAM2H,EAAQ9Y,GAEnCmR,EAAK2H,EAAOU,MAAQV,EAAOmG,MAAMgI,EAAOjnB,GAEnCmR,CACT,CAEA,SAASqW,EAAsBlP,EAAM1b,EAAM6T,EAAOyO,GAChD,MAAM5F,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdjc,EAASyc,EAAOoG,YAChBC,EAAcrG,IAAWR,EACzBK,EAAS,GACf,IAAInZ,EAAG0X,EAAMvG,EAAM8V,EAEnB,IAAKjnB,EAAIyQ,EAAOiH,EAAOjH,EAAQyO,EAAOlf,EAAI0X,IAAQ1X,EAChDinB,EAAQrqB,EAAKoD,GACbmR,EAAO,CAAC,EACRA,EAAKmI,EAAOE,MAAQmG,GAAerG,EAAO2F,MAAMpiB,EAAOmD,GAAIA,GAC3DmZ,EAAOlH,KAAK+U,EAAWC,EAAO9V,EAAM2H,EAAQ9Y,IAE9C,OAAOmZ,CACT,CAEA,SAASsO,EAAWC,GAClB,OAAOA,QAA8BpoB,IAApBooB,EAAON,eAA4C9nB,IAAlBooB,EAAOL,MAC3D,CA8BA,SAASM,EAAiB9R,EAAYI,EAAS4B,EAAOF,GACpD,IAAIiQ,EAAO3R,EAAQ4R,cACnB,MAAMhT,EAAM,CAAC,EAEb,IAAK+S,EAEH,YADA/R,EAAWgS,cAAgBhT,GAI7B,IAAa,IAAT+S,EAEF,YADA/R,EAAWgS,cAAgB,CAACpG,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,IAI1E,MAAM,MAACnR,EAAAA,IAAO4G,EAAAA,QAAKD,EAAAA,IAASqK,EAAAA,OAAKE,GAnCnC,SAAqB9L,GACnB,IAAIuB,EAAS3G,EAAO4G,EAAKoK,EAAKE,EAiB9B,OAhBI9L,EAAWiS,YACb1Q,EAAUvB,EAAWkS,KAAOlS,EAAW3U,EACvCuP,EAAQ,OACR4G,EAAM,UAEND,EAAUvB,EAAWkS,KAAOlS,EAAW4G,EACvChM,EAAQ,SACR4G,EAAM,OAEJD,GACFqK,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAAClR,QAAO4G,MAAKD,UAASqK,MAAKE,SACpC,CAgB6CqG,CAAYnS,GAE1C,WAAT+R,GAAqB/P,IACvBhC,EAAWoS,oBAAqB,GAC3BpQ,EAAMgC,MAAQ,KAAOlC,EACxBiQ,EAAOnG,GACG5J,EAAMiC,SAAW,KAAOnC,EAClCiQ,EAAOjG,GAEP9M,EAAIqT,EAAUvG,EAAQlR,EAAO4G,EAAKD,KAAY,EAC9CwQ,EAAOnG,IAIX5M,EAAIqT,EAAUN,EAAMnX,EAAO4G,EAAKD,KAAY,EAC5CvB,EAAWgS,cAAgBhT,CAC7B,CAEA,SAASqT,EAAUN,EAAMzpB,EAAGC,EAAGgZ,GAU/B,IAAc+Q,EAAMC,EAAIC,EAHtB,OANIjR,GASkBiR,EARCjqB,EACrBwpB,EAAOU,EADPV,GAQUO,EAREP,MAQIQ,EAREjqB,GASCkqB,EAAKF,IAASE,EAAKD,EAAKD,EARrB/pB,EAAGD,IAEzBypB,EAAOU,EAASV,EAAMzpB,EAAGC,GAEpBwpB,CACT,CAMA,SAASU,EAASprB,EAAGuT,EAAO4G,GAC1B,MAAa,UAANna,EAAgBuT,EAAc,QAANvT,EAAcma,EAAMna,CACrD,CAEA,SAASqrB,EAAiB1S,GAAY,cAAC2S,GAAgBvb,GACrD4I,EAAW2S,cAAkC,SAAlBA,EACb,IAAVvb,EAAc,IAAO,EACrBub,CACN,CAEe,MAAMC,UAAsB/N,EAEzCC,UAAY,MAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,MAEjB8M,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EAETvS,WAAY,CACVwS,QAAS,CACPlsB,KAAM,SACNkZ,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAQ9C8E,iBAAmB,CACjBV,OAAQ,CACN6O,QAAS,CACPnsB,KAAM,WACNosB,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPtsB,KAAM,SACNusB,aAAa,KAWnB1J,mBAAmBlH,EAAM1b,EAAM6T,EAAOyO,GACpC,OAAOsI,EAAsBlP,EAAM1b,EAAM6T,EAAOyO,EAClD,CAOAI,eAAehH,EAAM1b,EAAM6T,EAAOyO,GAChC,OAAOsI,EAAsBlP,EAAM1b,EAAM6T,EAAOyO,EAClD,CAOAK,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACjC,MAAM,OAAC5F,EAAAA,OAAQR,GAAUR,GACnB,SAACsH,EAAW,aAAKC,EAAW,KAAOlS,KAAKsN,SACxCkO,EAA2B,MAAhB7P,EAAOE,KAAeoG,EAAWC,EAC5CuJ,EAA2B,MAAhBtQ,EAAOU,KAAeoG,EAAWC,EAC5C1G,EAAS,GACf,IAAInZ,EAAG0X,EAAMvG,EAAMpD,EACnB,IAAK/N,EAAIyQ,EAAOiH,EAAOjH,EAAQyO,EAAOlf,EAAI0X,IAAQ1X,EAChD+N,EAAMnR,EAAKoD,GACXmR,EAAO,CAAC,EACRA,EAAKmI,EAAOE,MAAQF,EAAO2F,OAAMa,EAAAA,EAAAA,GAAiB/R,EAAKob,GAAWnpB,GAClEmZ,EAAOlH,KAAK+U,GAAWlH,EAAAA,EAAAA,GAAiB/R,EAAKqb,GAAWjY,EAAM2H,EAAQ9Y,IAExE,OAAOmZ,CACT,CAKA8G,sBAAsBC,EAAOjJ,EAAOkC,EAAQtB,GAC1CwR,MAAMpJ,sBAAsBC,EAAOjJ,EAAOkC,EAAQtB,GAClD,MAAM6P,EAASvO,EAAOmO,QAClBI,GAAUzQ,IAAUtJ,KAAKyL,YAAYN,SAEvCoH,EAAM5iB,IAAMjB,KAAKiB,IAAI4iB,EAAM5iB,IAAKoqB,EAAOpqB,KACvC4iB,EAAM5jB,IAAMD,KAAKC,IAAI4jB,EAAM5jB,IAAKorB,EAAOprB,KAE3C,CAMA8kB,iBACE,OAAO,CACT,CAKAC,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,aACZ,OAACE,EAAAA,OAAQR,GAAUR,EACnBa,EAASxL,KAAKoS,UAAUpI,GACxB+P,EAASvO,EAAOmO,QAChB1Q,EAAQ6Q,EAAWC,GACrB,IAAMA,EAAOjX,MAAQ,KAAOiX,EAAOrQ,IAAM,IACzC,GAAKyB,EAAOyI,iBAAiBpI,EAAOL,EAAOU,OAE/C,MAAO,CACL8H,MAAO,GAAKhI,EAAOiI,iBAAiBpI,EAAOG,EAAOE,OAClD5C,QAEJ,CAEAiF,aACElO,KAAK4N,qBAAsB,EAE3B8N,MAAMxN,aAEOlO,KAAKyL,YACbvB,MAAQlK,KAAK4O,aAAa1E,KACjC,CAEAtD,OAAOyD,GACL,MAAMM,EAAO3K,KAAKyL,YAClBzL,KAAKyX,eAAe9M,EAAK1b,KAAM,EAAG0b,EAAK1b,KAAKR,OAAQ4b,EACtD,CAEAoN,eAAekE,EAAM7Y,EAAOyO,EAAOlH,GACjC,MAAM6F,EAAiB,UAAT7F,GACR,MAACL,EAAOyB,aAAa,OAACN,IAAWnL,KACjCoa,EAAOjP,EAAOyQ,eACdzB,EAAahP,EAAO0Q,eACpBC,EAAQ9b,KAAK+b,aACb,cAAC1F,EAAa,eAAED,GAAkBpW,KAAKuW,kBAAkBzT,EAAOuH,GAEtE,IAAK,IAAIhY,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,EAAOlf,IAAK,CAC1C,MAAMmZ,EAASxL,KAAKoS,UAAU/f,GACxB2pB,EAAU9L,IAAS+L,EAAAA,EAAAA,GAAczQ,EAAOL,EAAOU,OAAS,CAACuO,OAAM8B,KAAM9B,GAAQpa,KAAKmc,yBAAyB9pB,GAC3G+pB,EAAUpc,KAAKqc,yBAAyBhqB,EAAGypB,GAC3C5R,GAASsB,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MAEtC3D,EAAa,CACjBiS,aACAC,KAAM4B,EAAQ5B,KACdE,oBAAqBpQ,GAAS4P,EAAWtO,EAAOmO,UAAa3P,IAAUE,EAAMgC,MAAQlC,IAAUE,EAAMiC,QACrG5Y,EAAG4mB,EAAa6B,EAAQE,KAAOE,EAAQE,OACvCxN,EAAGqL,EAAaiC,EAAQE,OAASN,EAAQE,KACzCK,OAAQpC,EAAaiC,EAAQjT,KAAOza,KAAKuqB,IAAI+C,EAAQ7S,MACrDqT,MAAOrC,EAAazrB,KAAKuqB,IAAI+C,EAAQ7S,MAAQiT,EAAQjT,MAGnDiN,IACFlO,EAAWI,QAAU+N,GAAiBrW,KAAK6U,0BAA0BxiB,EAAGspB,EAAKtpB,GAAGsU,OAAS,SAAW0D,IAEtG,MAAM/B,EAAUJ,EAAWI,SAAWqT,EAAKtpB,GAAGiW,QAC9C0R,EAAiB9R,EAAYI,EAAS4B,EAAOF,GAC7C4Q,EAAiB1S,EAAYI,EAASwT,EAAMxc,OAC5CU,KAAK2W,cAAcgF,EAAKtpB,GAAIA,EAAG6V,EAAYmC,EAC7C,CACF,CASAoS,WAAWC,EAAMzH,GACf,MAAM,OAACtJ,GAAU3L,KAAKyL,YAChB5B,EAAW8B,EAAON,wBAAwBrL,KAAKqN,OAClDd,QAAO5B,GAAQA,EAAKY,WAAWjD,QAAQ2S,UACpCrQ,EAAUe,EAAOrD,QAAQsC,QACzBE,EAAS,GAET6R,EAAYhS,IAChB,MAAMa,EAASb,EAAKY,WAAW6G,UAAU6C,GACnC9T,EAAMqK,GAAUA,EAAOb,EAAKQ,OAAOU,MAEzC,IAAIoQ,EAAAA,EAAAA,GAAc9a,IAAQyb,MAAMzb,GAC9B,OAAO,GAIX,IAAK,MAAMwJ,KAAQd,EACjB,SAAkBlY,IAAdsjB,IAA2B0H,EAAShS,QASxB,IAAZC,IAAqD,IAAhCE,EAAO+R,QAAQlS,EAAKT,aAClCvY,IAAZiZ,QAAwCjZ,IAAfgZ,EAAKT,QAC3BY,EAAOxG,KAAKqG,EAAKT,OAEfS,EAAKX,QAAU0S,GACjB,MAWJ,OAJK5R,EAAOrc,QACVqc,EAAOxG,UAAK3S,GAGPmZ,CACT,CAMAgS,eAAe9S,GACb,OAAOhK,KAAKyc,gBAAW9qB,EAAWqY,GAAOvb,MAC3C,CAUAsuB,eAAezS,EAAc0S,EAAM/H,GACjC,MAAMnK,EAAS9K,KAAKyc,WAAWnS,EAAc2K,GACvCjL,OAAkBrY,IAAV,EACVmZ,EAAO+R,QAAQG,IACd,EAEL,OAAmB,IAAXhT,EACJc,EAAOrc,OAAS,EAChBub,CACN,CAKA+R,YACE,MAAMvS,EAAOxJ,KAAKsI,QACZqC,EAAO3K,KAAKyL,YACZE,EAAShB,EAAKgB,OACdsR,EAAS,GACf,IAAI5qB,EAAG0X,EAEP,IAAK1X,EAAI,EAAG0X,EAAOY,EAAK1b,KAAKR,OAAQ4D,EAAI0X,IAAQ1X,EAC/C4qB,EAAO3Y,KAAKqH,EAAOuN,iBAAiBlZ,KAAKoS,UAAU/f,GAAGsZ,EAAOE,MAAOxZ,IAGtE,MAAM6qB,EAAe1T,EAAK0T,aAG1B,MAAO,CACLvtB,IAHUutB,GAAgB5E,EAAqB3N,GAI/CsS,SACAna,MAAO6I,EAAOwR,YACdzT,IAAKiC,EAAOyR,UACZC,WAAYrd,KAAK8c,iBACjBxT,MAAOqC,EACPsP,QAASzR,EAAKyR,QAEd3b,MAAO4d,EAAe,EAAI1T,EAAKuR,mBAAqBvR,EAAKwR,cAE7D,CAMAmB,yBAAyBnS,GACvB,MAAOyB,aAAa,OAACN,EAAAA,SAAQiD,EAAUpE,MAAOM,GAAehC,SAAU8R,KAAMkD,EAAS,aAAEC,IAAiBvd,KACnGwd,EAAaF,GAAa,EAC1B9R,EAASxL,KAAKoS,UAAUpI,GACxB+P,EAASvO,EAAOmO,QAChB8D,EAAW3D,EAAWC,GAC5B,IAGImC,EAAM/S,EAHNF,EAAQuC,EAAOL,EAAOU,MACtB/I,EAAQ,EACRrU,EAAS2f,EAAWpO,KAAKiK,WAAWkB,EAAQK,EAAQ4C,GAAYnF,EAGhExa,IAAWwa,IACbnG,EAAQrU,EAASwa,EACjBxa,EAASwa,GAGPwU,IACFxU,EAAQ8Q,EAAON,SACfhrB,EAASsrB,EAAOL,OAASK,EAAON,SAElB,IAAVxQ,IAAewB,EAAAA,EAAAA,GAAKxB,MAAWwB,EAAAA,EAAAA,GAAKsP,EAAOL,UAC7C5W,EAAQ,GAEVA,GAASmG,GAGX,MAAMsQ,GAAc0C,EAAAA,EAAAA,GAAcqB,IAAeG,EAAuB3a,EAAZwa,EAC5D,IAAIlD,EAAOjP,EAAO+N,iBAAiBK,GAWnC,GARE2C,EADElc,KAAKoC,MAAMsb,kBAAkB1T,GACxBmB,EAAO+N,iBAAiBpW,EAAQrU,GAGhC2rB,EAGTjR,EAAO+S,EAAO9B,EAEV1rB,KAAKuqB,IAAI9P,GAAQoU,EAAc,CACjCpU,EArZN,SAAiBA,EAAMgC,EAAQqS,GAC7B,OAAa,IAATrU,GACKsB,EAAAA,EAAAA,GAAKtB,IAENgC,EAAO0Q,eAAiB,GAAK,IAAM1Q,EAAOxb,KAAO6tB,EAAa,GAAK,EAC7E,CAgZaG,CAAQxU,EAAMgC,EAAQqS,GAAcD,EACvCtU,IAAUuU,IACZpD,GAAQjR,EAAO,GAEjB,MAAMyU,EAAazS,EAAO0S,mBAAmB,GACvCC,EAAW3S,EAAO0S,mBAAmB,GACrCluB,EAAMjB,KAAKiB,IAAIiuB,EAAYE,GAC3BnvB,EAAMD,KAAKC,IAAIivB,EAAYE,GACjC1D,EAAO1rB,KAAKC,IAAID,KAAKiB,IAAIyqB,EAAMzrB,GAAMgB,GACrCusB,EAAO9B,EAAOjR,EAEViF,IAAaqP,IAEfjS,EAAOE,QAAQP,EAAOU,MAAMO,cAAc9B,GAAgBa,EAAO4S,iBAAiB7B,GAAQ/Q,EAAO4S,iBAAiB3D,IAItH,GAAIA,IAASjP,EAAO+N,iBAAiBsE,GAAa,CAChD,MAAMQ,GAAWvT,EAAAA,EAAAA,GAAKtB,GAAQgC,EAAO8S,qBAAqBT,GAAc,EACxEpD,GAAQ4D,EACR7U,GAAQ6U,EAGV,MAAO,CACL7U,OACAiR,OACA8B,OACAI,OAAQJ,EAAO/S,EAAO,EAE1B,CAKAkT,yBAAyBrS,EAAO8R,GAC9B,MAAMxS,EAAQwS,EAAMxS,MACdhB,EAAUtI,KAAKsI,QACfqU,EAAWrU,EAAQqU,SACnBuB,GAAkBjP,EAAAA,EAAAA,GAAe3G,EAAQ4V,gBAAiBC,KAChE,IAAI7B,EAAQnT,EACZ,GAAI2S,EAAMb,QAAS,CACjB,MAAMoC,EAAaV,EAAW3c,KAAK8c,eAAe9S,GAAS8R,EAAMuB,WAC3D9K,EAAiC,SAAzBjK,EAAQ4U,aAphB5B,SAAmClT,EAAO8R,EAAOxT,EAAS+U,GACxD,MAAMJ,EAASnB,EAAMmB,OACfnE,EAAOmE,EAAOjT,GACpB,IAAI0H,EAAO1H,EAAQ,EAAIiT,EAAOjT,EAAQ,GAAK,KACvCoU,EAAOpU,EAAQiT,EAAOxuB,OAAS,EAAIwuB,EAAOjT,EAAQ,GAAK,KAC3D,MAAMqU,EAAU/V,EAAQyS,mBAEX,OAATrJ,IAGFA,EAAOoH,GAAiB,OAATsF,EAAgBtC,EAAMpS,IAAMoS,EAAMhZ,MAAQsb,EAAOtF,IAGrD,OAATsF,IAEFA,EAAOtF,EAAOA,EAAOpH,GAGvB,MAAM5O,EAAQgW,GAAQA,EAAOpqB,KAAKiB,IAAI+hB,EAAM0M,IAAS,EAAIC,EAGzD,MAAO,CACLC,MAHW5vB,KAAKuqB,IAAImF,EAAO1M,GAAQ,EAAI2M,EAGzBhB,EACd/d,MAAOgJ,EAAQ0S,cACflY,QAEJ,CA2fUyb,CAA0BvU,EAAO8R,EAAOxT,EAAS+U,GAjjB3D,SAAkCrT,EAAO8R,EAAOxT,EAAS+U,GACvD,MAAMmB,EAAYlW,EAAQ4U,aAC1B,IAAI/T,EAAM7J,EAaV,OAXI2c,EAAAA,EAAAA,GAAcuC,IAChBrV,EAAO2S,EAAMnsB,IAAM2Y,EAAQyS,mBAC3Bzb,EAAQgJ,EAAQ0S,gBAKhB7R,EAAOqV,EAAYnB,EACnB/d,EAAQ,GAGH,CACLgf,MAAOnV,EAAOkU,EACd/d,QACAwD,MAAOgZ,EAAMmB,OAAOjT,GAAUb,EAAO,EAEzC,CA8hBUsV,CAAyBzU,EAAO8R,EAAOxT,EAAS+U,GAE9CqB,EAAa1e,KAAK+c,eAAe/c,KAAKgK,MAAOhK,KAAKyL,YAAYvB,MAAOyS,EAAW3S,OAAQrY,GAC9F2qB,EAAS/J,EAAMzP,MAASyP,EAAM+L,MAAQI,EAAenM,EAAM+L,MAAQ,EACnEnV,EAAOza,KAAKiB,IAAIuuB,EAAiB3L,EAAM+L,MAAQ/L,EAAMjT,YAGrDgd,EAAShT,EAAM4P,iBAAiBlZ,KAAKoS,UAAUpI,GAAOV,EAAMuC,MAAO7B,GACnEb,EAAOza,KAAKiB,IAAIuuB,EAAiBpC,EAAMnsB,IAAMmsB,EAAMxc,OAGrD,MAAO,CACL8a,KAAMkC,EAASnT,EAAO,EACtB+S,KAAMI,EAASnT,EAAO,EACtBmT,SACAnT,OAEJ,CAEA1F,OACE,MAAMkH,EAAO3K,KAAKyL,YACZN,EAASR,EAAKQ,OACdwT,EAAQhU,EAAK1b,KACb8a,EAAO4U,EAAMlwB,OACnB,IAAI4D,EAAI,EAER,KAAOA,EAAI0X,IAAQ1X,EACsB,OAAnC2N,KAAKoS,UAAU/f,GAAG8Y,EAAOU,OAC3B8S,EAAMtsB,GAAGoR,KAAKzD,KAAKiN,KAGzB,EC1oBa,MAAM2R,UAAyB7R,EAE5CC,UAAY,SAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,QAEjBvF,WAAY,CACVwS,QAAS,CACPlsB,KAAM,SACNkZ,WAAY,CAAC,IAAK,IAAK,cAAe,aAQ5C8E,iBAAmB,CACjBV,OAAQ,CACN/Y,EAAG,CACDvE,KAAM,UAER8f,EAAG,CACD9f,KAAM,YAKZkf,aACElO,KAAK4N,qBAAsB,EAC3B8N,MAAMxN,YACR,CAMA2D,mBAAmBlH,EAAM1b,EAAM6T,EAAOyO,GACpC,MAAM/F,EAASkQ,MAAM7J,mBAAmBlH,EAAM1b,EAAM6T,EAAOyO,GAC3D,IAAK,IAAIlf,EAAI,EAAGA,EAAImZ,EAAO/c,OAAQ4D,IACjCmZ,EAAOnZ,GAAGsnB,QAAU3Z,KAAK6U,0BAA0BxiB,EAAIyQ,GAAO+b,OAEhE,OAAOrT,CACT,CAMAmG,eAAehH,EAAM1b,EAAM6T,EAAOyO,GAChC,MAAM/F,EAASkQ,MAAM/J,eAAehH,EAAM1b,EAAM6T,EAAOyO,GACvD,IAAK,IAAIlf,EAAI,EAAGA,EAAImZ,EAAO/c,OAAQ4D,IAAK,CACtC,MAAMmR,EAAOvU,EAAK6T,EAAQzQ,GAC1BmZ,EAAOnZ,GAAGsnB,SAAU1K,EAAAA,EAAAA,GAAezL,EAAK,GAAIxD,KAAK6U,0BAA0BxiB,EAAIyQ,GAAO+b,OACxF,CACA,OAAOrT,CACT,CAMAoG,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACjC,MAAM/F,EAASkQ,MAAM9J,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACxD,IAAK,IAAIlf,EAAI,EAAGA,EAAImZ,EAAO/c,OAAQ4D,IAAK,CACtC,MAAMmR,EAAOvU,EAAK6T,EAAQzQ,GAC1BmZ,EAAOnZ,GAAGsnB,SAAU1K,EAAAA,EAAAA,GAAezL,GAAQA,EAAKlS,IAAMkS,EAAKlS,EAAG0O,KAAK6U,0BAA0BxiB,EAAIyQ,GAAO+b,OAC1G,CACA,OAAOrT,CACT,CAKAiI,iBACE,MAAMxkB,EAAO+Q,KAAKyL,YAAYxc,KAE9B,IAAIN,EAAM,EACV,IAAK,IAAI0D,EAAIpD,EAAKR,OAAS,EAAG4D,GAAK,IAAKA,EACtC1D,EAAMD,KAAKC,IAAIA,EAAKM,EAAKoD,GAAG8W,KAAKnJ,KAAK6U,0BAA0BxiB,IAAM,GAExE,OAAO1D,EAAM,GAAKA,CACpB,CAKA+kB,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,YACZvc,EAAS8Q,KAAKoC,MAAMnT,KAAKC,QAAU,IACnC,OAACygB,EAAAA,OAAQE,GAAUlF,EACnBa,EAASxL,KAAKoS,UAAUpI,GACxBzW,EAAIoc,EAAOiE,iBAAiBpI,EAAOjY,GACnCub,EAAIe,EAAO+D,iBAAiBpI,EAAOsD,GACnCxd,EAAIka,EAAOmO,QAEjB,MAAO,CACLhG,MAAOzkB,EAAO8a,IAAU,GACxBf,MAAO,IAAM1V,EAAI,KAAOub,GAAKxd,EAAI,KAAOA,EAAI,IAAM,IAEtD,CAEAsV,OAAOyD,GACL,MAAMyU,EAAS9e,KAAKyL,YAAYxc,KAGhC+Q,KAAKyX,eAAeqH,EAAQ,EAAGA,EAAOrwB,OAAQ4b,EAChD,CAEAoN,eAAeqH,EAAQhc,EAAOyO,EAAOlH,GACnC,MAAM6F,EAAiB,UAAT7F,GACR,OAACsB,EAAAA,OAAQR,GAAUnL,KAAKyL,aACxB,cAAC4K,EAAa,eAAED,GAAkBpW,KAAKuW,kBAAkBzT,EAAOuH,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KAErB,IAAK,IAAIxZ,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,EAAOlf,IAAK,CAC1C,MAAM0sB,EAAQD,EAAOzsB,GACfmZ,GAAU0E,GAASlQ,KAAKoS,UAAU/f,GAClC6V,EAAa,CAAC,EACd8W,EAAS9W,EAAW0D,GAASsE,EAAQvE,EAAOkS,mBAAmB,IAAOlS,EAAOuN,iBAAiB1N,EAAOI,IACrGqT,EAAS/W,EAAW4D,GAASoE,EAAQ/E,EAAOyQ,eAAiBzQ,EAAO+N,iBAAiB1N,EAAOM,IAElG5D,EAAWgX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,GAErC7I,IACFlO,EAAWI,QAAU+N,GAAiBrW,KAAK6U,0BAA0BxiB,EAAG0sB,EAAMpY,OAAS,SAAW0D,GAE9F6F,IACFhI,EAAWI,QAAQuW,OAAS,IAIhC7e,KAAK2W,cAAcoI,EAAO1sB,EAAG6V,EAAYmC,EAC3C,CACF,CAOAwK,0BAA0B7K,EAAOK,GAC/B,MAAMmB,EAASxL,KAAKoS,UAAUpI,GAC9B,IAAI5B,EAASsT,MAAM7G,0BAA0B7K,EAAOK,GAGhDjC,EAAOG,UACTH,EAAS/J,OAAOqB,OAAO,CAAC,EAAG0I,EAAQ,CAACG,SAAS,KAI/C,MAAMsW,EAASzW,EAAOyW,OAMtB,MALa,WAATxU,IACFjC,EAAOyW,OAAS,GAElBzW,EAAOyW,SAAU5P,EAAAA,EAAAA,GAAezD,GAAUA,EAAOmO,QAASkF,GAEnDzW,CACT,ECnIa,MAAM+W,UAA2BpS,EAE9CC,UAAY,WAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,MACjB/E,UAAW,CAETkW,eAAe,EAEfC,cAAc,GAEhB3W,WAAY,CACVwS,QAAS,CACPlsB,KAAM,SACNkZ,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7HoX,OAAQ,MAGRC,SAAU,EAGVC,cAAe,IAGfX,OAAQ,OAGRY,QAAS,EAETnQ,UAAW,KAGbtC,mBAAqB,CACnB0S,YAAc1C,GAAkB,YAATA,EACvB2C,WAAa3C,GAAkB,YAATA,GAMxBhQ,iBAAmB,CACjB4S,YAAa,EAGbC,QAAS,CACPC,OAAQ,CACN5wB,OAAQ,CACN6wB,eAAe3d,GACb,MAAMnT,EAAOmT,EAAMnT,KACnB,GAAIA,EAAKC,OAAOT,QAAUQ,EAAKE,SAASV,OAAQ,CAC9C,MAAOS,QAAQ,WAAC8wB,EAAAA,MAAY1f,IAAU8B,EAAM0d,OAAOxX,QAEnD,OAAOrZ,EAAKC,OAAOZ,KAAI,CAACqlB,EAAOthB,KAC7B,MACM4tB,EADO7d,EAAM2N,eAAe,GACfxE,WAAWoJ,SAAStiB,GAEvC,MAAO,CACL6tB,KAAMvM,EACNwM,UAAWF,EAAM7wB,gBACjBgxB,YAAaH,EAAMI,YACnBC,UAAWhgB,EACXigB,UAAWN,EAAMO,YACjBR,WAAYA,EACZnN,QAASzQ,EAAMsb,kBAAkBrrB,GAGjC2X,MAAO3X,EACT,IAGJ,MAAO,EACT,GAGFouB,QAAQ7vB,EAAG8vB,EAAYZ,GACrBA,EAAO1d,MAAMue,qBAAqBD,EAAW1W,OAC7C8V,EAAO1d,MAAMwE,QACf,KAKN9G,YAAYsC,EAAOkI,GACjBoR,MAAMtZ,EAAOkI,GAEbtK,KAAK4N,qBAAsB,EAC3B5N,KAAK4gB,iBAAcjvB,EACnBqO,KAAK6gB,iBAAclvB,EACnBqO,KAAK8gB,aAAUnvB,EACfqO,KAAK+gB,aAAUpvB,CACjB,CAEAwc,aAAc,CAKdmD,MAAMxO,EAAOyO,GACX,MAAMtiB,EAAO+Q,KAAK4O,aAAa3f,KACzB0b,EAAO3K,KAAKyL,YAElB,IAAsB,IAAlBzL,KAAKsN,SACP3C,EAAK+B,QAAUzd,MACV,CACL,IAOIoD,EAAG0X,EAPHiX,EAAU3uB,IAAOpD,EAAKoD,GAE1B,IAAIsV,EAAAA,EAAAA,GAAS1Y,EAAK6T,IAAS,CACzB,MAAM,IAACkF,EAAM,SAAWhI,KAAKsN,SAC7B0T,EAAU3uB,KAAO8f,EAAAA,EAAAA,GAAiBljB,EAAKoD,GAAI2V,GAI7C,IAAK3V,EAAIyQ,EAAOiH,EAAOjH,EAAQyO,EAAOlf,EAAI0X,IAAQ1X,EAChDsY,EAAK+B,QAAQra,GAAK2uB,EAAO3uB,GAG/B,CAKA4uB,eACE,OAAOC,EAAAA,EAAAA,GAAUlhB,KAAKsI,QAAQiX,SAAW,GAC3C,CAKA4B,oBACE,OAAOD,EAAAA,EAAAA,GAAUlhB,KAAKsI,QAAQkX,cAChC,CAMA4B,sBACE,IAAIzxB,EAAM0xB,EAAAA,EACN1yB,GAAO0yB,EAAAA,EAEX,IAAK,IAAIhvB,EAAI,EAAGA,EAAI2N,KAAKoC,MAAMnT,KAAKE,SAASV,SAAU4D,EACrD,GAAI2N,KAAKoC,MAAMkf,iBAAiBjvB,IAAM2N,KAAKoC,MAAM2N,eAAe1d,GAAGrD,OAASgR,KAAKqN,MAAO,CACtF,MAAM9B,EAAavL,KAAKoC,MAAM2N,eAAe1d,GAAGkZ,WAC1CgU,EAAWhU,EAAW0V,eACtBzB,EAAgBjU,EAAW4V,oBAEjCxxB,EAAMjB,KAAKiB,IAAIA,EAAK4vB,GACpB5wB,EAAMD,KAAKC,IAAIA,EAAK4wB,EAAWC,GAInC,MAAO,CACLD,SAAU5vB,EACV6vB,cAAe7wB,EAAMgB,EAEzB,CAKAiX,OAAOyD,GACL,MAAMjI,EAAQpC,KAAKoC,OACb,UAACoS,GAAapS,EACduI,EAAO3K,KAAKyL,YACZ8V,EAAO5W,EAAK1b,KACZwwB,EAAUzf,KAAKwhB,oBAAsBxhB,KAAKyhB,aAAaF,GAAQvhB,KAAKsI,QAAQmX,QAC5EiC,EAAUhzB,KAAKC,KAAKD,KAAKiB,IAAI6kB,EAAUgI,MAAOhI,EAAU+H,QAAUkD,GAAW,EAAG,GAChFH,EAAS5wB,KAAKiB,KAAIgyB,EAAAA,EAAAA,GAAa3hB,KAAKsI,QAAQgX,OAAQoC,GAAU,GAC9DE,EAAc5hB,KAAK6hB,eAAe7hB,KAAKgK,QAKvC,cAACwV,EAAAA,SAAeD,GAAYvf,KAAKohB,uBACjC,OAACU,EAAAA,OAAQC,EAAAA,QAAQjB,EAAAA,QAASC,GAjNpC,SAA2BxB,EAAUC,EAAeF,GAClD,IAAIwC,EAAS,EACTC,EAAS,EACTjB,EAAU,EACVC,EAAU,EAEd,GAAIvB,EAAgB6B,EAAAA,EAAK,CACvB,MAAMW,EAAazC,EACb0C,EAAWD,EAAaxC,EACxB0C,EAASxzB,KAAKyzB,IAAIH,GAClBI,EAAS1zB,KAAK2zB,IAAIL,GAClBM,EAAO5zB,KAAKyzB,IAAIF,GAChBM,EAAO7zB,KAAK2zB,IAAIJ,GAChBO,EAAU,CAACC,EAAOjyB,EAAGC,KAAMiyB,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAAU,GAAQ,EAAIvzB,KAAKC,IAAI6B,EAAGA,EAAI8uB,EAAQ7uB,EAAGA,EAAI6uB,GACjHqD,EAAU,CAACF,EAAOjyB,EAAGC,KAAMiyB,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAAU,IAAS,EAAIvzB,KAAKiB,IAAIa,EAAGA,EAAI8uB,EAAQ7uB,EAAGA,EAAI6uB,GAClHsD,EAAOJ,EAAQ,EAAGN,EAAQI,GAC1BO,EAAOL,EAAQM,EAAAA,EAASV,EAAQG,GAChCQ,EAAOJ,EAAQK,EAAAA,EAAId,EAAQI,GAC3BW,EAAON,EAAQK,EAAAA,EAAKF,EAAAA,EAASV,EAAQG,GAC3CT,GAAUc,EAAOG,GAAQ,EACzBhB,GAAUc,EAAOI,GAAQ,EACzBnC,IAAY8B,EAAOG,GAAQ,EAC3BhC,IAAY8B,EAAOI,GAAQ,EAE7B,MAAO,CAACnB,SAAQC,SAAQjB,UAASC,UACnC,CAwL+CmC,CAAkB3D,EAAUC,EAAeF,GAChF6D,GAAY3O,EAAUgI,MAAQiD,GAAWqC,EACzCsB,GAAa5O,EAAU+H,OAASkD,GAAWsC,EAC3CsB,EAAY30B,KAAKC,IAAID,KAAKiB,IAAIwzB,EAAUC,GAAa,EAAG,GACxDvC,GAAcyC,EAAAA,EAAAA,GAAYtjB,KAAKsI,QAAQuW,OAAQwE,GAE/CE,GAAgB1C,EADFnyB,KAAKC,IAAIkyB,EAAcvB,EAAQ,IACAtf,KAAKwjB,gCACxDxjB,KAAK8gB,QAAUA,EAAUD,EACzB7gB,KAAK+gB,QAAUA,EAAUF,EAEzBlW,EAAK8Y,MAAQzjB,KAAK0jB,iBAElB1jB,KAAK6gB,YAAcA,EAAc0C,EAAevjB,KAAK2jB,qBAAqB3jB,KAAKgK,OAC/EhK,KAAK4gB,YAAclyB,KAAKC,IAAIqR,KAAK6gB,YAAc0C,EAAe3B,EAAa,GAE3E5hB,KAAKyX,eAAe8J,EAAM,EAAGA,EAAK9yB,OAAQ4b,EAC5C,CAKAuZ,eAAevxB,EAAG6d,GAChB,MAAM1G,EAAOxJ,KAAKsI,QACZqC,EAAO3K,KAAKyL,YACZ+T,EAAgBxf,KAAKmhB,oBAC3B,OAAI,GAAU3X,EAAKN,UAAUkW,gBAAmBpf,KAAKoC,MAAMsb,kBAAkBrrB,IAA0B,OAApBsY,EAAK+B,QAAQra,IAAesY,EAAK1b,KAAKoD,GAAGwgB,OACnH,EAEF7S,KAAK6jB,uBAAuBlZ,EAAK+B,QAAQra,GAAKmtB,EAAgB6B,EAAAA,EACvE,CAEA5J,eAAe8J,EAAMze,EAAOyO,EAAOlH,GACjC,MAAM6F,EAAiB,UAAT7F,EACRjI,EAAQpC,KAAKoC,MACboS,EAAYpS,EAAMoS,UAElBsP,EADO1hB,EAAMkG,QACQY,UACrB6a,GAAWvP,EAAUP,KAAOO,EAAUT,OAAS,EAC/CiQ,GAAWxP,EAAUV,IAAMU,EAAUR,QAAU,EAC/CqL,EAAenP,GAAS4T,EAAczE,aACtCuB,EAAcvB,EAAe,EAAIrf,KAAK4gB,YACtCC,EAAcxB,EAAe,EAAIrf,KAAK6gB,aACtC,cAACxK,EAAa,eAAED,GAAkBpW,KAAKuW,kBAAkBzT,EAAOuH,GACtE,IACIhY,EADA2vB,EAAahiB,KAAKihB,eAGtB,IAAK5uB,EAAI,EAAGA,EAAIyQ,IAASzQ,EACvB2vB,GAAchiB,KAAK4jB,eAAevxB,EAAG6d,GAGvC,IAAK7d,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,IAASlf,EAAG,CACtC,MAAMmtB,EAAgBxf,KAAK4jB,eAAevxB,EAAG6d,GACvC+T,EAAM1C,EAAKlvB,GACX6V,EAAa,CACjB3U,EAAGwwB,EAAU/jB,KAAK8gB,QAClBhS,EAAGkV,EAAUhkB,KAAK+gB,QAClBiB,aACAC,SAAUD,EAAaxC,EACvBA,gBACAqB,cACAD,eAEExK,IACFlO,EAAWI,QAAU+N,GAAiBrW,KAAK6U,0BAA0BxiB,EAAG4xB,EAAItd,OAAS,SAAW0D,IAElG2X,GAAcxC,EAEdxf,KAAK2W,cAAcsN,EAAK5xB,EAAG6V,EAAYmC,EACzC,CACF,CAEAqZ,iBACE,MAAM/Y,EAAO3K,KAAKyL,YACZyY,EAAWvZ,EAAK1b,KACtB,IACIoD,EADAoxB,EAAQ,EAGZ,IAAKpxB,EAAI,EAAGA,EAAI6xB,EAASz1B,OAAQ4D,IAAK,CACpC,MAAM4W,EAAQ0B,EAAK+B,QAAQra,GACb,OAAV4W,GAAmB2T,MAAM3T,KAAUjJ,KAAKoC,MAAMsb,kBAAkBrrB,IAAO6xB,EAAS7xB,GAAGwgB,SACrF4Q,GAAS/0B,KAAKuqB,IAAIhQ,GAEtB,CAEA,OAAOwa,CACT,CAEAI,uBAAuB5a,GACrB,MAAMwa,EAAQzjB,KAAKyL,YAAYgY,MAC/B,OAAIA,EAAQ,IAAM7G,MAAM3T,GACfoY,EAAAA,GAAO3yB,KAAKuqB,IAAIhQ,GAASwa,GAE3B,CACT,CAEA/P,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,YACZrJ,EAAQpC,KAAKoC,MACblT,EAASkT,EAAMnT,KAAKC,QAAU,GAC9B+Z,GAAQkb,EAAAA,EAAAA,GAAaxZ,EAAK+B,QAAQ1C,GAAQ5H,EAAMkG,QAAQ8b,QAE9D,MAAO,CACLzQ,MAAOzkB,EAAO8a,IAAU,GACxBf,QAEJ,CAEAuY,kBAAkBD,GAChB,IAAI5yB,EAAM,EACV,MAAMyT,EAAQpC,KAAKoC,MACnB,IAAI/P,EAAG0X,EAAMY,EAAMY,EAAYjD,EAE/B,IAAKiZ,EAEH,IAAKlvB,EAAI,EAAG0X,EAAO3H,EAAMnT,KAAKE,SAASV,OAAQ4D,EAAI0X,IAAQ1X,EACzD,GAAI+P,EAAMkf,iBAAiBjvB,GAAI,CAC7BsY,EAAOvI,EAAM2N,eAAe1d,GAC5BkvB,EAAO5W,EAAK1b,KACZsc,EAAaZ,EAAKY,WAClB,MAKN,IAAKgW,EACH,OAAO,EAGT,IAAKlvB,EAAI,EAAG0X,EAAOwX,EAAK9yB,OAAQ4D,EAAI0X,IAAQ1X,EAC1CiW,EAAUiD,EAAWsJ,0BAA0BxiB,GACnB,UAAxBiW,EAAQ+b,cACV11B,EAAMD,KAAKC,IAAIA,EAAK2Z,EAAQkY,aAAe,EAAGlY,EAAQgc,kBAAoB,IAG9E,OAAO31B,CACT,CAEA8yB,aAAaF,GACX,IAAI5yB,EAAM,EAEV,IAAK,IAAI0D,EAAI,EAAG0X,EAAOwX,EAAK9yB,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CACjD,MAAMiW,EAAUtI,KAAK6U,0BAA0BxiB,GAC/C1D,EAAMD,KAAKC,IAAIA,EAAK2Z,EAAQ8S,QAAU,EAAG9S,EAAQjZ,aAAe,EAClE,CACA,OAAOV,CACT,CAMAg1B,qBAAqBrZ,GACnB,IAAIia,EAAmB,EAEvB,IAAK,IAAIlyB,EAAI,EAAGA,EAAIiY,IAAgBjY,EAC9B2N,KAAKoC,MAAMkf,iBAAiBjvB,KAC9BkyB,GAAoBvkB,KAAK6hB,eAAexvB,IAI5C,OAAOkyB,CACT,CAKA1C,eAAevX,GACb,OAAO5b,KAAKC,KAAIsgB,EAAAA,EAAAA,GAAejP,KAAKoC,MAAMnT,KAAKE,SAASmb,GAAc/J,OAAQ,GAAI,EACpF,CAMAijB,gCACE,OAAOxjB,KAAK2jB,qBAAqB3jB,KAAKoC,MAAMnT,KAAKE,SAASV,SAAW,CACvE,ECrYa,MAAM+1B,UAAuBzX,EAE1CC,UAAY,OAKZA,gBAAkB,CAChBgB,mBAAoB,OACpBC,gBAAiB,QAEjBwW,UAAU,EACVC,UAAU,GAMZ1X,iBAAmB,CACjBV,OAAQ,CACN6O,QAAS,CACPnsB,KAAM,YAERssB,QAAS,CACPtsB,KAAM,YAKZkf,aACElO,KAAK4N,qBAAsB,EAC3B5N,KAAK6N,oBAAqB,EAC1B6N,MAAMxN,YACR,CAEAtH,OAAOyD,GACL,MAAMM,EAAO3K,KAAKyL,aACXkD,QAASgW,EAAM11B,KAAM6vB,EAAS,GAAE,SAAE8F,GAAYja,EAE/Cka,EAAqB7kB,KAAKoC,MAAMkU,oBACtC,IAAI,MAACxT,EAAAA,MAAOyO,IAASuT,EAAAA,EAAAA,GAAiCna,EAAMmU,EAAQ+F,GAEpE7kB,KAAK0N,WAAa5K,EAClB9C,KAAK2N,WAAa4D,GAEdwT,EAAAA,EAAAA,GAAoBpa,KACtB7H,EAAQ,EACRyO,EAAQuN,EAAOrwB,QAIjBk2B,EAAKnd,OAASxH,KAAKoC,MACnBuiB,EAAKK,cAAgBhlB,KAAKgK,MAC1B2a,EAAKM,aAAeL,EAASK,WAC7BN,EAAK7F,OAASA,EAEd,MAAMxW,EAAUtI,KAAK4U,6BAA6BvK,GAC7CrK,KAAKsI,QAAQmc,WAChBnc,EAAQkY,YAAc,GAExBlY,EAAQ4c,QAAUllB,KAAKsI,QAAQ4c,QAC/BllB,KAAK2W,cAAcgO,OAAMhzB,EAAW,CAClCwzB,UAAWN,EACXvc,WACC+B,GAGHrK,KAAKyX,eAAeqH,EAAQhc,EAAOyO,EAAOlH,EAC5C,CAEAoN,eAAeqH,EAAQhc,EAAOyO,EAAOlH,GACnC,MAAM6F,EAAiB,UAAT7F,GACR,OAACsB,EAAAA,OAAQR,EAAAA,SAAQiD,EAAAA,SAAUwW,GAAY5kB,KAAKyL,aAC5C,cAAC4K,EAAa,eAAED,GAAkBpW,KAAKuW,kBAAkBzT,EAAOuH,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC6Y,EAAAA,QAAUQ,GAAWllB,KAAKsI,QAC3B8c,GAAeC,EAAAA,EAAAA,GAASX,GAAYA,EAAW3R,OAAOC,kBACtDsS,EAAetlB,KAAKoC,MAAMkU,qBAAuBpG,GAAkB,SAAT7F,EAC1DX,EAAM5G,EAAQyO,EACdgU,EAAczG,EAAOrwB,OAC3B,IAAI+2B,EAAa1iB,EAAQ,GAAK9C,KAAKoS,UAAUtP,EAAQ,GAErD,IAAK,IAAIzQ,EAAI,EAAGA,EAAIkzB,IAAelzB,EAAG,CACpC,MAAM0sB,EAAQD,EAAOzsB,GACf6V,EAAaod,EAAevG,EAAQ,GAE1C,GAAI1sB,EAAIyQ,GAASzQ,GAAKqX,EAAK,CACzBxB,EAAWgX,MAAO,EAClB,SAGF,MAAM1T,EAASxL,KAAKoS,UAAU/f,GACxBozB,GAAWxJ,EAAAA,EAAAA,GAAczQ,EAAOM,IAChCkT,EAAS9W,EAAW0D,GAASD,EAAOuN,iBAAiB1N,EAAOI,GAAQvZ,GACpE4sB,EAAS/W,EAAW4D,GAASoE,GAASuV,EAAWta,EAAOyQ,eAAiBzQ,EAAO+N,iBAAiB9K,EAAWpO,KAAKiK,WAAWkB,EAAQK,EAAQ4C,GAAY5C,EAAOM,GAAQzZ,GAE7K6V,EAAWgX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAWwG,EACpDvd,EAAWrD,KAAOxS,EAAI,GAAK,KAAM4mB,IAAIzN,EAAOI,GAAS4Z,EAAW5Z,IAAWwZ,EACvEF,IACFhd,EAAWsD,OAASA,EACpBtD,EAAWgN,IAAM0P,EAAS31B,KAAKoD,IAG7B+jB,IACFlO,EAAWI,QAAU+N,GAAiBrW,KAAK6U,0BAA0BxiB,EAAG0sB,EAAMpY,OAAS,SAAW0D,IAG/Fib,GACHtlB,KAAK2W,cAAcoI,EAAO1sB,EAAG6V,EAAYmC,GAG3Cmb,EAAaha,CACf,CACF,CAKAiI,iBACE,MAAM9I,EAAO3K,KAAKyL,YACZkD,EAAUhE,EAAKgE,QACf+W,EAAS/W,EAAQrG,SAAWqG,EAAQrG,QAAQkY,aAAe,EAC3DvxB,EAAO0b,EAAK1b,MAAQ,GAC1B,IAAKA,EAAKR,OACR,OAAOi3B,EAET,MAAMC,EAAa12B,EAAK,GAAGka,KAAKnJ,KAAK6U,0BAA0B,IACzD+Q,EAAY32B,EAAKA,EAAKR,OAAS,GAAG0a,KAAKnJ,KAAK6U,0BAA0B5lB,EAAKR,OAAS,IAC1F,OAAOC,KAAKC,IAAI+2B,EAAQC,EAAYC,GAAa,CACnD,CAEAniB,OACE,MAAMkH,EAAO3K,KAAKyL,YAClBd,EAAKgE,QAAQkX,oBAAoB7lB,KAAKoC,MAAMoS,UAAW7J,EAAKgB,OAAOE,MACnE6P,MAAMjY,MACR,EC1Ia,MAAMqiB,UAA4B/Y,EAE/CC,UAAY,YAKZA,gBAAkB,CAChBiB,gBAAiB,MACjB/E,UAAW,CACTkW,eAAe,EACfC,cAAc,GAEhB3W,WAAY,CACVwS,QAAS,CACPlsB,KAAM,SACNkZ,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEoH,UAAW,IACX0S,WAAY,GAMdhV,iBAAmB,CACjB4S,YAAa,EAEbC,QAAS,CACPC,OAAQ,CACN5wB,OAAQ,CACN6wB,eAAe3d,GACb,MAAMnT,EAAOmT,EAAMnT,KACnB,GAAIA,EAAKC,OAAOT,QAAUQ,EAAKE,SAASV,OAAQ,CAC9C,MAAOS,QAAQ,WAAC8wB,EAAAA,MAAY1f,IAAU8B,EAAM0d,OAAOxX,QAEnD,OAAOrZ,EAAKC,OAAOZ,KAAI,CAACqlB,EAAOthB,KAC7B,MACM4tB,EADO7d,EAAM2N,eAAe,GACfxE,WAAWoJ,SAAStiB,GAEvC,MAAO,CACL6tB,KAAMvM,EACNwM,UAAWF,EAAM7wB,gBACjBgxB,YAAaH,EAAMI,YACnBC,UAAWhgB,EACXigB,UAAWN,EAAMO,YACjBR,WAAYA,EACZnN,QAASzQ,EAAMsb,kBAAkBrrB,GAGjC2X,MAAO3X,EACT,IAGJ,MAAO,EACT,GAGFouB,QAAQ7vB,EAAG8vB,EAAYZ,GACrBA,EAAO1d,MAAMue,qBAAqBD,EAAW1W,OAC7C8V,EAAO1d,MAAMwE,QACf,IAIJ0F,OAAQ,CACNhb,EAAG,CACDtC,KAAM,eACN+2B,WAAY,CACVC,SAAS,GAEXzK,aAAa,EACbF,KAAM,CACJ4K,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXhE,WAAY,KAKlBliB,YAAYsC,EAAOkI,GACjBoR,MAAMtZ,EAAOkI,GAEbtK,KAAK4gB,iBAAcjvB,EACnBqO,KAAK6gB,iBAAclvB,CACrB,CAEA+hB,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,YACZrJ,EAAQpC,KAAKoC,MACblT,EAASkT,EAAMnT,KAAKC,QAAU,GAC9B+Z,GAAQkb,EAAAA,EAAAA,GAAaxZ,EAAK+B,QAAQ1C,GAAO1Y,EAAG8Q,EAAMkG,QAAQ8b,QAEhE,MAAO,CACLzQ,MAAOzkB,EAAO8a,IAAU,GACxBf,QAEJ,CAEA2I,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACjC,OAAO4U,EAAAA,EAAAA,KAAiCnmB,KAAjCmmB,CAAuCxb,EAAM1b,EAAM6T,EAAOyO,EACnE,CAEA3K,OAAOyD,GACL,MAAMkX,EAAOvhB,KAAKyL,YAAYxc,KAE9B+Q,KAAKomB,gBACLpmB,KAAKyX,eAAe8J,EAAM,EAAGA,EAAK9yB,OAAQ4b,EAC5C,CAKAqI,YACE,MAAM/H,EAAO3K,KAAKyL,YACZ8G,EAAQ,CAAC5iB,IAAKojB,OAAOC,kBAAmBrkB,IAAKokB,OAAOE,mBAgB1D,OAdAtI,EAAK1b,KAAKyT,SAAQ,CAACgS,EAAS1K,KAC1B,MAAMwB,EAASxL,KAAKoS,UAAUpI,GAAO1Y,GAEhCsrB,MAAMpR,IAAWxL,KAAKoC,MAAMsb,kBAAkB1T,KAC7CwB,EAAS+G,EAAM5iB,MACjB4iB,EAAM5iB,IAAM6b,GAGVA,EAAS+G,EAAM5jB,MACjB4jB,EAAM5jB,IAAM6c,OAKX+G,CACT,CAKA6T,gBACE,MAAMhkB,EAAQpC,KAAKoC,MACboS,EAAYpS,EAAMoS,UAClBhL,EAAOpH,EAAMkG,QACb+d,EAAU33B,KAAKiB,IAAI6kB,EAAUT,MAAQS,EAAUP,KAAMO,EAAUR,OAASQ,EAAUV,KAElF+M,EAAcnyB,KAAKC,IAAI03B,EAAU,EAAG,GAEpC9C,GAAgB1C,EADFnyB,KAAKC,IAAI6a,EAAK8c,iBAAmB,EAAe,IAAQ9c,EAAK8c,iBAAoB,EAAG,IACrDlkB,EAAMmkB,yBAEzDvmB,KAAK6gB,YAAcA,EAAe0C,EAAevjB,KAAKgK,MACtDhK,KAAK4gB,YAAc5gB,KAAK6gB,YAAc0C,CACxC,CAEA9L,eAAe8J,EAAMze,EAAOyO,EAAOlH,GACjC,MAAM6F,EAAiB,UAAT7F,EACRjI,EAAQpC,KAAKoC,MAEb0hB,EADO1hB,EAAMkG,QACQY,UACrBI,EAAQtJ,KAAKyL,YAAYqE,OACzBiU,EAAUza,EAAMkd,QAChBxC,EAAU1a,EAAMmd,QAChBC,EAAoBpd,EAAMqd,cAAc,GAAK,GAAM3D,EAAAA,EACzD,IACI3wB,EADAowB,EAAQiE,EAGZ,MAAME,EAAe,IAAM5mB,KAAK6mB,uBAEhC,IAAKx0B,EAAI,EAAGA,EAAIyQ,IAASzQ,EACvBowB,GAASziB,KAAK8mB,cAAcz0B,EAAGgY,EAAMuc,GAEvC,IAAKv0B,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,EAAOlf,IAAK,CACtC,MAAM4xB,EAAM1C,EAAKlvB,GACjB,IAAI2vB,EAAaS,EACbR,EAAWQ,EAAQziB,KAAK8mB,cAAcz0B,EAAGgY,EAAMuc,GAC/C/F,EAAcze,EAAMsb,kBAAkBrrB,GAAKiX,EAAMyd,8BAA8B/mB,KAAKoS,UAAU/f,GAAGf,GAAK,EAC1GmxB,EAAQR,EAEJ/R,IACE4T,EAAczE,eAChBwB,EAAc,GAEZiD,EAAc1E,gBAChB4C,EAAaC,EAAWyE,IAI5B,MAAMxe,EAAa,CACjB3U,EAAGwwB,EACHjV,EAAGkV,EACHpD,YAAa,EACbC,cACAmB,aACAC,WACA3Z,QAAStI,KAAK6U,0BAA0BxiB,EAAG4xB,EAAItd,OAAS,SAAW0D,IAGrErK,KAAK2W,cAAcsN,EAAK5xB,EAAG6V,EAAYmC,EACzC,CACF,CAEAwc,uBACE,MAAMlc,EAAO3K,KAAKyL,YAClB,IAAI8F,EAAQ,EAQZ,OANA5G,EAAK1b,KAAKyT,SAAQ,CAACgS,EAAS1K,MACrB4S,MAAM5c,KAAKoS,UAAUpI,GAAO1Y,IAAM0O,KAAKoC,MAAMsb,kBAAkB1T,IAClEuH,OAIGA,CACT,CAKAuV,cAAc9c,EAAOK,EAAMuc,GACzB,OAAO5mB,KAAKoC,MAAMsb,kBAAkB1T,IAChCkX,EAAAA,EAAAA,GAAUlhB,KAAK6U,0BAA0B7K,EAAOK,GAAMoY,OAASmE,GAC/D,CACN,EC9Na,MAAMI,UAAsB7H,EAEzCnS,UAAY,MAKZA,gBAAkB,CAEhBsS,OAAQ,EAGRC,SAAU,EAGVC,cAAe,IAGfX,OAAQ,QClBG,MAAMoI,UAAwBla,EAE3CC,UAAY,QAKZA,gBAAkB,CAChBgB,mBAAoB,OACpBC,gBAAiB,QACjBqB,UAAW,IACXmV,UAAU,EACVnQ,SAAU,CACRqQ,KAAM,CACJrW,KAAM,WAQZtB,iBAAmB,CACjB4S,YAAa,EAEbtT,OAAQ,CACNhb,EAAG,CACDtC,KAAM,kBAQZ0kB,iBAAiB1J,GACf,MAAMmB,EAASnL,KAAKyL,YAAYN,OAC1BK,EAASxL,KAAKoS,UAAUpI,GAE9B,MAAO,CACL2J,MAAOxI,EAAO4G,YAAY/H,GAC1Bf,MAAO,GAAKkC,EAAOyI,iBAAiBpI,EAAOL,EAAOU,OAEtD,CAEA+F,gBAAgBjH,EAAM1b,EAAM6T,EAAOyO,GACjC,OAAO4U,EAAAA,EAAAA,KAAiCnmB,KAAjCmmB,CAAuCxb,EAAM1b,EAAM6T,EAAOyO,EACnE,CAEA3K,OAAOyD,GACL,MAAMM,EAAO3K,KAAKyL,YACZkZ,EAAOha,EAAKgE,QACZmQ,EAASnU,EAAK1b,MAAQ,GACtBC,EAASyb,EAAKgB,OAAOoG,YAK3B,GAFA4S,EAAK7F,OAASA,EAED,WAATzU,EAAmB,CACrB,MAAM/B,EAAUtI,KAAK4U,6BAA6BvK,GAC7CrK,KAAKsI,QAAQmc,WAChBnc,EAAQkY,YAAc,GAGxB,MAAMtY,EAAa,CACjB9B,OAAO,EACP8gB,UAAWh4B,EAAOT,SAAWqwB,EAAOrwB,OACpC6Z,WAGFtI,KAAK2W,cAAcgO,OAAMhzB,EAAWuW,EAAYmC,GAIlDrK,KAAKyX,eAAeqH,EAAQ,EAAGA,EAAOrwB,OAAQ4b,EAChD,CAEAoN,eAAeqH,EAAQhc,EAAOyO,EAAOlH,GACnC,MAAMf,EAAQtJ,KAAKyL,YAAYqE,OACzBI,EAAiB,UAAT7F,EAEd,IAAK,IAAIhY,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,EAAOlf,IAAK,CAC1C,MAAM0sB,EAAQD,EAAOzsB,GACfiW,EAAUtI,KAAK6U,0BAA0BxiB,EAAG0sB,EAAMpY,OAAS,SAAW0D,GACtE8c,EAAgB7d,EAAM8d,yBAAyB/0B,EAAG2N,KAAKoS,UAAU/f,GAAGf,GAEpEiC,EAAI2c,EAAQ5G,EAAMkd,QAAUW,EAAc5zB,EAC1Cub,EAAIoB,EAAQ5G,EAAMmd,QAAUU,EAAcrY,EAE1C5G,EAAa,CACjB3U,IACAub,IACA2T,MAAO0E,EAAc1E,MACrBvD,KAAMtC,MAAMrpB,IAAMqpB,MAAM9N,GACxBxG,WAGFtI,KAAK2W,cAAcoI,EAAO1sB,EAAG6V,EAAYmC,EAC3C,CACF,ECjGa,MAAMgd,UAA0Bta,EAE7CC,UAAY,UAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,QACjBwW,UAAU,EACVnW,MAAM,GAMRtB,iBAAmB,CAEjBsa,YAAa,CACXjd,KAAM,SAGRiC,OAAQ,CACN/Y,EAAG,CACDvE,KAAM,UAER8f,EAAG,CACD9f,KAAM,YAQZ0kB,iBAAiB1J,GACf,MAAMW,EAAO3K,KAAKyL,YACZvc,EAAS8Q,KAAKoC,MAAMnT,KAAKC,QAAU,IACnC,OAACygB,EAAAA,OAAQE,GAAUlF,EACnBa,EAASxL,KAAKoS,UAAUpI,GACxBzW,EAAIoc,EAAOiE,iBAAiBpI,EAAOjY,GACnCub,EAAIe,EAAO+D,iBAAiBpI,EAAOsD,GAEzC,MAAO,CACL6E,MAAOzkB,EAAO8a,IAAU,GACxBf,MAAO,IAAM1V,EAAI,KAAOub,EAAI,IAEhC,CAEAlI,OAAOyD,GACL,MAAMM,EAAO3K,KAAKyL,aACXxc,KAAM6vB,EAAS,IAAMnU,EAEtBka,EAAqB7kB,KAAKoC,MAAMkU,oBACtC,IAAI,MAACxT,EAAAA,MAAOyO,IAASuT,EAAAA,EAAAA,GAAiCna,EAAMmU,EAAQ+F,GAUpE,GARA7kB,KAAK0N,WAAa5K,EAClB9C,KAAK2N,WAAa4D,GAEdwT,EAAAA,EAAAA,GAAoBpa,KACtB7H,EAAQ,EACRyO,EAAQuN,EAAOrwB,QAGbuR,KAAKsI,QAAQmc,SAAU,CAEzB,MAAO9V,QAASgW,EAAAA,SAAMC,GAAYja,EAGlCga,EAAKnd,OAASxH,KAAKoC,MACnBuiB,EAAKK,cAAgBhlB,KAAKgK,MAC1B2a,EAAKM,aAAeL,EAASK,WAC7BN,EAAK7F,OAASA,EAEd,MAAMxW,EAAUtI,KAAK4U,6BAA6BvK,GAClD/B,EAAQ4c,QAAUllB,KAAKsI,QAAQ4c,QAC/BllB,KAAK2W,cAAcgO,OAAMhzB,EAAW,CAClCwzB,UAAWN,EACXvc,WACC+B,GAILrK,KAAKyX,eAAeqH,EAAQhc,EAAOyO,EAAOlH,EAC5C,CAEAgE,cACE,MAAM,SAACoW,GAAYzkB,KAAKsI,SAEnBtI,KAAKgO,oBAAsByW,IAC9BzkB,KAAKgO,mBAAqBhO,KAAKoC,MAAMmlB,SAASC,WAAW,SAG3D9L,MAAMrN,aACR,CAEAoJ,eAAeqH,EAAQhc,EAAOyO,EAAOlH,GACnC,MAAM6F,EAAiB,UAAT7F,GACR,OAACsB,EAAAA,OAAQR,EAAAA,SAAQiD,EAAAA,SAAUwW,GAAY5kB,KAAKyL,YAC5C+K,EAAYxW,KAAK6U,0BAA0B/R,EAAOuH,GAClDgM,EAAgBrW,KAAKmW,iBAAiBK,GACtCJ,EAAiBpW,KAAKoW,eAAe/L,EAAMgM,GAC3CzK,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC6Y,EAAAA,QAAUQ,GAAWllB,KAAKsI,QAC3B8c,GAAeC,EAAAA,EAAAA,GAASX,GAAYA,EAAW3R,OAAOC,kBACtDsS,EAAetlB,KAAKoC,MAAMkU,qBAAuBpG,GAAkB,SAAT7F,EAChE,IAAImb,EAAa1iB,EAAQ,GAAK9C,KAAKoS,UAAUtP,EAAQ,GAErD,IAAK,IAAIzQ,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,IAASlf,EAAG,CAC1C,MAAM0sB,EAAQD,EAAOzsB,GACfmZ,EAASxL,KAAKoS,UAAU/f,GACxB6V,EAAaod,EAAevG,EAAQ,GACpC0G,GAAWxJ,EAAAA,EAAAA,GAAczQ,EAAOM,IAChCkT,EAAS9W,EAAW0D,GAASD,EAAOuN,iBAAiB1N,EAAOI,GAAQvZ,GACpE4sB,EAAS/W,EAAW4D,GAASoE,GAASuV,EAAWta,EAAOyQ,eAAiBzQ,EAAO+N,iBAAiB9K,EAAWpO,KAAKiK,WAAWkB,EAAQK,EAAQ4C,GAAY5C,EAAOM,GAAQzZ,GAE7K6V,EAAWgX,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAWwG,EACpDvd,EAAWrD,KAAOxS,EAAI,GAAK,KAAM4mB,IAAIzN,EAAOI,GAAS4Z,EAAW5Z,IAAWwZ,EACvEF,IACFhd,EAAWsD,OAASA,EACpBtD,EAAWgN,IAAM0P,EAAS31B,KAAKoD,IAG7B+jB,IACFlO,EAAWI,QAAU+N,GAAiBrW,KAAK6U,0BAA0BxiB,EAAG0sB,EAAMpY,OAAS,SAAW0D,IAG/Fib,GACHtlB,KAAK2W,cAAcoI,EAAO1sB,EAAG6V,EAAYmC,GAG3Cmb,EAAaha,CACf,CAEAxL,KAAK0W,oBAAoBL,EAAehM,EAAMmM,EAChD,CAKA/C,iBACE,MAAM9I,EAAO3K,KAAKyL,YACZxc,EAAO0b,EAAK1b,MAAQ,GAE1B,IAAK+Q,KAAKsI,QAAQmc,SAAU,CAC1B,IAAI91B,EAAM,EACV,IAAK,IAAI0D,EAAIpD,EAAKR,OAAS,EAAG4D,GAAK,IAAKA,EACtC1D,EAAMD,KAAKC,IAAIA,EAAKM,EAAKoD,GAAG8W,KAAKnJ,KAAK6U,0BAA0BxiB,IAAM,GAExE,OAAO1D,EAAM,GAAKA,EAGpB,MAAMggB,EAAUhE,EAAKgE,QACf+W,EAAS/W,EAAQrG,SAAWqG,EAAQrG,QAAQkY,aAAe,EAEjE,IAAKvxB,EAAKR,OACR,OAAOi3B,EAGT,MAAMC,EAAa12B,EAAK,GAAGka,KAAKnJ,KAAK6U,0BAA0B,IACzD+Q,EAAY32B,EAAKA,EAAKR,OAAS,GAAG0a,KAAKnJ,KAAK6U,0BAA0B5lB,EAAKR,OAAS,IAC1F,OAAOC,KAAKC,IAAI+2B,EAAQC,EAAYC,GAAa,CACnD,6LCzGF,SAAS6B,IACP,MAAM,IAAIC,MAAM,kFAClB,CAQA,MAAMC,EAYJ3a,gBACE4a,GAEAvpB,OAAOqB,OAAOioB,EAAgBE,UAAWD,EAC3C,CAIA9nB,YAAYwI,GACVtI,KAAKsI,QAAUA,GAAW,CAAC,CAC7B,CAGAwf,OAAQ,CAERC,UACE,OAAON,GACT,CAEAnW,QACE,OAAOmW,GACT,CAEAO,SACE,OAAOP,GACT,CAEAljB,MACE,OAAOkjB,GACT,CAEAQ,OACE,OAAOR,GACT,CAEAS,UACE,OAAOT,GACT,CAEAU,QACE,OAAOV,GACT,EAGF,MAAe,CACbW,MAAOT,GC9GT,SAASU,EAAaC,EAASzc,EAAM5C,EAAOsf,GAC1C,MAAM,WAAChd,EAAU,KAAEtc,EAAAA,QAAMwiB,GAAW6W,EAC9B3c,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgB4F,GAAWxiB,EAAKR,OAAQ,CAC5E,MAAM+5B,EAAe7c,EAAO8c,eAAiBC,EAAAA,EAAgBC,EAAAA,EAC7D,IAAKJ,EACH,OAAOC,EAAav5B,EAAM4c,EAAM5C,GAC3B,GAAIsC,EAAWkC,eAAgB,CAIpC,MAAMmb,EAAK35B,EAAK,GACVsjB,EAA+B,mBAAhBqW,EAAGC,UAA2BD,EAAGC,SAAShd,GAC/D,GAAI0G,EAAO,CACT,MAAMzP,EAAQ0lB,EAAav5B,EAAM4c,EAAM5C,EAAQsJ,GACzC7I,EAAM8e,EAAav5B,EAAM4c,EAAM5C,EAAQsJ,GAC7C,MAAO,CAACuW,GAAIhmB,EAAMgmB,GAAIC,GAAIrf,EAAIqf,MAKpC,MAAO,CAACD,GAAI,EAAGC,GAAI95B,EAAKR,OAAS,EACnC,CAUA,SAASu6B,EAAyB5mB,EAAOyJ,EAAMod,EAAUC,EAASX,GAChE,MAAM1e,EAAWzH,EAAM+mB,+BACjBlgB,EAAQggB,EAASpd,GACvB,IAAK,IAAIxZ,EAAI,EAAG0X,EAAOF,EAASpb,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CACrD,MAAM,MAAC2X,EAAAA,KAAO/a,GAAQ4a,EAASxX,IACzB,GAACy2B,EAAAA,GAAIC,GAAMV,EAAaxe,EAASxX,GAAIwZ,EAAM5C,EAAOsf,GACxD,IAAK,IAAIhqB,EAAIuqB,EAAIvqB,GAAKwqB,IAAMxqB,EAAG,CAC7B,MAAMmW,EAAUzlB,EAAKsP,GAChBmW,EAAQwK,MACXgK,EAAQxU,EAAS1K,EAAOzL,EAE5B,CACF,CACF,CA2BA,SAAS6qB,EAAkBhnB,EAAO6mB,EAAUpd,EAAMwd,EAAkBC,GAClE,MAAM/lB,EAAQ,GAEd,IAAK+lB,IAAqBlnB,EAAMmnB,cAAcN,GAC5C,OAAO1lB,EAaT,OADAylB,EAAyB5mB,EAAOyJ,EAAMod,GATf,SAASvU,EAASpK,EAAcN,IAChDsf,IAAqBE,EAAAA,EAAAA,GAAe9U,EAAStS,EAAMoS,UAAW,KAG/DE,EAAQ+U,QAAQR,EAAS11B,EAAG01B,EAASna,EAAGua,IAC1C9lB,EAAMe,KAAK,CAACoQ,UAASpK,eAAcN,SAEvC,IAEgE,GACzDzG,CACT,CAoCA,SAASmmB,EAAyBtnB,EAAO6mB,EAAUpd,EAAM0c,EAAWc,EAAkBC,GACpF,IAAI/lB,EAAQ,GACZ,MAAMomB,EA5ER,SAAkC9d,GAChC,MAAM+d,GAA8B,IAAvB/d,EAAKgR,QAAQ,KACpBgN,GAA8B,IAAvBhe,EAAKgR,QAAQ,KAE1B,OAAO,SAASiN,EAAKC,GACnB,MAAMC,EAASJ,EAAOl7B,KAAKuqB,IAAI6Q,EAAIv2B,EAAIw2B,EAAIx2B,GAAK,EAC1C02B,EAASJ,EAAOn7B,KAAKuqB,IAAI6Q,EAAIhb,EAAIib,EAAIjb,GAAK,EAChD,OAAOpgB,KAAKw7B,KAAKx7B,KAAKyQ,IAAI6qB,EAAQ,GAAKt7B,KAAKyQ,IAAI8qB,EAAQ,GAC1D,CACF,CAmEyBE,CAAyBte,GAChD,IAAIue,EAAcrX,OAAOC,kBAyBzB,OADAgW,EAAyB5mB,EAAOyJ,EAAMod,GAtBtC,SAAwBvU,EAASpK,EAAcN,GAC7C,MAAMyf,EAAU/U,EAAQ+U,QAAQR,EAAS11B,EAAG01B,EAASna,EAAGua,GACxD,GAAId,IAAckB,EAChB,OAGF,MAAMnN,EAAS5H,EAAQ2V,eAAehB,GAEtC,OADsBC,GAAoBlnB,EAAMmnB,cAAcjN,MACzCmN,EACnB,OAGF,MAAMa,EAAWX,EAAeV,EAAU3M,GACtCgO,EAAWF,GACb7mB,EAAQ,CAAC,CAACmR,UAASpK,eAAcN,UACjCogB,EAAcE,GACLA,IAAaF,GAEtB7mB,EAAMe,KAAK,CAACoQ,UAASpK,eAAcN,SAEvC,IAGOzG,CACT,CAYA,SAASgnB,EAAgBnoB,EAAO6mB,EAAUpd,EAAM0c,EAAWc,EAAkBC,GAC3E,OAAKA,GAAqBlnB,EAAMmnB,cAAcN,GAI9B,MAATpd,GAAiB0c,EAEpBmB,EAAyBtnB,EAAO6mB,EAAUpd,EAAM0c,EAAWc,EAAkBC,GA1EnF,SAA+BlnB,EAAO6mB,EAAUpd,EAAMwd,GACpD,IAAI9lB,EAAQ,GAYZ,OADAylB,EAAyB5mB,EAAOyJ,EAAMod,GATtC,SAAwBvU,EAASpK,EAAcN,GAC7C,MAAM,WAACgY,EAAAA,SAAYC,GAAYvN,EAAQ8V,SAAS,CAAC,aAAc,YAAanB,IACtE,MAAC5G,IAASgI,EAAAA,EAAAA,GAAkB/V,EAAS,CAACnhB,EAAG01B,EAAS11B,EAAGub,EAAGma,EAASna,KAEnE4T,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,IACnC1e,EAAMe,KAAK,CAACoQ,UAASpK,eAAcN,SAEvC,IAGOzG,CACT,CA2DMmnB,CAAsBtoB,EAAO6mB,EAAUpd,EAAMwd,GAJxC,EAMX,CAWA,SAASsB,EAAavoB,EAAO6mB,EAAUpd,EAAM0c,EAAWc,GACtD,MAAM9lB,EAAQ,GACRqnB,EAAuB,MAAT/e,EAAe,WAAa,WAChD,IAAIgf,GAAiB,EAWrB,OATA7B,EAAyB5mB,EAAOyJ,EAAMod,GAAU,CAACvU,EAASpK,EAAcN,KAClE0K,EAAQkW,GAAa3B,EAASpd,GAAOwd,KACvC9lB,EAAMe,KAAK,CAACoQ,UAASpK,eAAcN,UACnC6gB,EAAiBA,GAAkBnW,EAAQ+U,QAAQR,EAAS11B,EAAG01B,EAASna,EAAGua,OAM3Ed,IAAcsC,EACT,GAEFtnB,CACT,CAMA,MAAe,CAEbylB,2BAGA8B,MAAO,CAYL9gB,MAAM5H,EAAOxR,EAAG0X,EAAS+gB,GACvB,MAAMJ,GAAW8B,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GAElCyJ,EAAOvD,EAAQuD,MAAQ,IACvByd,EAAmBhhB,EAAQghB,mBAAoB,EAC/C/lB,EAAQ+E,EAAQigB,UAClBa,EAAkBhnB,EAAO6mB,EAAUpd,EAAMwd,EAAkBC,GAC3DiB,EAAgBnoB,EAAO6mB,EAAUpd,GAAM,EAAOwd,EAAkBC,GAC9DhV,EAAW,GAEjB,OAAK/Q,EAAM9U,QAIX2T,EAAM+mB,+BAA+BzmB,SAASiI,IAC5C,MAAMX,EAAQzG,EAAM,GAAGyG,MACjB0K,EAAU/J,EAAK1b,KAAK+a,GAGtB0K,IAAYA,EAAQwK,MACtB5K,EAAShQ,KAAK,CAACoQ,UAASpK,aAAcK,EAAKX,MAAOA,aAI/CsK,GAbE,EAcX,EAYA3F,QAAQvM,EAAOxR,EAAG0X,EAAS+gB,GACzB,MAAMJ,GAAW8B,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GAClCyJ,EAAOvD,EAAQuD,MAAQ,KACvByd,EAAmBhhB,EAAQghB,mBAAoB,EACrD,IAAI/lB,EAAQ+E,EAAQigB,UAChBa,EAAkBhnB,EAAO6mB,EAAUpd,EAAMwd,EAAkBC,GAC7DiB,EAAgBnoB,EAAO6mB,EAAUpd,GAAM,EAAOwd,EAAkBC,GAElE,GAAI/lB,EAAM9U,OAAS,EAAG,CACpB,MAAM6b,EAAe/G,EAAM,GAAG+G,aACxBrb,EAAOmT,EAAM2N,eAAezF,GAAcrb,KAChDsU,EAAQ,GACR,IAAK,IAAIlR,EAAI,EAAGA,EAAIpD,EAAKR,SAAU4D,EACjCkR,EAAMe,KAAK,CAACoQ,QAASzlB,EAAKoD,GAAIiY,eAAcN,MAAO3X,IAIvD,OAAOkR,CACT,EAYAwb,MAAAA,CAAM3c,EAAOxR,EAAG0X,EAAS+gB,IAIhBD,EAAkBhnB,GAHR2oB,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GAC3BkG,EAAQuD,MAAQ,KAEmBwd,EADvB/gB,EAAQghB,mBAAoB,GAavD0B,QAAQ5oB,EAAOxR,EAAG0X,EAAS+gB,GACzB,MAAMJ,GAAW8B,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GAClCyJ,EAAOvD,EAAQuD,MAAQ,KACvByd,EAAmBhhB,EAAQghB,mBAAoB,EACrD,OAAOiB,EAAgBnoB,EAAO6mB,EAAUpd,EAAMvD,EAAQigB,UAAWc,EAAkBC,EACrF,EAWA/1B,EAAAA,CAAE6O,EAAOxR,EAAG0X,EAAS+gB,IAEZsB,EAAavoB,GADH2oB,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GACH,IAAKkG,EAAQigB,UAAWc,GAY/Dva,EAAAA,CAAE1M,EAAOxR,EAAG0X,EAAS+gB,IAEZsB,EAAavoB,GADH2oB,EAAAA,EAAAA,GAAoBn6B,EAAGwR,GACH,IAAKkG,EAAQigB,UAAWc,KCpWnE,MAAM4B,EAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,EAAiBC,EAAOlC,GAC/B,OAAOkC,EAAM5e,QAAOhd,GAAKA,EAAE67B,MAAQnC,GACrC,CAEA,SAASoC,EAA4BF,EAAOtf,GAC1C,OAAOsf,EAAM5e,QAAOhd,IAA0C,IAArC07B,EAAiBpO,QAAQttB,EAAE67B,MAAe77B,EAAE+7B,IAAIzf,OAASA,GACpF,CAEA,SAAS0f,EAAaJ,EAAO1hB,GAC3B,OAAO0hB,EAAMvS,MAAK,CAACpoB,EAAGC,KACpB,MAAM+6B,EAAK/hB,EAAUhZ,EAAID,EACnBiqB,EAAKhR,EAAUjZ,EAAIC,EACzB,OAAO+6B,EAAGjrB,SAAWka,EAAGla,OACtBirB,EAAGxhB,MAAQyQ,EAAGzQ,MACdwhB,EAAGjrB,OAASka,EAAGla,MAAM,GAE3B,CAuCA,SAASkrB,EAAcC,EAASC,GAC9B,MAAM7gB,EAlBR,SAAqB4gB,GACnB,MAAM5gB,EAAS,CAAC,EAChB,IAAK,MAAM8gB,KAAQF,EAAS,CAC1B,MAAM,MAACxhB,EAAK,IAAEkhB,EAAAA,YAAKS,GAAeD,EAClC,IAAK1hB,IAAU+gB,EAAiBa,SAASV,GACvC,SAEF,MAAMW,EAASjhB,EAAOZ,KAAWY,EAAOZ,GAAS,CAACqH,MAAO,EAAGya,OAAQ,EAAGzrB,OAAQ,EAAG4I,KAAM,IACxF4iB,EAAOxa,QACPwa,EAAOxrB,QAAUsrB,CACnB,CACA,OAAO/gB,CACT,CAMiBmhB,CAAYP,IACrB,aAACQ,EAAAA,cAAcC,GAAiBR,EACtC,IAAIt5B,EAAG0X,EAAMqiB,EACb,IAAK/5B,EAAI,EAAG0X,EAAO2hB,EAAQj9B,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAChD+5B,EAASV,EAAQr5B,GACjB,MAAM,SAACg6B,GAAYD,EAAOd,IACpBphB,EAAQY,EAAOshB,EAAOliB,OACtB/E,EAAS+E,GAASkiB,EAAOP,YAAc3hB,EAAM3J,OAC/C6rB,EAAOjS,YACTiS,EAAO5P,MAAQrX,EAASA,EAAS+mB,EAAeG,GAAYV,EAAOW,eACnEF,EAAO7P,OAAS4P,IAEhBC,EAAO5P,MAAQ0P,EACfE,EAAO7P,OAASpX,EAASA,EAASgnB,EAAgBE,GAAYV,EAAOY,gBAEzE,CACA,OAAOzhB,CACT,CAsBA,SAAS0hB,GAAeC,EAAYjY,EAAWhkB,EAAGC,GAChD,OAAO/B,KAAKC,IAAI89B,EAAWj8B,GAAIgkB,EAAUhkB,IAAM9B,KAAKC,IAAI89B,EAAWh8B,GAAI+jB,EAAU/jB,GACnF,CAEA,SAASi8B,GAAiBD,EAAYE,GACpCF,EAAW3Y,IAAMplB,KAAKC,IAAI89B,EAAW3Y,IAAK6Y,EAAW7Y,KACrD2Y,EAAWxY,KAAOvlB,KAAKC,IAAI89B,EAAWxY,KAAM0Y,EAAW1Y,MACvDwY,EAAWzY,OAAStlB,KAAKC,IAAI89B,EAAWzY,OAAQ2Y,EAAW3Y,QAC3DyY,EAAW1Y,MAAQrlB,KAAKC,IAAI89B,EAAW1Y,MAAO4Y,EAAW5Y,MAC3D,CAEA,SAAS6Y,GAAWpY,EAAWmX,EAAQS,EAAQthB,GAC7C,MAAM,IAACsgB,EAAAA,IAAKE,GAAOc,EACbK,EAAajY,EAAUiY,WAG7B,KAAK9kB,EAAAA,EAAAA,GAASyjB,GAAM,CACdgB,EAAOjjB,OAETqL,EAAU4W,IAAQgB,EAAOjjB,MAE3B,MAAMe,EAAQY,EAAOshB,EAAOliB,QAAU,CAACf,KAAM,EAAGoI,MAAO,GACvDrH,EAAMf,KAAOza,KAAKC,IAAIub,EAAMf,KAAMijB,EAAOjS,WAAamR,EAAI/O,OAAS+O,EAAI9O,OACvE4P,EAAOjjB,KAAOe,EAAMf,KAAOe,EAAMqH,MACjCiD,EAAU4W,IAAQgB,EAAOjjB,KAGvBmiB,EAAIuB,YACNH,GAAiBD,EAAYnB,EAAIuB,cAGnC,MAAMC,EAAWp+B,KAAKC,IAAI,EAAGg9B,EAAOoB,WAAaP,GAAeC,EAAYjY,EAAW,OAAQ,UACzFwY,EAAYt+B,KAAKC,IAAI,EAAGg9B,EAAOsB,YAAcT,GAAeC,EAAYjY,EAAW,MAAO,WAC1F0Y,EAAeJ,IAAatY,EAAUriB,EACtCg7B,EAAgBH,IAAcxY,EAAU9kB,EAK9C,OAJA8kB,EAAUriB,EAAI26B,EACdtY,EAAU9kB,EAAIs9B,EAGPZ,EAAOjS,WACV,CAACiT,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,EACnC,CAgBA,SAASI,GAAWnT,EAAY3F,GAC9B,MAAMiY,EAAajY,EAAUiY,WAE7B,SAASc,EAAmBC,GAC1B,MAAMC,EAAS,CAACxZ,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAwZ,EAAU9qB,SAAS0oB,IACjBqC,EAAOrC,GAAO18B,KAAKC,IAAI6lB,EAAU4W,GAAMqB,EAAWrB,GAAI,IAEjDqC,CACT,CAEA,OACIF,EADGpT,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CAEA,SAASuT,GAASC,EAAOnZ,EAAWmX,EAAQ7gB,GAC1C,MAAM8iB,EAAa,GACnB,IAAIv7B,EAAG0X,EAAMqiB,EAAQd,EAAKuC,EAAOC,EAEjC,IAAKz7B,EAAI,EAAG0X,EAAO4jB,EAAMl/B,OAAQo/B,EAAQ,EAAGx7B,EAAI0X,IAAQ1X,EAAG,CACzD+5B,EAASuB,EAAMt7B,GACfi5B,EAAMc,EAAOd,IAEbA,EAAI1kB,OACFwlB,EAAO5P,OAAShI,EAAUriB,EAC1Bi6B,EAAO7P,QAAU/H,EAAU9kB,EAC3B49B,GAAWlB,EAAOjS,WAAY3F,IAEhC,MAAM,KAAC4Y,EAAAA,MAAMC,GAAST,GAAWpY,EAAWmX,EAAQS,EAAQthB,GAI5D+iB,GAAST,GAAQQ,EAAWn/B,OAG5Bq/B,EAAUA,GAAWT,EAEhB/B,EAAIe,UACPuB,EAAWtpB,KAAK8nB,EAEpB,CAEA,OAAOyB,GAASH,GAASE,EAAYpZ,EAAWmX,EAAQ7gB,IAAWgjB,CACrE,CAEA,SAASC,GAAWzC,EAAKrX,EAAMH,EAAK0I,EAAOD,GACzC+O,EAAIxX,IAAMA,EACVwX,EAAIrX,KAAOA,EACXqX,EAAIvX,MAAQE,EAAOuI,EACnB8O,EAAItX,OAASF,EAAMyI,EACnB+O,EAAI9O,MAAQA,EACZ8O,EAAI/O,OAASA,CACf,CAEA,SAASyR,GAAWL,EAAOnZ,EAAWmX,EAAQ7gB,GAC5C,MAAMmjB,EAActC,EAAOuC,QAC3B,IAAI,EAAC36B,EAAAA,EAAGub,GAAK0F,EAEb,IAAK,MAAM4X,KAAUuB,EAAO,CAC1B,MAAMrC,EAAMc,EAAOd,IACbphB,EAAQY,EAAOshB,EAAOliB,QAAU,CAACqH,MAAO,EAAGya,OAAQ,EAAGzrB,OAAQ,GAC9DA,EAAS,EAAQsrB,YAAc3hB,EAAM3J,QAAW,EACtD,GAAI6rB,EAAOjS,WAAY,CACrB,MAAMqC,EAAQhI,EAAUriB,EAAIoO,EACtBgc,EAASrS,EAAMf,MAAQmiB,EAAI/O,QAC7B7G,EAAAA,EAAAA,GAAQxL,EAAMpH,SAChBgM,EAAI5E,EAAMpH,OAERwoB,EAAIe,SACN0B,GAAWzC,EAAK2C,EAAYha,KAAMnF,EAAG6c,EAAOoB,WAAakB,EAAYla,MAAQka,EAAYha,KAAMsI,GAE/FwR,GAAWzC,EAAK9W,EAAUP,KAAO/J,EAAM8hB,OAAQld,EAAG0N,EAAOD,GAE3DrS,EAAMpH,MAAQgM,EACd5E,EAAM8hB,QAAUxP,EAChB1N,EAAIwc,EAAItX,WACH,CACL,MAAMuI,EAAS/H,EAAU9kB,EAAI6Q,EACvBic,EAAQtS,EAAMf,MAAQmiB,EAAI9O,OAC5B9G,EAAAA,EAAAA,GAAQxL,EAAMpH,SAChBvP,EAAI2W,EAAMpH,OAERwoB,EAAIe,SACN0B,GAAWzC,EAAK/3B,EAAG06B,EAAYna,IAAK0I,EAAOmP,EAAOsB,YAAcgB,EAAYja,OAASia,EAAYna,KAEjGia,GAAWzC,EAAK/3B,EAAGihB,EAAUV,IAAM5J,EAAM8hB,OAAQxP,EAAOD,GAE1DrS,EAAMpH,MAAQvP,EACd2W,EAAM8hB,QAAUzP,EAChBhpB,EAAI+3B,EAAIvX,MAEZ,CAEAS,EAAUjhB,EAAIA,EACdihB,EAAU1F,EAAIA,CAChB,CAwBA,OAAe,CAQbqf,OAAO/rB,EAAOoB,GACPpB,EAAMurB,QACTvrB,EAAMurB,MAAQ,IAIhBnqB,EAAK6oB,SAAW7oB,EAAK6oB,WAAY,EACjC7oB,EAAKylB,SAAWzlB,EAAKylB,UAAY,MACjCzlB,EAAKjD,OAASiD,EAAKjD,QAAU,EAE7BiD,EAAK4qB,QAAU5qB,EAAK4qB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH5qB,KAAK+Q,GACHhR,EAAKC,KAAK+Q,EACZ,GAEJ,EAEApS,EAAMurB,MAAMrpB,KAAKd,EACnB,EAOA8qB,UAAUlsB,EAAOmsB,GACf,MAAMvkB,EAAQ5H,EAAMurB,MAAQvrB,EAAMurB,MAAM9Q,QAAQ0R,IAAe,GAChD,IAAXvkB,GACF5H,EAAMurB,MAAMhW,OAAO3N,EAAO,EAE9B,EAQAtC,UAAUtF,EAAOoB,EAAM8E,GACrB9E,EAAK6oB,SAAW/jB,EAAQ+jB,SACxB7oB,EAAKylB,SAAW3gB,EAAQ2gB,SACxBzlB,EAAKjD,OAAS+H,EAAQ/H,MACxB,EAUAqG,OAAOxE,EAAOoa,EAAOD,EAAQiS,GAC3B,IAAKpsB,EACH,OAGF,MAAM8rB,GAAUO,EAAAA,EAAAA,GAAUrsB,EAAMkG,QAAQ8jB,OAAO8B,SACzC5B,EAAiB59B,KAAKC,IAAI6tB,EAAQ0R,EAAQ1R,MAAO,GACjD+P,EAAkB79B,KAAKC,IAAI4tB,EAAS2R,EAAQ3R,OAAQ,GACpDoR,EA5QV,SAA0BA,GACxB,MAAMe,EA1DR,SAAmBf,GACjB,MAAMe,EAAc,GACpB,IAAIr8B,EAAG0X,EAAMuhB,EAAKF,EAAKlhB,EAAO2hB,EAE9B,IAAKx5B,EAAI,EAAG0X,GAAQ4jB,GAAS,IAAIl/B,OAAQ4D,EAAI0X,IAAQ1X,EACnDi5B,EAAMqC,EAAMt7B,KACV42B,SAAUmC,EAAK9iB,SAAU4B,QAAO2hB,cAAc,IAAMP,GACtDoD,EAAYpqB,KAAK,CACf0F,MAAO3X,EACPi5B,MACAF,MACAjR,WAAYmR,EAAIzP,eAChBtb,OAAQ+qB,EAAI/qB,OACZ2J,MAAOA,GAAUkhB,EAAMlhB,EACvB2hB,gBAGJ,OAAO6C,CACT,CAwCsBC,CAAUhB,GACxBtB,EAAWd,EAAamD,EAAYniB,QAAOqf,GAAQA,EAAKN,IAAIe,YAAW,GACvEpY,EAAOsX,EAAaL,EAAiBwD,EAAa,SAAS,GAC3D3a,EAAQwX,EAAaL,EAAiBwD,EAAa,UACnD5a,EAAMyX,EAAaL,EAAiBwD,EAAa,QAAQ,GACzD1a,EAASuX,EAAaL,EAAiBwD,EAAa,WACpDE,EAAmBvD,EAA4BqD,EAAa,KAC5DG,EAAiBxD,EAA4BqD,EAAa,KAEhE,MAAO,CACLrC,WACAyC,WAAY7a,EAAKyE,OAAO5E,GACxBib,eAAgBhb,EAAM2E,OAAOmW,GAAgBnW,OAAO1E,GAAQ0E,OAAOkW,GACnEpa,UAAW0W,EAAiBwD,EAAa,aACzCM,SAAU/a,EAAKyE,OAAO3E,GAAO2E,OAAOmW,GACpC1U,WAAYrG,EAAI4E,OAAO1E,GAAQ0E,OAAOkW,GAE1C,CA0PkBK,CAAiB7sB,EAAMurB,OAC/BuB,EAAgBvB,EAAMqB,SACtBG,EAAkBxB,EAAMxT,YAI9BiV,EAAAA,EAAAA,GAAKhtB,EAAMurB,OAAOrC,IACgB,mBAArBA,EAAI+D,cACb/D,EAAI+D,kBA+BR,MAAMC,EAA0BJ,EAAczqB,QAAO,CAACgf,EAAOmI,IAC3DA,EAAKN,IAAIhjB,UAAwC,IAA7BsjB,EAAKN,IAAIhjB,QAAQ0d,QAAoBvC,EAAQA,EAAQ,GAAG,IAAM,EAE9EkI,EAASttB,OAAOyX,OAAO,CAC3BiX,WAAYvQ,EACZyQ,YAAa1Q,EACb2R,UACA5B,iBACAC,kBACAL,aAAcI,EAAiB,EAAIgD,EACnCnD,cAAeI,EAAkB,IAE7BE,EAAapuB,OAAOqB,OAAO,CAAC,EAAGwuB,GACrCxB,GAAiBD,GAAYgC,EAAAA,EAAAA,GAAUD,IACvC,MAAMha,EAAYnW,OAAOqB,OAAO,CAC9B+sB,aACAt6B,EAAGm6B,EACH58B,EAAG68B,EACHh5B,EAAG26B,EAAQja,KACXnF,EAAGof,EAAQpa,KACVoa,GAEGpjB,EAAS2gB,EAAcyD,EAAcxW,OAAOyW,GAAkBxD,GAGpE+B,GAASC,EAAMtB,SAAU7X,EAAWmX,EAAQ7gB,GAG5C4iB,GAASwB,EAAe1a,EAAWmX,EAAQ7gB,GAGvC4iB,GAASyB,EAAiB3a,EAAWmX,EAAQ7gB,IAE/C4iB,GAASwB,EAAe1a,EAAWmX,EAAQ7gB,GApRjD,SAA0B0J,GACxB,MAAMiY,EAAajY,EAAUiY,WAE7B,SAAS8C,EAAUnE,GACjB,MAAMoE,EAAS9gC,KAAKC,IAAI89B,EAAWrB,GAAO5W,EAAU4W,GAAM,GAE1D,OADA5W,EAAU4W,IAAQoE,EACXA,CACT,CACAhb,EAAU1F,GAAKygB,EAAU,OACzB/a,EAAUjhB,GAAKg8B,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CA2QIE,CAAiBjb,GAGjBwZ,GAAWL,EAAMmB,WAAYta,EAAWmX,EAAQ7gB,GAGhD0J,EAAUjhB,GAAKihB,EAAUriB,EACzBqiB,EAAU1F,GAAK0F,EAAU9kB,EAEzBs+B,GAAWL,EAAMoB,eAAgBva,EAAWmX,EAAQ7gB,GAEpD1I,EAAMoS,UAAY,CAChBP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAUriB,EAClC6hB,OAAQQ,EAAUV,IAAMU,EAAU9kB,EAClC6sB,OAAQ/H,EAAU9kB,EAClB8sB,MAAOhI,EAAUriB,IAInBi9B,EAAAA,EAAAA,GAAKzB,EAAMnZ,WAAY4X,IACrB,MAAMd,EAAMc,EAAOd,IACnBjtB,OAAOqB,OAAO4rB,EAAKlpB,EAAMoS,WACzB8W,EAAI1kB,OAAO4N,EAAUriB,EAAGqiB,EAAU9kB,EAAG,CAACukB,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAC,GAE9E,GC7ba,MAAM0b,GAOnBC,eAAeC,EAAQhQ,GAAc,CAQrCiQ,eAAe/a,GACb,OAAO,CACT,CASAgb,iBAAiB1tB,EAAOpT,EAAM+gC,GAAW,CAQzCC,oBAAoB5tB,EAAOpT,EAAM+gC,GAAW,CAK5CE,sBACE,OAAO,CACT,CASAC,eAAexb,EAAS8H,EAAOD,EAAQqD,GAGrC,OAFApD,EAAQ9tB,KAAKC,IAAI,EAAG6tB,GAAS9H,EAAQ8H,OACrCD,EAASA,GAAU7H,EAAQ6H,OACpB,CACLC,QACAD,OAAQ7tB,KAAKC,IAAI,EAAGixB,EAAclxB,KAAKwX,MAAMsW,EAAQoD,GAAerD,GAExE,CAMA4T,WAAWP,GACT,OAAO,CACT,CAMAQ,aAAa7oB,GAEb,ECrEa,MAAM8oB,WAAsBX,GACzCC,eAAensB,GAIb,OAAOA,GAAQA,EAAK4N,YAAc5N,EAAK4N,WAAW,OAAS,IAC7D,CACAgf,aAAa7oB,GACXA,EAAOe,QAAQY,WAAY,CAC7B,ECRF,MAAMonB,GAAc,WAOdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgBhoB,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAMioB,KAAuBC,EAAAA,GAA+B,CAACC,SAAS,GAMtE,SAASC,GAAejvB,EAAOpT,EAAM+gC,GACnC3tB,EAAMwtB,OAAOI,oBAAoBhhC,EAAM+gC,EAAUmB,GACnD,CAcA,SAASI,GAAiBC,EAAU3B,GAClC,IAAK,MAAM4B,KAAQD,EACjB,GAAIC,IAAS5B,GAAU4B,EAAKC,SAAS7B,GACnC,OAAO,CAGb,CAEA,SAAS8B,GAAqBtvB,EAAOpT,EAAM+gC,GACzC,MAAMH,EAASxtB,EAAMwtB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMxY,KAASuY,EAClBC,EAAUA,GAAWR,GAAiBhY,EAAMyY,WAAYnC,GACxDkC,EAAUA,IAAYR,GAAiBhY,EAAM0Y,aAAcpC,GAEzDkC,GACF/B,OAIJ,OADA4B,EAASM,QAAQnjC,SAAU,CAACojC,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,SAASS,GAAqBhwB,EAAOpT,EAAM+gC,GACzC,MAAMH,EAASxtB,EAAMwtB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMxY,KAASuY,EAClBC,EAAUA,GAAWR,GAAiBhY,EAAM0Y,aAAcpC,GAC1DkC,EAAUA,IAAYR,GAAiBhY,EAAMyY,WAAYnC,GAEvDkC,GACF/B,OAIJ,OADA4B,EAASM,QAAQnjC,SAAU,CAACojC,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,MAAMU,GAAqB,IAAIrwB,IAC/B,IAAIswB,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAMvvB,OAAOwvB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB3vB,SAAQ,CAACgwB,EAAQtwB,KAC9BA,EAAMuwB,0BAA4BH,GACpCE,OAGN,CAgBA,SAASE,GAAqBxwB,EAAOpT,EAAM+gC,GACzC,MAAMH,EAASxtB,EAAMwtB,OACfiD,EAAYjD,IAAUkD,EAAAA,EAAAA,GAAelD,GAC3C,IAAKiD,EACH,OAEF,MAAMH,GAASK,EAAAA,EAAAA,IAAU,CAACvW,EAAOD,KAC/B,MAAMpqB,EAAI0gC,EAAUG,YACpBjD,EAASvT,EAAOD,GACZpqB,EAAI0gC,EAAUG,aAQhBjD,MAED9sB,QAGG0uB,EAAW,IAAIsB,gBAAepB,IAClC,MAAMvY,EAAQuY,EAAQ,GAChBrV,EAAQlD,EAAM4Z,YAAY1W,MAC1BD,EAASjD,EAAM4Z,YAAY3W,OAInB,IAAVC,GAA0B,IAAXD,GAGnBmW,EAAOlW,EAAOD,EAAAA,IAKhB,OAHAoV,EAASM,QAAQY,GAhDnB,SAAuCzwB,EAAOswB,GACvCL,GAAmBlpB,MACtBlG,OAAO6sB,iBAAiB,SAAUyC,IAEpCF,GAAmBnuB,IAAI9B,EAAOswB,EAChC,CA4CES,CAA8B/wB,EAAOswB,GAE9Bf,CACT,CAEA,SAASyB,GAAgBhxB,EAAOpT,EAAM2iC,GAChCA,GACFA,EAAS0B,aAEE,WAATrkC,GAnDN,SAAyCoT,GACvCiwB,GAAmBrtB,OAAO5C,GACrBiwB,GAAmBlpB,MACtBlG,OAAO+sB,oBAAoB,SAAUuC,GAEzC,CA+CIe,CAAgClxB,EAEpC,CAEA,SAASmxB,GAAqBnxB,EAAOpT,EAAM+gC,GACzC,MAAMH,EAASxtB,EAAMwtB,OACf4D,GAAQT,EAAAA,EAAAA,IAAW3uB,IAIL,OAAdhC,EAAM8K,KACR6iB,EA1IN,SAAyB3rB,EAAOhC,GAC9B,MAAMpT,EAAOuhC,GAAYnsB,EAAMpV,OAASoV,EAAMpV,MACxC,EAACuE,EAAC,EAAEub,IAAKic,EAAAA,EAAAA,GAAoB3mB,EAAOhC,GAC1C,MAAO,CACLpT,OACAoT,QACAqxB,OAAQrvB,EACR7Q,OAAS5B,IAAN4B,EAAkBA,EAAI,KACzBub,OAASnd,IAANmd,EAAkBA,EAAI,KAE7B,CAgIe4kB,CAAgBtvB,EAAOhC,MAEjCA,GAIH,OAxJF,SAAqBovB,EAAMxiC,EAAM+gC,GAC/ByB,EAAK1B,iBAAiB9gC,EAAM+gC,EAAUmB,GACxC,CAoJEyC,CAAY/D,EAAQ5gC,EAAMwkC,GAEnBA,CACT,CAMe,MAAMI,WAAoBlE,GAOvCC,eAAeC,EAAQhQ,GAIrB,MAAM9K,EAAU8a,GAAUA,EAAOxe,YAAcwe,EAAOxe,WAAW,MASjE,OAAI0D,GAAWA,EAAQ8a,SAAWA,GA3OtC,SAAoBA,EAAQhQ,GAC1B,MAAMK,EAAQ2P,EAAO3P,MAIf4T,EAAejE,EAAOkE,aAAa,UACnCC,EAAcnE,EAAOkE,aAAa,SAsBxC,GAnBAlE,EAAOU,IAAe,CACpB1tB,QAAS,CACP2Z,OAAQsX,EACRrX,MAAOuX,EACP9T,MAAO,CACL+F,QAAS/F,EAAM+F,QACfzJ,OAAQ0D,EAAM1D,OACdC,MAAOyD,EAAMzD,SAQnByD,EAAM+F,QAAU/F,EAAM+F,SAAW,QAEjC/F,EAAM+T,UAAY/T,EAAM+T,WAAa,aAEjC/C,GAAc8C,GAAc,CAC9B,MAAME,GAAeC,EAAAA,EAAAA,GAAatE,EAAQ,cACrBj+B,IAAjBsiC,IACFrE,EAAOpT,MAAQyX,GAInB,GAAIhD,GAAc4C,GAChB,GAA4B,KAAxBjE,EAAO3P,MAAM1D,OAIfqT,EAAOrT,OAASqT,EAAOpT,OAASoD,GAAe,OAC1C,CACL,MAAMuU,GAAgBD,EAAAA,EAAAA,GAAatE,EAAQ,eACrBj+B,IAAlBwiC,IACFvE,EAAOrT,OAAS4X,GAMxB,CA4LMC,CAAWxE,EAAQhQ,GACZ9K,GAGF,IACT,CAKA+a,eAAe/a,GACb,MAAM8a,EAAS9a,EAAQ8a,OACvB,IAAKA,EAAOU,IACV,OAAO,EAGT,MAAM1tB,EAAUgtB,EAAOU,IAAa1tB,QACpC,CAAC,SAAU,SAASF,SAASgD,IAC3B,MAAMuD,EAAQrG,EAAQ8C,IAClBuW,EAAAA,EAAAA,GAAchT,GAChB2mB,EAAOyE,gBAAgB3uB,GAEvBkqB,EAAO0E,aAAa5uB,EAAMuD,MAI9B,MAAMgX,EAAQrd,EAAQqd,OAAS,CAAC,EAahC,OAZA5hB,OAAOD,KAAK6hB,GAAOvd,SAASsF,IAC1B4nB,EAAO3P,MAAMjY,GAAOiY,EAAMjY,EAAI,IAQhC4nB,EAAOpT,MAAQoT,EAAOpT,aAEfoT,EAAOU,KACP,CACT,CAQAR,iBAAiB1tB,EAAOpT,EAAM+gC,GAE5B/vB,KAAKgwB,oBAAoB5tB,EAAOpT,GAEhC,MAAMulC,EAAUnyB,EAAMoyB,WAAapyB,EAAMoyB,SAAW,CAAC,GAM/CtL,EALW,CACfuL,OAAQ/C,GACRgD,OAAQtC,GACRM,OAAQE,IAEe5jC,IAASukC,GAClCgB,EAAQvlC,GAAQk6B,EAAQ9mB,EAAOpT,EAAM+gC,EACvC,CAOAC,oBAAoB5tB,EAAOpT,GACzB,MAAMulC,EAAUnyB,EAAMoyB,WAAapyB,EAAMoyB,SAAW,CAAC,GAC/ChB,EAAQe,EAAQvlC,GAEtB,IAAKwkC,EACH,QAGe,CACfiB,OAAQrB,GACRsB,OAAQtB,GACRV,OAAQU,IAEepkC,IAASqiC,IAC1BjvB,EAAOpT,EAAMwkC,GACrBe,EAAQvlC,QAAQ2C,CAClB,CAEAs+B,sBACE,OAAOhtB,OAAOwvB,gBAChB,CAQAvC,eAAeN,EAAQpT,EAAOD,EAAQqD,GACpC,OAAOsQ,EAAAA,EAAAA,GAAeN,EAAQpT,EAAOD,EAAQqD,EAC/C,CAKAuQ,WAAWP,GACT,MAAMiD,GAAYC,EAAAA,EAAAA,GAAelD,GACjC,SAAUiD,IAAaA,EAAU8B,YACnC,EC1XK,SAASC,GAAgBhF,GAC9B,QAAKiF,EAAAA,EAAAA,MAAiD,oBAApBC,iBAAmClF,aAAkBkF,gBAC9EzE,GAEFuD,EACT,CCLe,MAAMmB,GAEnB/nB,gBAAkB,CAAC,EACnBA,0BAAuBrb,EAIvBgV,QAAS,EAITquB,gBAAgB3L,GACd,MAAM,EAAC91B,EAAAA,EAAGub,GAAK9O,KAAKwqB,SAAS,CAAC,IAAK,KAAMnB,GACzC,MAAO,CAAC91B,IAAGub,IACb,CAEAmmB,WACE,OAAO5P,EAAAA,EAAAA,GAASrlB,KAAKzM,KAAM8xB,EAAAA,EAAAA,GAASrlB,KAAK8O,EAC3C,CASA0b,SAASxhB,EAAiBksB,GACxB,MAAM7yB,EAAQrC,KAAKwI,YACnB,IAAK0sB,IAAU7yB,EAEb,OAAOrC,KAET,MAAM5O,EAA+B,CAAC,EAItC,OAHA4X,EAAMtG,SAASgD,IACbtU,EAAIsU,GAAQrD,EAAMqD,IAASrD,EAAMqD,GAAMiB,SAAWtE,EAAMqD,GAAMe,IAAMzG,KAAK0F,EAAe,IAEnFtU,CACT,EC3BK,SAAS+jC,GAAS7rB,EAAO6P,GAC9B,MAAMic,EAAW9rB,EAAMhB,QAAQ6Q,MACzBkc,EA8BR,SAA2B/rB,GACzB,MAAM8R,EAAS9R,EAAMhB,QAAQ8S,OACvBka,EAAahsB,EAAMisB,YACnBC,EAAWlsB,EAAMyP,QAAUuc,GAAcla,EAAS,EAAI,GACtDqa,EAAWnsB,EAAMosB,WAAaJ,EACpC,OAAO5mC,KAAKwX,MAAMxX,KAAKiB,IAAI6lC,EAAUC,GACvC,CApC6BE,CAAkBrsB,GACvCssB,EAAalnC,KAAKiB,IAAIylC,EAASS,eAAiBR,EAAoBA,GACpES,EAAeV,EAASW,MAAMC,QAgEtC,SAAyB7c,GACvB,MAAM8c,EAAS,GACf,IAAI5jC,EAAG0X,EACP,IAAK1X,EAAI,EAAG0X,EAAOoP,EAAM1qB,OAAQ4D,EAAI0X,EAAM1X,IACrC8mB,EAAM9mB,GAAG0jC,OACXE,EAAO3xB,KAAKjS,GAGhB,OAAO4jC,CACT,CAzEgDC,CAAgB/c,GAAS,GACjEgd,EAAkBL,EAAarnC,OAC/B2nC,EAAQN,EAAa,GACrBpZ,EAAOoZ,EAAaK,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBP,EAEpB,OAwEJ,SAAoBzc,EAAOkd,EAAUP,EAAcrW,GACjD,IAEIptB,EAFAkf,EAAQ,EACR6M,EAAO0X,EAAa,GAIxB,IADArW,EAAU/wB,KAAK4nC,KAAK7W,GACfptB,EAAI,EAAGA,EAAI8mB,EAAM1qB,OAAQ4D,IACxBA,IAAM+rB,IACRiY,EAAS/xB,KAAK6U,EAAM9mB,IACpBkf,IACA6M,EAAO0X,EAAavkB,EAAQkO,GAGlC,CAtFI8W,CAAWpd,EAAOkd,EAAUP,EAAcK,EAAkBP,GACrDS,EAGT,MAAM5W,EA6BR,SAA0BqW,EAAc3c,EAAOyc,GAC7C,MAAMY,EA6FR,SAAwBhf,GACtB,MAAMnmB,EAAMmmB,EAAI/oB,OAChB,IAAI4D,EAAG41B,EAEP,GAAI52B,EAAM,EACR,OAAO,EAGT,IAAK42B,EAAOzQ,EAAI,GAAInlB,EAAI,EAAGA,EAAIhB,IAAOgB,EACpC,GAAImlB,EAAInlB,GAAKmlB,EAAInlB,EAAI,KAAO41B,EAC1B,OAAO,EAGX,OAAOA,CACT,CA3G2BwO,CAAeX,GAClCrW,EAAUtG,EAAM1qB,OAASmnC,EAI/B,IAAKY,EACH,OAAO9nC,KAAKC,IAAI8wB,EAAS,GAG3B,MAAMiX,GAAUC,EAAAA,EAAAA,GAAWH,GAC3B,IAAK,IAAInkC,EAAI,EAAG0X,EAAO2sB,EAAQjoC,OAAS,EAAG4D,EAAI0X,EAAM1X,IAAK,CACxD,MAAM8S,EAASuxB,EAAQrkC,GACvB,GAAI8S,EAASsa,EACX,OAAOta,CAEX,CACA,OAAOzW,KAAKC,IAAI8wB,EAAS,EAC3B,CA/CkBmX,CAAiBd,EAAc3c,EAAOyc,GAEtD,GAAIO,EAAkB,EAAG,CACvB,IAAI9jC,EAAG0X,EACP,MAAM8sB,EAAkBV,EAAkB,EAAIznC,KAAKY,OAAOotB,EAAO0Z,IAAUD,EAAkB,IAAM,KAEnG,IADAjX,GAAK/F,EAAOkd,EAAU5W,GAASxD,EAAAA,EAAAA,GAAc4a,GAAmB,EAAIT,EAAQS,EAAiBT,GACxF/jC,EAAI,EAAG0X,EAAOosB,EAAkB,EAAG9jC,EAAI0X,EAAM1X,IAChD6sB,GAAK/F,EAAOkd,EAAU5W,EAASqW,EAAazjC,GAAIyjC,EAAazjC,EAAI,IAGnE,OADA6sB,GAAK/F,EAAOkd,EAAU5W,EAAS/C,GAAMT,EAAAA,EAAAA,GAAc4a,GAAmB1d,EAAM1qB,OAASiuB,EAAOma,GACrFR,EAGT,OADAnX,GAAK/F,EAAOkd,EAAU5W,GACf4W,CACT,CA6EA,SAASnX,GAAK/F,EAAOkd,EAAU5W,EAASqX,EAAYC,GAClD,MAAMj0B,GAAQmM,EAAAA,EAAAA,GAAe6nB,EAAY,GACnCptB,EAAMhb,KAAKiB,KAAIsf,EAAAA,EAAAA,GAAe8nB,EAAU5d,EAAM1qB,QAAS0qB,EAAM1qB,QACnE,IACIA,EAAQ4D,EAAG+rB,EADX7M,EAAQ,EAWZ,IARAkO,EAAU/wB,KAAK4nC,KAAK7W,GAChBsX,IACFtoC,EAASsoC,EAAWD,EACpBrX,EAAUhxB,EAASC,KAAKwX,MAAMzX,EAASgxB,IAGzCrB,EAAOtb,EAEAsb,EAAO,GACZ7M,IACA6M,EAAO1vB,KAAKY,MAAMwT,EAAQyO,EAAQkO,GAGpC,IAAKptB,EAAI3D,KAAKC,IAAImU,EAAO,GAAIzQ,EAAIqX,EAAKrX,IAChCA,IAAM+rB,IACRiY,EAAS/xB,KAAK6U,EAAM9mB,IACpBkf,IACA6M,EAAO1vB,KAAKY,MAAMwT,EAAQyO,EAAQkO,GAGxC,CC7IA,MACMuX,GAAiB,CAAC1tB,EAAO2Q,EAAMmB,IAAoB,QAATnB,GAA2B,SAATA,EAAkB3Q,EAAM2Q,GAAQmB,EAAS9R,EAAM2Q,GAAQmB,EAYzH,SAAS6b,GAAOzf,EAAK0f,GACnB,MAAMjB,EAAS,GACTkB,EAAY3f,EAAI/oB,OAASyoC,EACzB7lC,EAAMmmB,EAAI/oB,OAChB,IAAI4D,EAAI,EAER,KAAOA,EAAIhB,EAAKgB,GAAK8kC,EACnBlB,EAAO3xB,KAAKkT,EAAI9oB,KAAKwX,MAAM7T,KAE7B,OAAO4jC,CACT,CAOA,SAASmB,GAAoB9tB,EAAOU,EAAOqtB,GACzC,MAAM5oC,EAAS6a,EAAM6P,MAAM1qB,OACrB6oC,EAAa5oC,KAAKiB,IAAIqa,EAAOvb,EAAS,GACtCqU,EAAQwG,EAAM6T,YACdzT,EAAMJ,EAAM8T,UACZma,EAAU,KAChB,IACInc,EADAoc,EAAYluB,EAAM8P,gBAAgBke,GAGtC,KAAID,IAEAjc,EADa,IAAX3sB,EACOC,KAAKC,IAAI6oC,EAAY10B,EAAO4G,EAAM8tB,GACxB,IAAVxtB,GACCV,EAAM8P,gBAAgB,GAAKoe,GAAa,GAExCA,EAAYluB,EAAM8P,gBAAgBke,EAAa,IAAM,EAEjEE,GAAaF,EAAattB,EAAQoR,GAAUA,EAGxCoc,EAAY10B,EAAQy0B,GAAWC,EAAY9tB,EAAM6tB,IAIvD,OAAOC,CACT,CAuBA,SAASC,GAAkBnvB,GACzB,OAAOA,EAAQovB,UAAYpvB,EAAQgtB,WAAa,CAClD,CAKA,SAASqC,GAAervB,EAASsvB,GAC/B,IAAKtvB,EAAQ0d,QACX,OAAO,EAGT,MAAM6R,GAAOC,EAAAA,EAAAA,IAAOxvB,EAAQuvB,KAAMD,GAC5B1J,GAAUO,EAAAA,EAAAA,GAAUnmB,EAAQ4lB,SAGlC,QAFcx7B,EAAAA,EAAAA,GAAQ4V,EAAQ4X,MAAQ5X,EAAQ4X,KAAKzxB,OAAS,GAE5CopC,EAAKE,WAAc7J,EAAQ3R,MAC7C,CAiBA,SAASyb,GAAWC,EAAOhP,EAAUxf,GACnC,IAAIrY,GAAM8mC,EAAAA,EAAAA,IAAmBD,GAI7B,OAHI,GAAyB,UAAbhP,IAA2Bxf,GAAwB,UAAbwf,KACpD73B,EAnHiB,CAAC6mC,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAmHhFE,CAAa/mC,IAEdA,CACT,CAuCe,MAAMgnC,WAAcrD,GAGjCj1B,YAAY0F,GACVkW,QAGA1b,KAAKzR,GAAKiX,EAAIjX,GAEdyR,KAAKhR,KAAOwW,EAAIxW,KAEhBgR,KAAKsI,aAAU3W,EAEfqO,KAAKkN,IAAM1H,EAAI0H,IAEflN,KAAKoC,MAAQoD,EAAIpD,MAIjBpC,KAAK8T,SAAMniB,EAEXqO,KAAKgU,YAASriB,EAEdqO,KAAKiU,UAAOtiB,EAEZqO,KAAK+T,WAAQpiB,EAEbqO,KAAKwc,WAAQ7qB,EAEbqO,KAAKuc,YAAS5qB,EACdqO,KAAKq4B,SAAW,CACdpkB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGVhU,KAAKmjB,cAAWxxB,EAEhBqO,KAAKojB,eAAYzxB,EAEjBqO,KAAKs4B,gBAAa3mC,EAElBqO,KAAKu4B,mBAAgB5mC,EAErBqO,KAAKw4B,iBAAc7mC,EAEnBqO,KAAKy4B,kBAAe9mC,EAIpBqO,KAAK6L,UAAOla,EAEZqO,KAAK04B,mBAAgB/mC,EACrBqO,KAAKrQ,SAAMgC,EACXqO,KAAKrR,SAAMgD,EACXqO,KAAK24B,YAAShnC,EAEdqO,KAAKmZ,MAAQ,GAEbnZ,KAAK44B,eAAiB,KAEtB54B,KAAK64B,YAAc,KAEnB74B,KAAK84B,YAAc,KACnB94B,KAAK+Y,QAAU,EACf/Y,KAAK01B,WAAa,EAClB11B,KAAK+4B,kBAAoB,CAAC,EAE1B/4B,KAAKmd,iBAAcxrB,EAEnBqO,KAAKod,eAAYzrB,EACjBqO,KAAKyoB,gBAAiB,EACtBzoB,KAAKg5B,cAAWrnC,EAChBqO,KAAKi5B,cAAWtnC,EAChBqO,KAAKk5B,mBAAgBvnC,EACrBqO,KAAKm5B,mBAAgBxnC,EACrBqO,KAAKo5B,aAAe,EACpBp5B,KAAKq5B,aAAe,EACpBr5B,KAAKuY,OAAS,CAAC,EACfvY,KAAKs5B,mBAAoB,EACzBt5B,KAAK8N,cAAWnc,CAClB,CAMAm2B,KAAKxf,GACHtI,KAAKsI,QAAUA,EAAQixB,WAAWv5B,KAAKoR,cAEvCpR,KAAK6L,KAAOvD,EAAQuD,KAGpB7L,KAAKi5B,SAAWj5B,KAAKsR,MAAMhJ,EAAQ3Y,KACnCqQ,KAAKg5B,SAAWh5B,KAAKsR,MAAMhJ,EAAQ3Z,KACnCqR,KAAKm5B,cAAgBn5B,KAAKsR,MAAMhJ,EAAQkxB,cACxCx5B,KAAKk5B,cAAgBl5B,KAAKsR,MAAMhJ,EAAQmxB,aAC1C,CAQAnoB,MAAM4D,EAAKlL,GACT,OAAOkL,CACT,CAOA5B,gBACE,IAAI,SAAC2lB,EAAQ,SAAED,EAAQ,cAAEG,EAAAA,cAAeD,GAAiBl5B,KAKzD,OAJAi5B,GAAWS,EAAAA,EAAAA,GAAgBT,EAAUlmB,OAAOC,mBAC5CgmB,GAAWU,EAAAA,EAAAA,GAAgBV,EAAUjmB,OAAOE,mBAC5CkmB,GAAgBO,EAAAA,EAAAA,GAAgBP,EAAepmB,OAAOC,mBACtDkmB,GAAgBQ,EAAAA,EAAAA,GAAgBR,EAAenmB,OAAOE,mBAC/C,CACLtjB,KAAK+pC,EAAAA,EAAAA,GAAgBT,EAAUE,GAC/BxqC,KAAK+qC,EAAAA,EAAAA,GAAgBV,EAAUE,GAC/B9lB,YAAY5I,EAAAA,EAAAA,GAASyuB,GACrB5lB,YAAY7I,EAAAA,EAAAA,GAASwuB,GAEzB,CAQAtmB,UAAUC,GAER,IACIJ,GADA,IAAC5iB,EAAAA,IAAKhB,EAAAA,WAAKykB,EAAAA,WAAYC,GAAcrT,KAAKsT,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAAC1jB,MAAKhB,OAGf,MAAMgrC,EAAQ35B,KAAKqL,0BACnB,IAAK,IAAIhZ,EAAI,EAAG0X,EAAO4vB,EAAMlrC,OAAQ4D,EAAI0X,IAAQ1X,EAC/CkgB,EAAQonB,EAAMtnC,GAAGkZ,WAAWmH,UAAU1S,KAAM2S,GACvCS,IACHzjB,EAAMjB,KAAKiB,IAAIA,EAAK4iB,EAAM5iB,MAEvB0jB,IACH1kB,EAAMD,KAAKC,IAAIA,EAAK4jB,EAAM5jB,MAQ9B,OAHAgB,EAAM0jB,GAAc1jB,EAAMhB,EAAMA,EAAMgB,EACtChB,EAAMykB,GAAczjB,EAAMhB,EAAMgB,EAAMhB,EAE/B,CACLgB,KAAK+pC,EAAAA,EAAAA,GAAgB/pC,GAAK+pC,EAAAA,EAAAA,GAAgB/qC,EAAKgB,IAC/ChB,KAAK+qC,EAAAA,EAAAA,GAAgB/qC,GAAK+qC,EAAAA,EAAAA,GAAgB/pC,EAAKhB,IAEnD,CAOAk+B,aACE,MAAO,CACL5Y,KAAMjU,KAAKw4B,aAAe,EAC1B1kB,IAAK9T,KAAKs4B,YAAc,EACxBvkB,MAAO/T,KAAKy4B,cAAgB,EAC5BzkB,OAAQhU,KAAKu4B,eAAiB,EAElC,CAOAqB,WACE,OAAO55B,KAAKmZ,KACd,CAKApH,YACE,MAAM9iB,EAAO+Q,KAAKoC,MAAMnT,KACxB,OAAO+Q,KAAKsI,QAAQpZ,SAAW8Q,KAAK6b,eAAiB5sB,EAAK4qC,QAAU5qC,EAAK6qC,UAAY7qC,EAAKC,QAAU,EACtG,CAKA6qC,cAAcvlB,EAAYxU,KAAKoC,MAAMoS,WAEnC,OADcxU,KAAK64B,cAAgB74B,KAAK64B,YAAc74B,KAAKg6B,mBAAmBxlB,GAEhF,CAGA6a,eACErvB,KAAKuY,OAAS,CAAC,EACfvY,KAAKs5B,mBAAoB,CAC3B,CAMAW,gBACEC,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ2xB,aAAc,CAACj6B,MACnC,CAUA4G,OAAOuc,EAAUC,EAAW+W,GAC1B,MAAM,YAAC5e,EAAW,MAAE6e,EAAOjhB,MAAOic,GAAYp1B,KAAKsI,QAC7C+xB,EAAajF,EAASiF,WAG5Br6B,KAAKi6B,eAGLj6B,KAAKmjB,SAAWA,EAChBnjB,KAAKojB,UAAYA,EACjBpjB,KAAKq4B,SAAW8B,EAAU97B,OAAOqB,OAAO,CACtCuU,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACPmmB,GAEHn6B,KAAKmZ,MAAQ,KACbnZ,KAAK84B,YAAc,KACnB94B,KAAK44B,eAAiB,KACtB54B,KAAK64B,YAAc,KAGnB74B,KAAKs6B,sBACLt6B,KAAKu6B,gBACLv6B,KAAKw6B,qBAELx6B,KAAK01B,WAAa11B,KAAK6b,eACnB7b,KAAKwc,MAAQ2d,EAAQlmB,KAAOkmB,EAAQpmB,MACpC/T,KAAKuc,OAAS4d,EAAQrmB,IAAMqmB,EAAQnmB,OAGnChU,KAAKs5B,oBACRt5B,KAAKy6B,mBACLz6B,KAAK06B,sBACL16B,KAAK26B,kBACL36B,KAAK24B,QAASiC,EAAAA,EAAAA,GAAU56B,KAAMo6B,EAAO7e,GACrCvb,KAAKs5B,mBAAoB,GAG3Bt5B,KAAK66B,mBAEL76B,KAAKmZ,MAAQnZ,KAAK86B,cAAgB,GAGlC96B,KAAK+6B,kBAIL,MAAMC,EAAkBX,EAAar6B,KAAKmZ,MAAM1qB,OAChDuR,KAAKi7B,sBAAsBD,EAAkB/D,GAAOj3B,KAAKmZ,MAAOkhB,GAAcr6B,KAAKmZ,OAMnFnZ,KAAK0H,YAGL1H,KAAKk7B,+BACLl7B,KAAKm7B,yBACLn7B,KAAKo7B,8BAGDhG,EAASpP,UAAYoP,EAASD,UAAgC,SAApBC,EAASiG,UACrDr7B,KAAKmZ,MAAQgc,GAASn1B,KAAMA,KAAKmZ,OACjCnZ,KAAK84B,YAAc,KACnB94B,KAAKs7B,iBAGHN,GAEFh7B,KAAKi7B,sBAAsBj7B,KAAKmZ,OAGlCnZ,KAAKu7B,YACLv7B,KAAKw7B,MACLx7B,KAAKy7B,WAILz7B,KAAK07B,aACP,CAKAh0B,YACE,IACIkW,EAAYE,EADZ6d,EAAgB37B,KAAKsI,QAAQmB,QAG7BzJ,KAAK6b,gBACP+B,EAAa5d,KAAKiU,KAClB6J,EAAW9d,KAAK+T,QAEhB6J,EAAa5d,KAAK8T,IAClBgK,EAAW9d,KAAKgU,OAEhB2nB,GAAiBA,GAEnB37B,KAAKmd,YAAcS,EACnB5d,KAAKod,UAAYU,EACjB9d,KAAKyoB,eAAiBkT,EACtB37B,KAAK+Y,QAAU+E,EAAWF,EAC1B5d,KAAK47B,eAAiB57B,KAAKsI,QAAQuzB,aACrC,CAEAH,eACExB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQozB,YAAa,CAAC17B,MAClC,CAIAs6B,uBACEJ,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQgyB,oBAAqB,CAACt6B,MAC1C,CACAu6B,gBAEMv6B,KAAK6b,gBAEP7b,KAAKwc,MAAQxc,KAAKmjB,SAClBnjB,KAAKiU,KAAO,EACZjU,KAAK+T,MAAQ/T,KAAKwc,QAElBxc,KAAKuc,OAASvc,KAAKojB,UAGnBpjB,KAAK8T,IAAM,EACX9T,KAAKgU,OAAShU,KAAKuc,QAIrBvc,KAAKw4B,YAAc,EACnBx4B,KAAKs4B,WAAa,EAClBt4B,KAAKy4B,aAAe,EACpBz4B,KAAKu4B,cAAgB,CACvB,CACAiC,sBACEN,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQkyB,mBAAoB,CAACx6B,MACzC,CAEA87B,WAAW9e,GACThd,KAAKoC,MAAM25B,cAAc/e,EAAMhd,KAAKoR,eACpC8oB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ0U,GAAO,CAAChd,MAC5B,CAGAy6B,mBACEz6B,KAAK87B,WAAW,mBAClB,CACApB,sBAAuB,CACvBC,kBACE36B,KAAK87B,WAAW,kBAClB,CAGAjB,mBACE76B,KAAK87B,WAAW,mBAClB,CAIAhB,aACE,MAAO,EACT,CACAC,kBACE/6B,KAAK87B,WAAW,kBAClB,CAEAE,+BACE9B,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ0zB,4BAA6B,CAACh8B,MAClD,CAKAi8B,mBAAmB9iB,GACjB,MAAMic,EAAWp1B,KAAKsI,QAAQ6Q,MAC9B,IAAI9mB,EAAG0X,EAAMnG,EACb,IAAKvR,EAAI,EAAG0X,EAAOoP,EAAM1qB,OAAQ4D,EAAI0X,EAAM1X,IACzCuR,EAAOuV,EAAM9mB,GACbuR,EAAK+P,OAAQumB,EAAAA,EAAAA,GAAK9E,EAAS8G,SAAU,CAACt4B,EAAKqF,MAAO5W,EAAG8mB,GAAQnZ,KAEjE,CACAm8B,8BACEjC,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ6zB,2BAA4B,CAACn8B,MACjD,CAIAk7B,gCACEhB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ4yB,6BAA8B,CAACl7B,MACnD,CACAm7B,yBACE,MAAM7yB,EAAUtI,KAAKsI,QACf8sB,EAAW9sB,EAAQ6Q,MACnBijB,EAAWp8B,KAAKmZ,MAAM1qB,OACtB4tC,EAAcjH,EAASiH,aAAe,EACtCC,EAAclH,EAASkH,YAC7B,IACIC,EAAWnZ,EAAWoZ,EADtB9D,EAAgB2D,EAGpB,IAAKr8B,KAAKy8B,eAAiBrH,EAASpP,SAAWqW,GAAeC,GAAeF,GAAY,IAAMp8B,KAAK6b,eAElG,YADA7b,KAAK04B,cAAgB2D,GAIvB,MAAMK,EAAa18B,KAAK28B,iBAClBC,EAAgBF,EAAWG,OAAOrgB,MAClCsgB,EAAiBJ,EAAWK,QAAQxgB,OAIpC4G,GAAW6Z,EAAAA,EAAAA,GAAYh9B,KAAKoC,MAAMoa,MAAQogB,EAAe,EAAG58B,KAAKmjB,UACvEoZ,EAAYj0B,EAAQ8S,OAASpb,KAAKmjB,SAAWiZ,EAAWjZ,GAAYiZ,EAAW,GAG3EQ,EAAgB,EAAIL,IACtBA,EAAYpZ,GAAYiZ,GAAY9zB,EAAQ8S,OAAS,GAAM,IAC3DgI,EAAYpjB,KAAKojB,UAAYqU,GAAkBnvB,EAAQ+S,MACvD+Z,EAASlH,QAAUyJ,GAAervB,EAAQra,MAAO+R,KAAKoC,MAAMkG,QAAQuvB,MACpE2E,EAAmB9tC,KAAKw7B,KAAK0S,EAAgBA,EAAgBE,EAAiBA,GAC9EpE,GAAgBuE,EAAAA,EAAAA,GAAUvuC,KAAKiB,IAC7BjB,KAAKwuC,MAAKF,EAAAA,EAAAA,IAAaN,EAAWK,QAAQxgB,OAAS,GAAKggB,GAAY,EAAG,IACvE7tC,KAAKwuC,MAAKF,EAAAA,EAAAA,GAAY5Z,EAAYoZ,GAAmB,EAAG,IAAM9tC,KAAKwuC,MAAKF,EAAAA,EAAAA,GAAYF,EAAiBN,GAAmB,EAAG,MAE7H9D,EAAgBhqC,KAAKC,IAAI0tC,EAAa3tC,KAAKiB,IAAI2sC,EAAa5D,KAG9D14B,KAAK04B,cAAgBA,CACvB,CACA0C,+BACElB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQ8yB,4BAA6B,CAACp7B,MAClD,CACAs7B,gBAAiB,CAIjBC,aACErB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQizB,UAAW,CAACv7B,MAChC,CACAw7B,MAEE,MAAMnV,EAAU,CACd7J,MAAO,EACPD,OAAQ,IAGJ,MAACna,EAAOkG,SAAU6Q,MAAOic,EAAUnnC,MAAOkvC,EAAW9hB,KAAM+hB,IAAap9B,KACxEgmB,EAAUhmB,KAAKy8B,aACf5gB,EAAe7b,KAAK6b,eAE1B,GAAImK,EAAS,CACX,MAAMqX,EAAc1F,GAAewF,EAAW/6B,EAAMkG,QAAQuvB,MAU5D,GATIhc,GACFwK,EAAQ7J,MAAQxc,KAAKmjB,SACrBkD,EAAQ9J,OAASkb,GAAkB2F,GAAYC,IAE/ChX,EAAQ9J,OAASvc,KAAKojB,UACtBiD,EAAQ7J,MAAQib,GAAkB2F,GAAYC,GAI5CjI,EAASpP,SAAWhmB,KAAKmZ,MAAM1qB,OAAQ,CACzC,MAAM,MAAC2nC,EAAAA,KAAO1Z,EAAAA,OAAMmgB,EAAAA,QAAQE,GAAW/8B,KAAK28B,iBACtCW,EAAiC,EAAnBlI,EAASlH,QACvBqP,GAAerc,EAAAA,EAAAA,GAAUlhB,KAAK04B,eAC9BvW,EAAMzzB,KAAKyzB,IAAIob,GACflb,EAAM3zB,KAAK2zB,IAAIkb,GAErB,GAAI1hB,EAAc,CAEhB,MAAM2hB,EAAcpI,EAASqI,OAAS,EAAIpb,EAAMwa,EAAOrgB,MAAQ2F,EAAM4a,EAAQxgB,OAC7E8J,EAAQ9J,OAAS7tB,KAAKiB,IAAIqQ,KAAKojB,UAAWiD,EAAQ9J,OAASihB,EAAcF,OACpE,CAGL,MAAMI,EAAatI,EAASqI,OAAS,EAAItb,EAAM0a,EAAOrgB,MAAQ6F,EAAM0a,EAAQxgB,OAE5E8J,EAAQ7J,MAAQ9tB,KAAKiB,IAAIqQ,KAAKmjB,SAAUkD,EAAQ7J,MAAQkhB,EAAaJ,GAEvEt9B,KAAK29B,kBAAkBvH,EAAO1Z,EAAM2F,EAAKF,IAI7CniB,KAAK49B,iBAED/hB,GACF7b,KAAKwc,MAAQxc,KAAK+Y,QAAU3W,EAAMoa,MAAQxc,KAAKq4B,SAASpkB,KAAOjU,KAAKq4B,SAAStkB,MAC7E/T,KAAKuc,OAAS8J,EAAQ9J,SAEtBvc,KAAKwc,MAAQ6J,EAAQ7J,MACrBxc,KAAKuc,OAASvc,KAAK+Y,QAAU3W,EAAMma,OAASvc,KAAKq4B,SAASvkB,IAAM9T,KAAKq4B,SAASrkB,OAElF,CAEA2pB,kBAAkBvH,EAAO1Z,EAAM2F,EAAKF,GAClC,MAAOhJ,OAAO,MAAC8e,EAAAA,QAAO/J,GAAQ,SAAEjF,GAAYjpB,KAAKsI,QAC3Cu1B,EAAmC,IAAvB79B,KAAK04B,cACjBoF,EAAgC,QAAb7U,GAAoC,MAAdjpB,KAAK6L,KAEpD,GAAI7L,KAAK6b,eAAgB,CACvB,MAAMkiB,EAAa/9B,KAAKoZ,gBAAgB,GAAKpZ,KAAKiU,KAC5C+pB,EAAch+B,KAAK+T,MAAQ/T,KAAKoZ,gBAAgBpZ,KAAKmZ,MAAM1qB,OAAS,GAC1E,IAAI+pC,EAAc,EACdC,EAAe,EAIfoF,EACEC,GACFtF,EAAcrW,EAAMiU,EAAM5Z,MAC1Bic,EAAepW,EAAM3F,EAAKH,SAE1Bic,EAAcnW,EAAM+T,EAAM7Z,OAC1Bkc,EAAetW,EAAMzF,EAAKF,OAET,UAAVyb,EACTQ,EAAe/b,EAAKF,MACD,QAAVyb,EACTO,EAAcpC,EAAM5Z,MACD,UAAVyb,IACTO,EAAcpC,EAAM5Z,MAAQ,EAC5Bic,EAAe/b,EAAKF,MAAQ,GAI9Bxc,KAAKw4B,YAAc9pC,KAAKC,KAAK6pC,EAAcuF,EAAa7P,GAAWluB,KAAKwc,OAASxc,KAAKwc,MAAQuhB,GAAa,GAC3G/9B,KAAKy4B,aAAe/pC,KAAKC,KAAK8pC,EAAeuF,EAAc9P,GAAWluB,KAAKwc,OAASxc,KAAKwc,MAAQwhB,GAAc,OAC1G,CACL,IAAI1F,EAAa5b,EAAKH,OAAS,EAC3Bgc,EAAgBnC,EAAM7Z,OAAS,EAErB,UAAV0b,GACFK,EAAa,EACbC,EAAgBnC,EAAM7Z,QACH,QAAV0b,IACTK,EAAa5b,EAAKH,OAClBgc,EAAgB,GAGlBv4B,KAAKs4B,WAAaA,EAAapK,EAC/BluB,KAAKu4B,cAAgBA,EAAgBrK,EAEzC,CAMA0P,iBACM59B,KAAKq4B,WACPr4B,KAAKq4B,SAASpkB,KAAOvlB,KAAKC,IAAIqR,KAAKw4B,YAAax4B,KAAKq4B,SAASpkB,MAC9DjU,KAAKq4B,SAASvkB,IAAMplB,KAAKC,IAAIqR,KAAKs4B,WAAYt4B,KAAKq4B,SAASvkB,KAC5D9T,KAAKq4B,SAAStkB,MAAQrlB,KAAKC,IAAIqR,KAAKy4B,aAAcz4B,KAAKq4B,SAAStkB,OAChE/T,KAAKq4B,SAASrkB,OAAStlB,KAAKC,IAAIqR,KAAKu4B,cAAev4B,KAAKq4B,SAASrkB,QAEtE,CAEAynB,YACEvB,EAAAA,EAAAA,GAAKl6B,KAAKsI,QAAQmzB,SAAU,CAACz7B,MAC/B,CAMA6b,eACE,MAAM,KAAChQ,EAAAA,SAAMod,GAAYjpB,KAAKsI,QAC9B,MAAoB,QAAb2gB,GAAmC,WAAbA,GAAkC,MAATpd,CACxD,CAIAoyB,aACE,OAAOj+B,KAAKsI,QAAQ+jB,QACtB,CAMA4O,sBAAsB9hB,GAMpB,IAAI9mB,EAAG0X,EACP,IANA/J,KAAKg8B,8BAELh8B,KAAKi8B,mBAAmB9iB,GAInB9mB,EAAI,EAAG0X,EAAOoP,EAAM1qB,OAAQ4D,EAAI0X,EAAM1X,KACrC4pB,EAAAA,EAAAA,GAAc9C,EAAM9mB,GAAGshB,SACzBwF,EAAMxB,OAAOtlB,EAAG,GAChB0X,IACA1X,KAIJ2N,KAAKm8B,4BACP,CAMAQ,iBACE,IAAID,EAAa18B,KAAK84B,YAEtB,IAAK4D,EAAY,CACf,MAAMrC,EAAar6B,KAAKsI,QAAQ6Q,MAAMkhB,WACtC,IAAIlhB,EAAQnZ,KAAKmZ,MACbkhB,EAAalhB,EAAM1qB,SACrB0qB,EAAQ8d,GAAO9d,EAAOkhB,IAGxBr6B,KAAK84B,YAAc4D,EAAa18B,KAAKk+B,mBAAmB/kB,EAAOA,EAAM1qB,QAGvE,OAAOiuC,CACT,CAQAwB,mBAAmB/kB,EAAO1qB,GACxB,MAAM,IAACye,EAAK6rB,kBAAmBoF,GAAUn+B,KACnCo+B,EAAS,GACTC,EAAU,GAChB,IAEIhsC,EAAGkM,EAAG+/B,EAAM3qB,EAAO4qB,EAAUC,EAAYjpB,EAAOwiB,EAAYvb,EAAOD,EAAQkiB,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAKtsC,EAAI,EAAGA,EAAI5D,IAAU4D,EAAG,CAQ3B,GAPAshB,EAAQwF,EAAM9mB,GAAGshB,MACjB4qB,EAAWv+B,KAAK4+B,wBAAwBvsC,GACxC6a,EAAI2qB,KAAO2G,EAAaD,EAASM,OACjCtpB,EAAQ4oB,EAAOK,GAAcL,EAAOK,IAAe,CAACvvC,KAAM,CAAC,EAAG6vC,GAAI,IAClE/G,EAAawG,EAASxG,WACtBvb,EAAQD,EAAS,GAEZN,EAAAA,EAAAA,GAActI,KAAWjhB,EAAAA,EAAAA,GAAQihB,IAG/B,IAAIjhB,EAAAA,EAAAA,GAAQihB,GAEjB,IAAKpV,EAAI,EAAG+/B,EAAO3qB,EAAMllB,OAAQ8P,EAAI+/B,IAAQ//B,EAC3CkgC,EAAc9qB,EAAMpV,IAEf0d,EAAAA,EAAAA,GAAcwiB,KAAiB/rC,EAAAA,EAAAA,GAAQ+rC,KAC1CjiB,GAAQuiB,EAAAA,EAAAA,GAAa7xB,EAAKqI,EAAMtmB,KAAMsmB,EAAMupB,GAAItiB,EAAOiiB,GACvDliB,GAAUwb,QATdvb,GAAQuiB,EAAAA,EAAAA,GAAa7xB,EAAKqI,EAAMtmB,KAAMsmB,EAAMupB,GAAItiB,EAAO7I,GACvD4I,EAASwb,EAYXqG,EAAO95B,KAAKkY,GACZ6hB,EAAQ/5B,KAAKiY,GACbmiB,EAAkBhwC,KAAKC,IAAI6tB,EAAOkiB,GAClCC,EAAmBjwC,KAAKC,IAAI4tB,EAAQoiB,EACtC,EA9wBJ,SAAwBR,EAAQ1vC,IAC9B2gC,EAAAA,EAAAA,GAAK+O,GAAS5oB,IACZ,MAAMupB,EAAKvpB,EAAMupB,GACXE,EAAQF,EAAGrwC,OAAS,EAC1B,IAAI4D,EACJ,GAAI2sC,EAAQvwC,EAAQ,CAClB,IAAK4D,EAAI,EAAGA,EAAI2sC,IAAS3sC,SAChBkjB,EAAMtmB,KAAK6vC,EAAGzsC,IAEvBysC,EAAGnnB,OAAO,EAAGqnB,MAGnB,CAmwBIC,CAAed,EAAQ1vC,GAEvB,MAAMouC,EAASuB,EAAOvhB,QAAQ6hB,GACxB3B,EAAUsB,EAAQxhB,QAAQ8hB,GAE1BO,EAAWC,IAAAA,CAAU3iB,MAAO4hB,EAAOe,IAAQ,EAAG5iB,OAAQ8hB,EAAQc,IAAQ,IAE5E,MAAO,CACL/I,MAAO8I,EAAQ,GACfxiB,KAAMwiB,EAAQzwC,EAAS,GACvBouC,OAAQqC,EAAQrC,GAChBE,QAASmC,EAAQnC,GACjBqB,SACAC,UAEJ,CAOAzqB,iBAAiB3K,GACf,OAAOA,CACT,CASAiQ,iBAAiBjQ,EAAOe,GACtB,OAAOyI,GACT,CAQAsL,iBAAiBqhB,GAAQ,CAQzBhmB,gBAAgBpP,GACd,MAAMmP,EAAQnZ,KAAKmZ,MACnB,OAAInP,EAAQ,GAAKA,EAAQmP,EAAM1qB,OAAS,EAC/B,KAEFuR,KAAKkZ,iBAAiBC,EAAMnP,GAAOf,MAC5C,CAQA4U,mBAAmBwhB,GACbr/B,KAAKyoB,iBACP4W,EAAU,EAAIA,GAGhB,MAAMD,EAAQp/B,KAAKmd,YAAckiB,EAAUr/B,KAAK+Y,QAChD,OAAOumB,EAAAA,EAAAA,GAAYt/B,KAAK47B,gBAAiB2D,EAAAA,EAAAA,GAAYv/B,KAAKoC,MAAOg9B,EAAO,GAAKA,EAC/E,CAMAI,mBAAmBJ,GACjB,MAAMC,GAAWD,EAAQp/B,KAAKmd,aAAend,KAAK+Y,QAClD,OAAO/Y,KAAKyoB,eAAiB,EAAI4W,EAAUA,CAC7C,CAOAzjB,eACE,OAAO5b,KAAKkZ,iBAAiBlZ,KAAKy/B,eACpC,CAKAA,eACE,MAAM,IAAC9vC,EAAG,IAAEhB,GAAOqR,KAEnB,OAAOrQ,EAAM,GAAKhB,EAAM,EAAIA,EAC1BgB,EAAM,GAAKhB,EAAM,EAAIgB,EACrB,CACJ,CAKAyhB,WAAWpH,GACT,MAAMmP,EAAQnZ,KAAKmZ,OAAS,GAE5B,GAAInP,GAAS,GAAKA,EAAQmP,EAAM1qB,OAAQ,CACtC,MAAMmV,EAAOuV,EAAMnP,GACnB,OAAOpG,EAAKkK,WACblK,EAAKkK,SAp1BV,SAA2BiH,EAAQ/K,EAAOpG,GACxC,OAAOoR,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BnR,OACAoG,QACAhb,KAAM,QAEV,CA80BqB0wC,CAAkB1/B,KAAKoR,aAAcpH,EAAOpG,IAE7D,OAAO5D,KAAK8N,WACZ9N,KAAK8N,UA91BmBiH,EA81BW/U,KAAKoC,MAAMgP,aA91Bd9H,EA81B4BtJ,MA71BvDgV,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BzL,QACAta,KAAM,YAHV,IAA4B+lB,EAAQzL,CA+1BlC,CAMAisB,YACE,MAAMoK,EAAc3/B,KAAKsI,QAAQ6Q,MAG3BymB,GAAM1e,EAAAA,EAAAA,GAAUlhB,KAAK04B,eACrBvW,EAAMzzB,KAAKuqB,IAAIvqB,KAAKyzB,IAAIyd,IACxBvd,EAAM3zB,KAAKuqB,IAAIvqB,KAAK2zB,IAAIud,IAExBlD,EAAa18B,KAAK28B,iBAClBzO,EAAUyR,EAAYE,iBAAmB,EACzC1tC,EAAIuqC,EAAaA,EAAWG,OAAOrgB,MAAQ0R,EAAU,EACrDx+B,EAAIgtC,EAAaA,EAAWK,QAAQxgB,OAAS2R,EAAU,EAG7D,OAAOluB,KAAK6b,eACRnsB,EAAIyyB,EAAMhwB,EAAIkwB,EAAMlwB,EAAIgwB,EAAMzyB,EAAI2yB,EAClC3yB,EAAI2yB,EAAMlwB,EAAIgwB,EAAMzyB,EAAIyyB,EAAMhwB,EAAIkwB,CACxC,CAMAoa,aACE,MAAMzW,EAAUhmB,KAAKsI,QAAQ0d,QAE7B,MAAgB,SAAZA,IACOA,EAGJhmB,KAAKqL,0BAA0B5c,OAAS,CACjD,CAKAqxC,sBAAsBtrB,GACpB,MAAM3I,EAAO7L,KAAK6L,KACZzJ,EAAQpC,KAAKoC,MACbkG,EAAUtI,KAAKsI,SACf,KAAC+S,EAAI,SAAE4N,EAAAA,OAAUvD,GAAUpd,EAC3B8S,EAASC,EAAKD,OACdS,EAAe7b,KAAK6b,eAEpBkkB,EADQ//B,KAAKmZ,MACO1qB,QAAU2sB,EAAS,EAAI,GAC3C4kB,EAAKvI,GAAkBpc,GACvB9X,EAAQ,GAER08B,EAAava,EAAO6T,WAAWv5B,KAAKoR,cACpC8uB,EAAYD,EAAWja,QAAUia,EAAWzjB,MAAQ,EACpD2jB,EAAgBD,EAAY,EAC5BE,EAAmB,SAAShB,GAChC,OAAOG,EAAAA,EAAAA,GAAYn9B,EAAOg9B,EAAOc,EACnC,EACA,IAAIG,EAAahuC,EAAGmlC,EAAW8I,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAb7X,EACFoX,EAAcD,EAAiBpgC,KAAKgU,QACpCwsB,EAAMxgC,KAAKgU,OAASgsB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB5rB,EAAUV,KAAOqsB,EACvCW,EAAKtsB,EAAUR,YACV,GAAiB,WAAbiV,EACToX,EAAcD,EAAiBpgC,KAAK8T,KACpC8sB,EAAKpsB,EAAUV,IACfgtB,EAAKV,EAAiB5rB,EAAUR,QAAUmsB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM1gC,KAAK8T,IAAMksB,OACZ,GAAiB,SAAb/W,EACToX,EAAcD,EAAiBpgC,KAAK+T,OACpCwsB,EAAMvgC,KAAK+T,MAAQisB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB5rB,EAAUP,MAAQksB,EACxCU,EAAKrsB,EAAUT,WACV,GAAiB,UAAbkV,EACToX,EAAcD,EAAiBpgC,KAAKiU,MACpC0sB,EAAKnsB,EAAUP,KACf4sB,EAAKT,EAAiB5rB,EAAUT,OAASosB,EACzCI,EAAMF,EAAcF,EACpBM,EAAMzgC,KAAKiU,KAAO+rB,OACb,GAAa,MAATn0B,EAAc,CACvB,GAAiB,WAAbod,EACFoX,EAAcD,GAAkB5rB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACnE,IAAIrM,EAAAA,EAAAA,GAASshB,GAAW,CAC7B,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvBV,EAAcD,EAAiBpgC,KAAKoC,MAAMkK,OAAOy0B,GAAgB7nB,iBAAiBjQ,IAGpF23B,EAAKpsB,EAAUV,IACfgtB,EAAKtsB,EAAUR,OACfwsB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATn0B,EAAc,CACvB,GAAiB,WAAbod,EACFoX,EAAcD,GAAkB5rB,EAAUP,KAAOO,EAAUT,OAAS,QAC/D,IAAIpM,EAAAA,EAAAA,GAASshB,GAAW,CAC7B,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvBV,EAAcD,EAAiBpgC,KAAKoC,MAAMkK,OAAOy0B,GAAgB7nB,iBAAiBjQ,IAGpFs3B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKnsB,EAAUP,KACf4sB,EAAKrsB,EAAUT,MAGjB,MAAMitB,GAAQ/xB,EAAAA,EAAAA,GAAe3G,EAAQ6Q,MAAM0c,cAAekK,GACpDkB,EAAOvyC,KAAKC,IAAI,EAAGD,KAAK4nC,KAAKyJ,EAAciB,IACjD,IAAK3uC,EAAI,EAAGA,EAAI0tC,EAAa1tC,GAAK4uC,EAAM,CACtC,MAAMnsB,EAAU9U,KAAKoR,WAAW/e,GAC1B6uC,EAAc7lB,EAAKke,WAAWzkB,GAC9BqsB,EAAoBzb,EAAO6T,WAAWzkB,GAEtCyL,EAAY2gB,EAAY3gB,UACxB6gB,EAAYF,EAAY5gC,MACxB+gC,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WAErCjF,EAAY2E,EAAY3E,UACxBkF,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBAEzCnK,EAAYJ,GAAoBp3B,KAAM3N,EAAG+oB,QAGvBzpB,IAAd6lC,IAIJ8I,GAAmBf,EAAAA,EAAAA,GAAYn9B,EAAOo1B,EAAWjX,GAE7C1E,EACF0kB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxB/8B,EAAMe,KAAK,CACTi8B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAtkB,MAAO+D,EACPjgB,MAAO8gC,EACPC,aACAE,mBACAhF,YACAkF,YACAC,iBACAC,yBAEJ,CAKA,OAHA3hC,KAAKo5B,aAAe2G,EACpB//B,KAAKq5B,aAAegH,EAEb98B,CACT,CAKAy2B,mBAAmBxlB,GACjB,MAAM3I,EAAO7L,KAAK6L,KACZvD,EAAUtI,KAAKsI,SACf,SAAC2gB,EAAU9P,MAAOwmB,GAAer3B,EACjCuT,EAAe7b,KAAK6b,eACpB1C,EAAQnZ,KAAKmZ,OACb,MAAC8e,EAAAA,WAAO2J,EAAAA,QAAY1T,EAAO,OAAEuP,GAAUkC,EACvCK,EAAKvI,GAAkBnvB,EAAQ+S,MAC/BwmB,EAAiB7B,EAAK9R,EACtB4T,EAAkBrE,GAAUvP,EAAU2T,EACtCtiB,IAAY2B,EAAAA,EAAAA,GAAUlhB,KAAK04B,eAC3Bn1B,EAAQ,GACd,IAAIlR,EAAG0X,EAAMnG,EAAM+P,EAAOpgB,EAAGub,EAAGizB,EAAW3C,EAAOvH,EAAME,EAAYiK,EAAWC,EAC3EC,EAAe,SAEnB,GAAiB,QAAbjZ,EACFna,EAAI9O,KAAKgU,OAAS8tB,EAClBC,EAAY/hC,KAAKmiC,+BACZ,GAAiB,WAAblZ,EACTna,EAAI9O,KAAK8T,IAAMguB,EACfC,EAAY/hC,KAAKmiC,+BACZ,GAAiB,SAAblZ,EAAqB,CAC9B,MAAM73B,EAAM4O,KAAKoiC,wBAAwBpC,GACzC+B,EAAY3wC,EAAI2wC,UAChBxuC,EAAInC,EAAImC,OACH,GAAiB,UAAb01B,EAAsB,CAC/B,MAAM73B,EAAM4O,KAAKoiC,wBAAwBpC,GACzC+B,EAAY3wC,EAAI2wC,UAChBxuC,EAAInC,EAAImC,OACH,GAAa,MAATsY,EAAc,CACvB,GAAiB,WAAbod,EACFna,GAAM0F,EAAUV,IAAMU,EAAUR,QAAU,EAAK6tB,OAC1C,IAAIl6B,EAAAA,EAAAA,GAASshB,GAAW,CAC7B,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvBjyB,EAAI9O,KAAKoC,MAAMkK,OAAOy0B,GAAgB7nB,iBAAiBjQ,GAAS44B,EAElEE,EAAY/hC,KAAKmiC,+BACZ,GAAa,MAATt2B,EAAc,CACvB,GAAiB,WAAbod,EACF11B,GAAMihB,EAAUP,KAAOO,EAAUT,OAAS,EAAK8tB,OAC1C,IAAIl6B,EAAAA,EAAAA,GAASshB,GAAW,CAC7B,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvBxtC,EAAIyM,KAAKoC,MAAMkK,OAAOy0B,GAAgB7nB,iBAAiBjQ,GAEzD84B,EAAY/hC,KAAKoiC,wBAAwBpC,GAAI+B,UAGlC,MAATl2B,IACY,UAAVosB,EACFiK,EAAe,MACI,QAAVjK,IACTiK,EAAe,WAInB,MAAMxF,EAAa18B,KAAK28B,iBACxB,IAAKtqC,EAAI,EAAG0X,EAAOoP,EAAM1qB,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAC9CuR,EAAOuV,EAAM9mB,GACbshB,EAAQ/P,EAAK+P,MAEb,MAAMutB,EAAcvB,EAAYpG,WAAWv5B,KAAKoR,WAAW/e,IAC3D+sC,EAAQp/B,KAAKoZ,gBAAgB/mB,GAAKstC,EAAY0C,YAC9CxK,EAAO73B,KAAK4+B,wBAAwBvsC,GACpC0lC,EAAaF,EAAKE,WAClBiK,GAAYtvC,EAAAA,EAAAA,GAAQihB,GAASA,EAAMllB,OAAS,EAC5C,MAAM6zC,EAAYN,EAAY,EACxB1hC,EAAQ4gC,EAAY5gC,MACpBiiC,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IA4CIC,EA5CAC,EAAgBb,EA8CpB,GA5CIlmB,GACFtoB,EAAI6rC,EAEc,UAAd2C,IAEAa,EADEvwC,IAAM0X,EAAO,EACE/J,KAAKsI,QAAQmB,QAAoB,OAAV,QACzB,IAANpX,EACQ2N,KAAKsI,QAAQmB,QAAmB,QAAT,OAExB,UAMhBw4B,EAFa,QAAbhZ,EACiB,SAAf2Y,GAAsC,IAAbriB,GACbyiB,EAAYjK,EAAaA,EAAa,EAC5B,WAAf6J,GACKlF,EAAWK,QAAQxgB,OAAS,EAAI+lB,EAAYvK,EAAaA,GAEzD2E,EAAWK,QAAQxgB,OAASwb,EAAa,EAItC,SAAf6J,GAAsC,IAAbriB,EACdwY,EAAa,EACF,WAAf6J,EACIlF,EAAWK,QAAQxgB,OAAS,EAAI+lB,EAAYvK,EAE5C2E,EAAWK,QAAQxgB,OAASylB,EAAYjK,EAGrD0F,IACFwE,IAAe,GAEA,IAAb1iB,GAAmB2hB,EAAY2B,oBACjCtvC,GAAK,EAAc,EAAK7E,KAAK2zB,IAAI9C,MAGnCzQ,EAAIswB,EACJ6C,GAAc,EAAID,GAAajK,EAAa,GAK1CmJ,EAAY2B,kBAAmB,CACjC,MAAMC,GAAerU,EAAAA,EAAAA,GAAUyS,EAAY6B,iBACrCxmB,EAASmgB,EAAW2B,QAAQhsC,GAC5BmqB,EAAQkgB,EAAW0B,OAAO/rC,GAEhC,IAAIyhB,EAAMmuB,EAAaa,EAAahvB,IAChCG,EAAO,EAAI6uB,EAAa7uB,KAE5B,OAAQiuB,GACR,IAAK,SACHpuB,GAAOyI,EAAS,EAChB,MACF,IAAK,SACHzI,GAAOyI,EAMT,OAAQwlB,GACR,IAAK,SACH9tB,GAAQuI,EAAQ,EAChB,MACF,IAAK,QACHvI,GAAQuI,EAMVmmB,EAAW,CACT1uB,OACAH,MACA0I,MAAOA,EAAQsmB,EAAatmB,MAC5BD,OAAQA,EAASumB,EAAavmB,OAE9Bjc,MAAO4gC,EAAY8B,eAIvBz/B,EAAMe,KAAK,CACTqP,QACAkkB,OACAoK,aACA35B,QAAS,CACPiX,WACAjf,QACAiiC,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CAAC1vC,EAAGub,GACjB6zB,aAGN,CAEA,OAAOp/B,CACT,CAEA4+B,0BACE,MAAM,SAAClZ,EAAAA,MAAU9P,GAASnZ,KAAKsI,QAG/B,KAFkB4Y,EAAAA,EAAAA,GAAUlhB,KAAK04B,eAG/B,MAAoB,QAAbzP,EAAqB,OAAS,QAGvC,IAAIgP,EAAQ,SAUZ,MARoB,UAAhB9e,EAAM8e,MACRA,EAAQ,OACiB,QAAhB9e,EAAM8e,MACfA,EAAQ,QACiB,UAAhB9e,EAAM8e,QACfA,EAAQ,SAGHA,CACT,CAEAmK,wBAAwBpC,GACtB,MAAM,SAAC/W,EAAU9P,OAAO,WAACyoB,EAAAA,OAAYnE,EAAAA,QAAQvP,IAAYluB,KAAKsI,QAExDu5B,EAAiB7B,EAAK9R,EACtB2O,EAFa78B,KAAK28B,iBAEEE,OAAOrgB,MAEjC,IAAIulB,EACAxuC,EA0DJ,MAxDiB,SAAb01B,EACEwU,GACFlqC,EAAIyM,KAAK+T,MAAQma,EAEE,SAAf0T,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZxuC,GAAMspC,EAAS,IAEfkF,EAAY,QACZxuC,GAAKspC,KAGPtpC,EAAIyM,KAAK+T,MAAQ8tB,EAEE,SAAfD,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZxuC,GAAMspC,EAAS,IAEfkF,EAAY,OACZxuC,EAAIyM,KAAKiU,OAGS,UAAbgV,EACLwU,GACFlqC,EAAIyM,KAAKiU,KAAOia,EAEG,SAAf0T,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZxuC,GAAMspC,EAAS,IAEfkF,EAAY,OACZxuC,GAAKspC,KAGPtpC,EAAIyM,KAAKiU,KAAO4tB,EAEG,SAAfD,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZxuC,GAAKspC,EAAS,IAEdkF,EAAY,QACZxuC,EAAIyM,KAAK+T,QAIbguB,EAAY,QAGP,CAACA,YAAWxuC,IACrB,CAKA2vC,oBACE,GAAIljC,KAAKsI,QAAQ6Q,MAAMskB,OACrB,OAGF,MAAMr7B,EAAQpC,KAAKoC,MACb6mB,EAAWjpB,KAAKsI,QAAQ2gB,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACnV,IAAK,EAAGG,KAAMjU,KAAKiU,KAAMD,OAAQ5R,EAAMma,OAAQxI,MAAO/T,KAAK+T,OAClD,QAAbkV,GAAmC,WAAbA,EACnB,CAACnV,IAAK9T,KAAK8T,IAAKG,KAAM,EAAGD,OAAQhU,KAAKgU,OAAQD,MAAO3R,EAAMoa,YADlE,CAGJ,CAKA2mB,iBACE,MAAM,IAACj2B,EAAK5E,SAAS,gBAAClZ,GAAgB,KAAE6kB,EAAI,IAAEH,EAAAA,MAAK0I,EAAAA,OAAOD,GAAUvc,KAChE5Q,IACF8d,EAAIk2B,OACJl2B,EAAIiT,UAAY/wB,EAChB8d,EAAIm2B,SAASpvB,EAAMH,EAAK0I,EAAOD,GAC/BrP,EAAIo2B,UAER,CAEArlB,qBAAqBhV,GACnB,MAAMoS,EAAOrb,KAAKsI,QAAQ+S,KAC1B,IAAKrb,KAAKy8B,eAAiBphB,EAAK2K,QAC9B,OAAO,EAET,MACMhc,EADQhK,KAAKmZ,MACCoqB,WAAUziC,GAAKA,EAAEmI,QAAUA,IAC/C,GAAIe,GAAS,EAAG,CAEd,OADaqR,EAAKke,WAAWv5B,KAAKoR,WAAWpH,IACjCuW,UAEd,OAAO,CACT,CAKAijB,SAAShvB,GACP,MAAM6G,EAAOrb,KAAKsI,QAAQ+S,KACpBnO,EAAMlN,KAAKkN,IACX3J,EAAQvD,KAAK44B,iBAAmB54B,KAAK44B,eAAiB54B,KAAK8/B,sBAAsBtrB,IACvF,IAAIniB,EAAG0X,EAEP,MAAM05B,EAAW,CAACvwC,EAAIC,EAAI8sB,KACnBA,EAAMzD,OAAUyD,EAAM3f,QAG3B4M,EAAIk2B,OACJl2B,EAAIqT,UAAYN,EAAMzD,MACtBtP,EAAIkT,YAAcH,EAAM3f,MACxB4M,EAAIw2B,YAAYzjB,EAAMohB,YAAc,IACpCn0B,EAAIy2B,eAAiB1jB,EAAMshB,iBAE3Br0B,EAAI02B,YACJ12B,EAAI22B,OAAO3wC,EAAGK,EAAGL,EAAG4b,GACpB5B,EAAI42B,OAAO3wC,EAAGI,EAAGJ,EAAG2b,GACpB5B,EAAI62B,SACJ72B,EAAIo2B,UAAS,EAGf,GAAIjoB,EAAK2K,QACP,IAAK3zB,EAAI,EAAG0X,EAAOxG,EAAM9U,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAC9C,MAAMmR,EAAOD,EAAMlR,GAEfgpB,EAAK2oB,iBACPP,EACE,CAAClwC,EAAGiQ,EAAKm9B,GAAI7xB,EAAGtL,EAAKo9B,IACrB,CAACrtC,EAAGiQ,EAAKq9B,GAAI/xB,EAAGtL,EAAKs9B,IACrBt9B,GAIA6X,EAAKqc,WACP+L,EACE,CAAClwC,EAAGiQ,EAAK+8B,IAAKzxB,EAAGtL,EAAKg9B,KACtB,CAACjtC,EAAGiQ,EAAKi9B,IAAK3xB,EAAGtL,EAAKk9B,KACtB,CACEpgC,MAAOkD,EAAKi+B,UACZjlB,MAAOhZ,EAAK+4B,UACZ8E,WAAY79B,EAAKk+B,eACjBH,iBAAkB/9B,EAAKm+B,sBAI/B,CAEJ,CAKAsC,aACE,MAAM,MAAC7hC,EAAAA,IAAO8K,EAAK5E,SAAS,OAACod,EAAM,KAAErK,IAASrb,KACxCigC,EAAava,EAAO6T,WAAWv5B,KAAKoR,cACpC8uB,EAAYxa,EAAOM,QAAUia,EAAWzjB,MAAQ,EACtD,IAAK0jB,EACH,OAEF,MAAMgE,EAAgB7oB,EAAKke,WAAWv5B,KAAKoR,WAAW,IAAImP,UACpD8f,EAAcrgC,KAAKq5B,aACzB,IAAIsH,EAAIE,EAAID,EAAIE,EAEZ9gC,KAAK6b,gBACP8kB,GAAKpB,EAAAA,EAAAA,GAAYn9B,EAAOpC,KAAKiU,KAAMisB,GAAaA,EAAY,EAC5DW,GAAKtB,EAAAA,EAAAA,GAAYn9B,EAAOpC,KAAK+T,MAAOmwB,GAAiBA,EAAgB,EACrEtD,EAAKE,EAAKT,IAEVO,GAAKrB,EAAAA,EAAAA,GAAYn9B,EAAOpC,KAAK8T,IAAKosB,GAAaA,EAAY,EAC3DY,GAAKvB,EAAAA,EAAAA,GAAYn9B,EAAOpC,KAAKgU,OAAQkwB,GAAiBA,EAAgB,EACtEvD,EAAKE,EAAKR,GAEZnzB,EAAIk2B,OACJl2B,EAAIqT,UAAY0f,EAAWzjB,MAC3BtP,EAAIkT,YAAc6f,EAAW3/B,MAE7B4M,EAAI02B,YACJ12B,EAAI22B,OAAOlD,EAAIC,GACf1zB,EAAI42B,OAAOjD,EAAIC,GACf5zB,EAAI62B,SAEJ72B,EAAIo2B,SACN,CAKAa,WAAW3vB,GAGT,IAFoBxU,KAAKsI,QAAQ6Q,MAEhB6M,QACf,OAGF,MAAM9Y,EAAMlN,KAAKkN,IAEXqH,EAAOvU,KAAKkjC,oBACd3uB,IACF6vB,EAAAA,EAAAA,GAASl3B,EAAKqH,GAGhB,MAAMhR,EAAQvD,KAAK+5B,cAAcvlB,GACjC,IAAK,MAAMhR,KAAQD,EAAO,CACxB,MAAM8gC,EAAoB7gC,EAAK8E,QACzBi2B,EAAW/6B,EAAKq0B,KAChBlkB,EAAQnQ,EAAKmQ,MACb7E,EAAItL,EAAKy+B,YACfqC,EAAAA,EAAAA,GAAWp3B,EAAKyG,EAAO,EAAG7E,EAAGyvB,EAAU8F,EACzC,CAEI9vB,IACFgwB,EAAAA,EAAAA,GAAWr3B,EAEf,CAKAs3B,YACE,MAAM,IAACt3B,EAAK5E,SAAS,SAAC2gB,EAAQ,MAAEh7B,EAAK,QAAEwb,IAAYzJ,KAEnD,IAAK/R,EAAM+3B,QACT,OAGF,MAAM6R,GAAOC,EAAAA,EAAAA,IAAO7pC,EAAM4pC,MACpB3J,GAAUO,EAAAA,EAAAA,GAAUxgC,EAAMigC,SAC1B+J,EAAQhqC,EAAMgqC,MACpB,IAAI7c,EAASyc,EAAKE,WAAa,EAEd,WAAb9O,GAAsC,WAAbA,IAAyBthB,EAAAA,EAAAA,GAASshB,IAC7D7N,GAAU8S,EAAQla,QACdthB,EAAAA,EAAAA,GAAQzE,EAAMiyB,QAChB9E,GAAUyc,EAAKE,YAAc9pC,EAAMiyB,KAAKzxB,OAAS,KAGnD2sB,GAAU8S,EAAQpa,IAGpB,MAAM,OAAC2wB,EAAAA,OAAQC,EAAAA,SAAQvhB,EAAQ,SAAE5D,GA/7CrC,SAAmBjW,EAAO8R,EAAQ6N,EAAUgP,GAC1C,MAAM,IAACnkB,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAE3R,GAASkH,GACpC,UAACkL,EAAAA,OAAWlI,GAAUlK,EAC5B,IACI+gB,EAAUshB,EAAQC,EADlBnlB,EAAW,EAEf,MAAMhD,EAASvI,EAASF,EAClB0I,EAAQzI,EAAQE,EAEtB,GAAI3K,EAAMuS,eAAgB,CAGxB,GAFA4oB,GAASE,EAAAA,EAAAA,IAAe1M,EAAOhkB,EAAMF,IAEjCpM,EAAAA,EAAAA,GAASshB,GAAW,CACtB,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvB2D,EAASp4B,EAAOy0B,GAAgB7nB,iBAAiBjQ,GAASsT,EAASnB,OAEnEspB,EADsB,WAAbzb,GACCzU,EAAUR,OAASQ,EAAUV,KAAO,EAAIyI,EAASnB,EAElD4b,GAAe1tB,EAAO2f,EAAU7N,GAE3C+H,EAAWpP,EAAQE,MACd,CACL,IAAItM,EAAAA,EAAAA,GAASshB,GAAW,CACtB,MAAM8X,EAAiB1iC,OAAOD,KAAK6qB,GAAU,GACvChgB,EAAQggB,EAAS8X,GACvB0D,EAASn4B,EAAOy0B,GAAgB7nB,iBAAiBjQ,GAASuT,EAAQpB,OAElEqpB,EADsB,WAAbxb,GACCzU,EAAUP,KAAOO,EAAUT,OAAS,EAAIyI,EAAQpB,EAEjD4b,GAAe1tB,EAAO2f,EAAU7N,GAE3CspB,GAASC,EAAAA,EAAAA,IAAe1M,EAAOjkB,EAAQF,GACvCyL,EAAwB,SAAb0J,GAAuBnG,EAAAA,EAAUA,EAAAA,EAE9C,MAAO,CAAC2hB,SAAQC,SAAQvhB,WAAU5D,WACpC,CA45CiDqlB,CAAU5kC,KAAMob,EAAQ6N,EAAUgP,IAE/EqM,EAAAA,EAAAA,GAAWp3B,EAAKjf,EAAMiyB,KAAM,EAAG,EAAG2X,EAAM,CACtCv3B,MAAOrS,EAAMqS,MACb6iB,WACA5D,WACAwiB,UAAW/J,GAAWC,EAAOhP,EAAUxf,GACvCy4B,aAAc,SACde,YAAa,CAACwB,EAAQC,IAE1B,CAEAjhC,KAAK+Q,GACExU,KAAKy8B,eAIVz8B,KAAKmjC,iBACLnjC,KAAKwjC,SAAShvB,GACdxU,KAAKikC,aACLjkC,KAAKwkC,YACLxkC,KAAKmkC,WAAW3vB,GAClB,CAMA4Z,UACE,MAAM5kB,EAAOxJ,KAAKsI,QACZu8B,EAAKr7B,EAAK2P,OAAS3P,EAAK2P,MAAMkV,GAAK,EACnCyW,GAAK71B,EAAAA,EAAAA,GAAezF,EAAK6R,MAAQ7R,EAAK6R,KAAKgT,GAAI,GAC/C0W,GAAK91B,EAAAA,EAAAA,GAAezF,EAAKkc,QAAUlc,EAAKkc,OAAO2I,EAAG,GAExD,OAAKruB,KAAKy8B,cAAgBz8B,KAAKyD,OAAS20B,GAAMvQ,UAAUpkB,KAUjD,CAAC,CACN4qB,EAAGyW,EACHrhC,KAAO+Q,IACLxU,KAAKmjC,iBACLnjC,KAAKwjC,SAAShvB,GACdxU,KAAKwkC,WAAW,GAEjB,CACDnW,EAAG0W,EACHthC,KAAM,KACJzD,KAAKikC,YAAY,GAElB,CACD5V,EAAGwW,EACHphC,KAAO+Q,IACLxU,KAAKmkC,WAAW3vB,EAAAA,IAvBX,CAAC,CACN6Z,EAAGwW,EACHphC,KAAO+Q,IACLxU,KAAKyD,KAAK+Q,EAAAA,GAuBlB,CAOAnJ,wBAAwBrc,GACtB,MAAM2qC,EAAQ35B,KAAKoC,MAAM+mB,+BACnB6b,EAAShlC,KAAK6L,KAAO,SACrBoqB,EAAS,GACf,IAAI5jC,EAAG0X,EAEP,IAAK1X,EAAI,EAAG0X,EAAO4vB,EAAMlrC,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAC9C,MAAMsY,EAAOgvB,EAAMtnC,GACfsY,EAAKq6B,KAAYhlC,KAAKzR,IAAQS,GAAQ2b,EAAK3b,OAASA,GACtDinC,EAAO3xB,KAAKqG,EAEhB,CACA,OAAOsrB,CACT,CAOA2I,wBAAwB50B,GACtB,MAAMR,EAAOxJ,KAAKsI,QAAQ6Q,MAAMogB,WAAWv5B,KAAKoR,WAAWpH,IAC3D,OAAO8tB,EAAAA,EAAAA,IAAOtuB,EAAKquB,KACrB,CAKAoN,aACE,MAAMC,EAAWllC,KAAK4+B,wBAAwB,GAAG7G,WACjD,OAAQ/3B,KAAK6b,eAAiB7b,KAAKwc,MAAQxc,KAAKuc,QAAU2oB,CAC5D,EC5pDa,MAAMC,GACnBrlC,YAAY9Q,EAAMo2C,EAAOC,GACvBrlC,KAAKhR,KAAOA,EACZgR,KAAKolC,MAAQA,EACbplC,KAAKqlC,SAAWA,EAChBrlC,KAAKuD,MAAQlF,OAAOinC,OAAO,KAC7B,CAEAC,UAAUv2C,GACR,OAAOqP,OAAOwpB,UAAU2d,cAActL,KAAKl6B,KAAKhR,KAAK64B,UAAW74B,EAAK64B,UACvE,CAMA4d,SAASjiC,GACP,MAAM/D,EAAQpB,OAAOqnC,eAAeliC,GACpC,IAAImiC,GAyFR,SAA2BlmC,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAzFQmmC,CAAkBnmC,KAEpBkmC,EAAc3lC,KAAKylC,SAAShmC,IAG9B,MAAM8D,EAAQvD,KAAKuD,MACbhV,EAAKiV,EAAKjV,GACV62C,EAAQplC,KAAKolC,MAAQ,IAAM72C,EAEjC,IAAKA,EACH,MAAM,IAAIm5B,MAAM,2BAA6BlkB,GAG/C,OAAIjV,KAAMgV,IAKVA,EAAMhV,GAAMiV,EAsChB,SAA0BA,EAAM4hC,EAAOO,GAErC,MAAME,GAAeC,EAAAA,EAAAA,IAAMznC,OAAOinC,OAAO,MAAO,CAC9CK,EAAc99B,EAAAA,EAAAA,IAAa89B,GAAe,CAAC,EAC3C99B,EAAAA,EAAAA,IAAau9B,GACb5hC,EAAKqE,WAGPA,EAAAA,EAAAA,IAAau9B,EAAOS,GAEhBriC,EAAKuiC,eASX,SAAuBX,EAAOY,GAC5B3nC,OAAOD,KAAK4nC,GAAQtjC,SAAQujC,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAcriC,MAC3BwiC,EAAc,CAACjB,GAAO1sB,OAAOwtB,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAM1iC,MACnB4iC,EAAcF,EAAMD,KAAK,KAC/Bz+B,EAAAA,EAAAA,MAAew+B,EAAaD,EAAYK,EAAaD,EAAAA,GAEzD,CAlBIE,CAActB,EAAO5hC,EAAKuiC,eAGxBviC,EAAKmjC,aACP9+B,EAAAA,EAAAA,SAAkBu9B,EAAO5hC,EAAKmjC,YAElC,CAtDIC,CAAiBpjC,EAAM4hC,EAAOO,GAC1B3lC,KAAKqlC,UACPx9B,EAAAA,EAAAA,SAAkBrE,EAAKjV,GAAIiV,EAAKqjC,YANzBzB,CAUX,CAMAphC,IAAIzV,GACF,OAAOyR,KAAKuD,MAAMhV,EACpB,CAKAu4C,WAAWtjC,GACT,MAAMD,EAAQvD,KAAKuD,MACbhV,EAAKiV,EAAKjV,GACV62C,EAAQplC,KAAKolC,MAEf72C,KAAMgV,UACDA,EAAMhV,GAGX62C,GAAS72C,KAAMsZ,EAAAA,EAASu9B,YACnBv9B,EAAAA,EAASu9B,GAAO72C,GACnByR,KAAKqlC,iBACAwB,EAAAA,GAAUt4C,GAGvB,ECtEK,MAAMw4C,GACXjnC,cACEE,KAAKgnC,YAAc,IAAI7B,GAAcp4B,EAAmB,YAAY,GACpE/M,KAAKsU,SAAW,IAAI6wB,GAAcpQ,GAAS,YAC3C/0B,KAAK6f,QAAU,IAAIslB,GAAc9mC,OAAQ,WACzC2B,KAAKsM,OAAS,IAAI64B,GAAc/M,GAAO,UAGvCp4B,KAAKinC,iBAAmB,CAACjnC,KAAKgnC,YAAahnC,KAAKsM,OAAQtM,KAAKsU,SAC/D,CAKA/P,OAAOsT,GACL7X,KAAKknC,MAAM,WAAYrvB,EACzB,CAEA9S,UAAU8S,GACR7X,KAAKknC,MAAM,aAAcrvB,EAC3B,CAKAsvB,kBAAkBtvB,GAChB7X,KAAKknC,MAAM,WAAYrvB,EAAM7X,KAAKgnC,YACpC,CAKA34B,eAAewJ,GACb7X,KAAKknC,MAAM,WAAYrvB,EAAM7X,KAAKsU,SACpC,CAKA8yB,cAAcvvB,GACZ7X,KAAKknC,MAAM,WAAYrvB,EAAM7X,KAAK6f,QACpC,CAKAwnB,aAAaxvB,GACX7X,KAAKknC,MAAM,WAAYrvB,EAAM7X,KAAKsM,OACpC,CAMAg7B,cAAc/4C,GACZ,OAAOyR,KAAKunC,KAAKh5C,EAAIyR,KAAKgnC,YAAa,aACzC,CAMAxf,WAAWj5B,GACT,OAAOyR,KAAKunC,KAAKh5C,EAAIyR,KAAKsU,SAAU,UACtC,CAMAkzB,UAAUj5C,GACR,OAAOyR,KAAKunC,KAAKh5C,EAAIyR,KAAK6f,QAAS,SACrC,CAMA4nB,SAASl5C,GACP,OAAOyR,KAAKunC,KAAKh5C,EAAIyR,KAAKsM,OAAQ,QACpC,CAKAo7B,qBAAqB7vB,GACnB7X,KAAKknC,MAAM,aAAcrvB,EAAM7X,KAAKgnC,YACtC,CAKAW,kBAAkB9vB,GAChB7X,KAAKknC,MAAM,aAAcrvB,EAAM7X,KAAKsU,SACtC,CAKAszB,iBAAiB/vB,GACf7X,KAAKknC,MAAM,aAAcrvB,EAAM7X,KAAK6f,QACtC,CAKAgoB,gBAAgBhwB,GACd7X,KAAKknC,MAAM,aAAcrvB,EAAM7X,KAAKsM,OACtC,CAKA46B,MAAM7/B,EAAQwQ,EAAMiwB,GAClB,IAAIjwB,GAAMnV,SAAQqlC,IAChB,MAAMC,EAAMF,GAAiB9nC,KAAKioC,oBAAoBF,GAClDD,GAAiBE,EAAIzC,UAAUwC,IAASC,IAAQhoC,KAAK6f,SAAWkoB,EAAIx5C,GACtEyR,KAAKkoC,MAAM7gC,EAAQ2gC,EAAKD,IAMxB3Y,EAAAA,EAAAA,GAAK2Y,GAAKvkC,IAOR,MAAM2kC,EAAUL,GAAiB9nC,KAAKioC,oBAAoBzkC,GAC1DxD,KAAKkoC,MAAM7gC,EAAQ8gC,EAAS3kC,EAAAA,MAIpC,CAKA0kC,MAAM7gC,EAAQkgB,EAAU6gB,GACtB,MAAMC,GAAcC,EAAAA,EAAAA,IAAYjhC,IAChC6yB,EAAAA,EAAAA,GAAKkO,EAAU,SAAWC,GAAc,GAAID,GAC5C7gB,EAASlgB,GAAQ+gC,IACjBlO,EAAAA,EAAAA,GAAKkO,EAAU,QAAUC,GAAc,GAAID,EAC7C,CAKAH,oBAAoBj5C,GAClB,IAAK,IAAIqD,EAAI,EAAGA,EAAI2N,KAAKinC,iBAAiBx4C,OAAQ4D,IAAK,CACrD,MAAM21C,EAAMhoC,KAAKinC,iBAAiB50C,GAClC,GAAI21C,EAAIzC,UAAUv2C,GAChB,OAAOg5C,CAEX,CAEA,OAAOhoC,KAAK6f,OACd,CAKA0nB,KAAKh5C,EAAIu5C,EAAe94C,GACtB,MAAMwU,EAAOskC,EAAc9jC,IAAIzV,GAC/B,QAAaoD,IAAT6R,EACF,MAAM,IAAIkkB,MAAM,IAAMn5B,EAAK,yBAA2BS,EAAO,KAE/D,OAAOwU,CACT,EAKF,OAA+B,IAAIujC,GCtKpB,MAAMwB,GACnBzoC,cACEE,KAAKwoC,MAAQ,EACf,CAYAC,OAAOrmC,EAAOsmC,EAAM7wB,EAAMtL,GACX,eAATm8B,IACF1oC,KAAKwoC,MAAQxoC,KAAK2oC,mBAAmBvmC,GAAO,GAC5CpC,KAAKmC,QAAQnC,KAAKwoC,MAAOpmC,EAAO,YAGlC,MAAMukC,EAAcp6B,EAASvM,KAAK4oC,aAAaxmC,GAAOmK,OAAOA,GAAUvM,KAAK4oC,aAAaxmC,GACnF6zB,EAASj2B,KAAKmC,QAAQwkC,EAAavkC,EAAOsmC,EAAM7wB,GAMtD,MAJa,iBAAT6wB,IACF1oC,KAAKmC,QAAQwkC,EAAavkC,EAAO,QACjCpC,KAAKmC,QAAQnC,KAAKwoC,MAAOpmC,EAAO,cAE3B6zB,CACT,CAKA9zB,QAAQwkC,EAAavkC,EAAOsmC,EAAM7wB,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMgxB,KAAclC,EAAa,CACpC,MAAMmC,EAASD,EAAWC,OACpBzhC,EAASyhC,EAAOJ,GAChB/c,EAAS,CAACvpB,EAAOyV,EAAMgxB,EAAWvgC,SACxC,IAA6C,KAAzCygC,EAAAA,EAAAA,GAAa1hC,EAAQskB,EAAQmd,IAAqBjxB,EAAKmxB,WACzD,OAAO,CAEX,CAEA,OAAO,CACT,CAEAC,cAMOhtB,EAAAA,EAAAA,GAAcjc,KAAKuY,UACtBvY,KAAKkpC,UAAYlpC,KAAKuY,OACtBvY,KAAKuY,YAAS5mB,EAElB,CAMAi3C,aAAaxmC,GACX,GAAIpC,KAAKuY,OACP,OAAOvY,KAAKuY,OAGd,MAAMouB,EAAc3mC,KAAKuY,OAASvY,KAAK2oC,mBAAmBvmC,GAI1D,OAFApC,KAAKmpC,oBAAoB/mC,GAElBukC,CACT,CAEAgC,mBAAmBvmC,EAAOyG,GACxB,MAAMtB,EAASnF,GAASA,EAAMmF,OACxBe,GAAU2G,EAAAA,EAAAA,GAAe1H,EAAOe,SAAWf,EAAOe,QAAQuX,QAAS,CAAC,GACpEA,EAqBV,SAAoBtY,GAClB,MAAM6hC,EAAW,CAAC,EACZvpB,EAAU,GACVzhB,EAAOC,OAAOD,KAAKmpB,GAAS1H,QAAQtc,OAC1C,IAAK,IAAIlR,EAAI,EAAGA,EAAI+L,EAAK3P,OAAQ4D,IAC/BwtB,EAAQvb,KAAKijB,GAASigB,UAAUppC,EAAK/L,KAGvC,MAAMg3C,EAAQ9hC,EAAOsY,SAAW,GAChC,IAAK,IAAIxtB,EAAI,EAAGA,EAAIg3C,EAAM56C,OAAQ4D,IAAK,CACrC,MAAMy2C,EAASO,EAAMh3C,IAEY,IAA7BwtB,EAAQhD,QAAQisB,KAClBjpB,EAAQvb,KAAKwkC,GACbM,EAASN,EAAOv6C,KAAM,EAE1B,CAEA,MAAO,CAACsxB,UAASupB,WACnB,CAxCoBE,CAAW/hC,GAE3B,OAAmB,IAAZe,GAAsBO,EAkDjC,SAA2BzG,GAAO,QAACyd,EAAO,SAAEupB,GAAW9gC,EAASO,GAC9D,MAAMotB,EAAS,GACTnhB,EAAU1S,EAAMgP,aAEtB,IAAK,MAAM03B,KAAUjpB,EAAS,CAC5B,MAAMtxB,EAAKu6C,EAAOv6C,GACZib,EAAO+/B,GAAQjhC,EAAQ/Z,GAAKsa,GACrB,OAATW,GAGJysB,EAAO3xB,KAAK,CACVwkC,SACAxgC,QAASkhC,GAAWpnC,EAAMmF,OAAQ,CAACuhC,SAAQO,MAAOD,EAAS76C,IAAMib,EAAMsL,IAE3E,CAEA,OAAOmhB,CACT,CAnE4CwT,CAAkBrnC,EAAOyd,EAASvX,EAASO,GAAhD,EACrC,CAMAsgC,oBAAoB/mC,GAClB,MAAMsnC,EAAsB1pC,KAAKkpC,WAAa,GACxCvC,EAAc3mC,KAAKuY,OACnB0P,EAAO,CAACz3B,EAAGC,IAAMD,EAAE+b,QAAOhZ,IAAM9C,EAAEk5C,MAAK76B,GAAKvb,EAAEu1C,OAAOv6C,KAAOugB,EAAEg6B,OAAOv6C,OAC3EyR,KAAKmC,QAAQ8lB,EAAKyhB,EAAqB/C,GAAcvkC,EAAO,QAC5DpC,KAAKmC,QAAQ8lB,EAAK0e,EAAa+C,GAAsBtnC,EAAO,QAC9D,EA2BF,SAASmnC,GAAQjhC,EAASO,GACxB,OAAKA,IAAmB,IAAZP,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CAqBA,SAASkhC,GAAWjiC,GAAQ,OAACuhC,EAAM,MAAEO,GAAQ7/B,EAAMsL,GACjD,MAAM1W,EAAOmJ,EAAOqiC,gBAAgBd,GAC9B73B,EAAS1J,EAAO2J,gBAAgB1H,EAAMpL,GAK5C,OAJIirC,GAASP,EAAOjhC,UAElBoJ,EAAO3M,KAAKwkC,EAAOjhC,UAEdN,EAAO4J,eAAeF,EAAQ6D,EAAS,CAAC,IAAK,CAElD+0B,YAAY,EACZC,WAAW,EACXC,SAAS,GAEb,CClLO,SAASC,GAAah7C,EAAMsZ,GACjC,MAAM2hC,EAAkBpiC,EAAAA,EAAAA,SAAkB7Y,IAAS,CAAC,EAEpD,QADwBsZ,EAAQnZ,UAAY,CAAC,GAAGH,IAAS,CAAC,GACpCsgB,WAAahH,EAAQgH,WAAa26B,EAAgB36B,WAAa,GACvF,CAyBO,SAAS46B,GAAc37C,EAAI47C,GAChC,GAAW,MAAP57C,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,EAXX,IAA0B06B,EAkBxB,GAJA16B,EAAK47C,EAAat+B,OAbD,SADOod,EAeFkhB,EAAalhB,WAdI,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYK16B,EAAGE,OAAS,GAAKy7C,GAAc37C,EAAG,GAAGuQ,cAAeqrC,GAGvD,OAAO57C,EAGT,MAAM,IAAIm5B,MAAM,6BAA6B1K,0DAC/C,CA8CA,SAASotB,GAAY7iC,GACnB,MAAMe,EAAUf,EAAOe,UAAYf,EAAOe,QAAU,CAAC,GAErDA,EAAQuX,SAAU5Q,EAAAA,EAAAA,GAAe3G,EAAQuX,QAAS,CAAC,GACnDvX,EAAQgE,OAhDV,SAA0B/E,EAAQe,GAChC,MAAM+hC,EAAgBxD,EAAAA,GAAUt/B,EAAOvY,OAAS,CAACsd,OAAQ,CAAC,GACpDg+B,EAAehiC,EAAQgE,QAAU,CAAC,EAClCi+B,EAAiBP,GAAaziC,EAAOvY,KAAMsZ,GAC3CgE,EAASjO,OAAOinC,OAAO,MAqC7B,OAlCAjnC,OAAOD,KAAKksC,GAAc5nC,SAAQnU,IAChC,MAAMi8C,EAAYF,EAAa/7C,GAC/B,KAAKoZ,EAAAA,EAAAA,GAAS6iC,GACZ,OAAOh8B,QAAQi8B,MAAM,0CAA0Cl8C,KAEjE,GAAIi8C,EAAUE,OACZ,OAAOl8B,QAAQC,KAAK,kDAAkDlgB,KAExE,MAAMsd,EAAOq+B,GAAc37C,EAAIi8C,GACzBG,EA7CV,SAAmC9+B,EAAMyD,GACvC,OAAOzD,IAASyD,EAAY,UAAY,SAC1C,CA2CsBs7B,CAA0B/+B,EAAM0+B,GAC5CM,EAAsBR,EAAc/9B,QAAU,CAAC,EACrDA,EAAO/d,IAAMu8C,EAAAA,EAAAA,IAAQzsC,OAAOinC,OAAO,MAAO,CAAC,CAACz5B,QAAO2+B,EAAWK,EAAoBh/B,GAAOg/B,EAAoBF,IAAW,IAI1HpjC,EAAOtY,KAAKE,SAASuT,SAAQiM,IAC3B,MAAM3f,EAAO2f,EAAQ3f,MAAQuY,EAAOvY,KAC9BsgB,EAAYX,EAAQW,WAAa06B,GAAah7C,EAAMsZ,GAEpDuiC,GADkBhE,EAAAA,GAAU73C,IAAS,CAAC,GACAsd,QAAU,CAAC,EACvDjO,OAAOD,KAAKysC,GAAqBnoC,SAAQqoC,IACvC,MAAMl/B,EAnEZ,SAAmCtd,EAAI+gB,GACrC,IAAIzD,EAAOtd,EAMX,MALW,YAAPA,EACFsd,EAAOyD,EACS,YAAP/gB,IACTsd,EAAqB,MAAdyD,EAAoB,IAAM,KAE5BzD,CACT,CA2DmBm/B,CAA0BD,EAAWz7B,GAC5C/gB,EAAKogB,EAAQ9C,EAAO,WAAaA,EACvCS,EAAO/d,GAAM+d,EAAO/d,IAAO8P,OAAOinC,OAAO,OACzCwF,EAAAA,EAAAA,IAAQx+B,EAAO/d,GAAK,CAAC,CAACsd,QAAOy+B,EAAa/7C,GAAKs8C,EAAoBE,IAAW,GAChF,IAIF1sC,OAAOD,KAAKkO,GAAQ5J,SAAQsF,IAC1B,MAAMsB,EAAQgD,EAAOtE,IACrB8iC,EAAAA,EAAAA,IAAQxhC,EAAO,CAACzB,EAAAA,EAAAA,OAAgByB,EAAMta,MAAO6Y,EAAAA,EAAAA,OAAe,IAGvDyE,CACT,CAMmB2+B,CAAiB1jC,EAAQe,EAC5C,CAEA,SAAS4iC,GAASj8C,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXE,SAAWF,EAAKE,UAAY,GACjCF,EAAKC,OAASD,EAAKC,QAAU,GACtBD,CACT,CAWA,MAAMk8C,GAAW,IAAInpC,IACfopC,GAAa,IAAIC,IAEvB,SAASC,GAAW91B,EAAU+1B,GAC5B,IAAIntC,EAAO+sC,GAASnnC,IAAIwR,GAMxB,OALKpX,IACHA,EAAOmtC,IACPJ,GAASjnC,IAAIsR,EAAUpX,GACvBgtC,GAAW7mC,IAAInG,IAEVA,CACT,CAEA,MAAMotC,GAAa,CAACtnC,EAAK9D,EAAK4H,KAC5B,MAAMwB,GAAO2I,EAAAA,EAAAA,GAAiB/R,EAAK4H,QACtBrW,IAAT6X,GACFtF,EAAIK,IAAIiF,IAIG,MAAMiiC,GACnB3rC,YAAYyH,GACVvH,KAAK0rC,QA/BT,SAAoBnkC,GAMlB,OALAA,EAASA,GAAU,CAAC,GACbtY,KAAOi8C,GAAS3jC,EAAOtY,MAE9Bm7C,GAAY7iC,GAELA,CACT,CAwBmBokC,CAAWpkC,GAC1BvH,KAAK4rC,YAAc,IAAI5pC,IACvBhC,KAAK6rC,eAAiB,IAAI7pC,GAC5B,CAEI8pC,eACF,OAAO9rC,KAAK0rC,QAAQI,QACtB,CAEI98C,WACF,OAAOgR,KAAK0rC,QAAQ18C,IACtB,CAEIA,SAAKA,GACPgR,KAAK0rC,QAAQ18C,KAAOA,CACtB,CAEIC,WACF,OAAO+Q,KAAK0rC,QAAQz8C,IACtB,CAEIA,SAAKA,GACP+Q,KAAK0rC,QAAQz8C,KAAOi8C,GAASj8C,EAC/B,CAEIqZ,cACF,OAAOtI,KAAK0rC,QAAQpjC,OACtB,CAEIA,YAAQA,GACVtI,KAAK0rC,QAAQpjC,QAAUA,CACzB,CAEIuX,cACF,OAAO7f,KAAK0rC,QAAQ7rB,OACtB,CAEAjZ,SACE,MAAMW,EAASvH,KAAK0rC,QACpB1rC,KAAK+rC,aACL3B,GAAY7iC,EACd,CAEAwkC,aACE/rC,KAAK4rC,YAAYI,QACjBhsC,KAAK6rC,eAAeG,OACtB,CAQAh7B,iBAAiBi7B,GACf,OAAOX,GAAWW,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,MAEN,CASAh2B,0BAA0Bg2B,EAAaj2B,GACrC,OAAOs1B,GAAW,GAAGW,gBAA0Bj2B,KAC7C,IAAM,CACJ,CACE,YAAYi2B,iBAA2Bj2B,IACvC,eAAeA,KAGjB,CACE,YAAYi2B,IACZ,MAGR,CAUAt2B,wBAAwBs2B,EAAa32B,GACnC,OAAOg2B,GAAW,GAAGW,KAAe32B,KAClC,IAAM,CAAC,CACL,YAAY22B,cAAwB32B,IACpC,YAAY22B,IACZ,YAAY32B,IACZ,MAEN,CAOAs0B,gBAAgBd,GACd,MAAMv6C,EAAKu6C,EAAOv6C,GAElB,OAAO+8C,GAAW,GADLtrC,KAAKhR,eACkBT,KAClC,IAAM,CAAC,CACL,WAAWA,OACRu6C,EAAOoD,wBAA0B,MAE1C,CAKAC,cAAcC,EAAWC,GACvB,MAAMT,EAAc5rC,KAAK4rC,YACzB,IAAIr2B,EAAQq2B,EAAY5nC,IAAIooC,GAK5B,OAJK72B,IAAS82B,IACZ92B,EAAQ,IAAIvT,IACZ4pC,EAAY1nC,IAAIkoC,EAAW72B,IAEtBA,CACT,CAQArE,gBAAgBk7B,EAAWE,EAAUD,GACnC,MAAM,QAAC/jC,EAAO,KAAEtZ,GAAQgR,KAClBuV,EAAQvV,KAAKmsC,cAAcC,EAAWC,GACtCx/B,EAAS0I,EAAMvR,IAAIsoC,GACzB,GAAIz/B,EACF,OAAOA,EAGT,MAAMoE,EAAS,IAAIo6B,IAEnBiB,EAAS5pC,SAAQtE,IACXguC,IACFn7B,EAAO1M,IAAI6nC,GACXhuC,EAAKsE,SAAQsF,GAAOwjC,GAAWv6B,EAAQm7B,EAAWpkC,MAEpD5J,EAAKsE,SAAQsF,GAAOwjC,GAAWv6B,EAAQ3I,EAASN,KAChD5J,EAAKsE,SAAQsF,GAAOwjC,GAAWv6B,EAAQ41B,EAAAA,GAAU73C,IAAS,CAAC,EAAGgZ,KAC9D5J,EAAKsE,SAAQsF,GAAOwjC,GAAWv6B,EAAQpJ,EAAAA,EAAUG,KACjD5J,EAAKsE,SAAQsF,GAAOwjC,GAAWv6B,EAAQ01B,EAAAA,GAAa3+B,IAAAA,IAGtD,MAAMmjB,EAAQ14B,MAAM2M,KAAK6R,GAOzB,OANqB,IAAjBka,EAAM18B,QACR08B,EAAM7mB,KAAKjG,OAAOinC,OAAO,OAEvB8F,GAAW5mC,IAAI8nC,IACjB/2B,EAAMrR,IAAIooC,EAAUnhB,GAEfA,CACT,CAMAohB,oBACE,MAAM,QAACjkC,EAAO,KAAEtZ,GAAQgR,KAExB,MAAO,CACLsI,EACAu+B,EAAAA,GAAU73C,IAAS,CAAC,EACpB6Y,EAAAA,EAAAA,SAAkB7Y,IAAS,CAAC,EAC5B,CAACA,QACD6Y,EAAAA,EACA8+B,EAAAA,GAEJ,CASA9wB,oBAAoB5E,EAAQhT,EAAO6W,EAASc,EAAW,CAAC,KACtD,MAAMqgB,EAAS,CAAC1tB,SAAS,IACnB,SAACikC,EAAQ,YAAEC,GAAeC,GAAY1sC,KAAK6rC,eAAgB56B,EAAQ2E,GACzE,IAAItN,EAAUkkC,EACd,GAkDJ,SAAqBhZ,EAAOv1B,GAC1B,MAAM,aAAC0uC,EAAY,YAAEC,IAAehE,EAAAA,EAAAA,IAAapV,GAEjD,IAAK,MAAM9tB,KAAQzH,EAAO,CACxB,MAAM4rC,EAAa8C,EAAajnC,GAC1BokC,EAAY8C,EAAYlnC,GACxBuD,GAAS6gC,GAAaD,IAAerW,EAAM9tB,GACjD,GAAKmkC,KAAegD,EAAAA,EAAAA,IAAW5jC,IAAU6jC,GAAY7jC,KAC/C6gC,IAAap3C,EAAAA,EAAAA,GAAQuW,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CA/DQ8jC,CAAYP,EAAUvuC,GAAQ,CAChCg4B,EAAO1tB,SAAU,EACjBuM,GAAU+3B,EAAAA,EAAAA,IAAW/3B,GAAWA,IAAYA,EAE5C,MAAMk4B,EAAchtC,KAAKmR,eAAeF,EAAQ6D,EAAS23B,GACzDnkC,GAAU2kC,EAAAA,EAAAA,IAAeT,EAAU13B,EAASk4B,GAG9C,IAAK,MAAMtnC,KAAQzH,EACjBg4B,EAAOvwB,GAAQ4C,EAAQ5C,GAEzB,OAAOuwB,CACT,CAQA9kB,eAAeF,EAAQ6D,EAASc,EAAW,CAAC,IAAKs3B,GAC/C,MAAM,SAACV,GAAYE,GAAY1sC,KAAK6rC,eAAgB56B,EAAQ2E,GAC5D,OAAOjO,EAAAA,EAAAA,GAASmN,IACZm4B,EAAAA,EAAAA,IAAeT,EAAU13B,OAASnjB,EAAWu7C,GAC7CV,CACN,EAGF,SAASE,GAAYS,EAAel8B,EAAQ2E,GAC1C,IAAIL,EAAQ43B,EAAcnpC,IAAIiN,GACzBsE,IACHA,EAAQ,IAAIvT,IACZmrC,EAAcjpC,IAAI+M,EAAQsE,IAE5B,MAAMC,EAAWI,EAAS0wB,OAC1B,IAAIz5B,EAAS0I,EAAMvR,IAAIwR,GACvB,IAAK3I,EAAQ,CAEXA,EAAS,CACP2/B,UAFeY,EAAAA,EAAAA,IAAgBn8B,EAAQ2E,GAGvC62B,YAAa72B,EAASrJ,QAAO5L,IAAMA,EAAE7B,cAAcgtB,SAAS,YAE9DvW,EAAMrR,IAAIsR,EAAU3I,GAEtB,OAAOA,CACT,CAEA,MAAMigC,GAAc7jC,IAAStB,EAAAA,EAAAA,GAASsB,IACjC5K,OAAO0J,oBAAoBkB,GAAOxE,QAAO,CAACC,EAAKsD,IAAQtD,IAAOmoC,EAAAA,EAAAA,IAAW5jC,EAAMjB,MAAO,GCzW3F,MAAMqlC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBrkB,EAAUpd,GACtC,MAAoB,QAAbod,GAAmC,WAAbA,IAAiE,IAAvCokB,GAAgBxwB,QAAQoM,IAA6B,MAATpd,CACrG,CAEA,SAAS0hC,GAAcC,EAAIC,GACzB,OAAO,SAASj9C,EAAGC,GACjB,OAAOD,EAAEg9C,KAAQ/8C,EAAE+8C,GACfh9C,EAAEi9C,GAAMh9C,EAAEg9C,GACVj9C,EAAEg9C,GAAM/8C,EAAE+8C,EAChB,CACF,CAEA,SAASE,GAAqB54B,GAC5B,MAAM1S,EAAQ0S,EAAQ1S,MAChBwF,EAAmBxF,EAAMkG,QAAQY,UAEvC9G,EAAM25B,cAAc,gBACpBgN,EAAAA,EAAAA,GAAanhC,GAAoBA,EAAiB+lC,WAAY,CAAC74B,GAAU1S,EAC3E,CAEA,SAASwrC,GAAoB94B,GAC3B,MAAM1S,EAAQ0S,EAAQ1S,MAChBwF,EAAmBxF,EAAMkG,QAAQY,WACvC6/B,EAAAA,EAAAA,GAAanhC,GAAoBA,EAAiBimC,WAAY,CAAC/4B,GAAU1S,EAC3E,CAMA,SAAS0rC,GAAUtqC,GAYjB,OAXIqxB,EAAAA,EAAAA,MAAqC,iBAATrxB,EAC9BA,EAAO1U,SAASC,eAAeyU,GACtBA,GAAQA,EAAK/U,SAEtB+U,EAAOA,EAAK,IAGVA,GAAQA,EAAKosB,SAEfpsB,EAAOA,EAAKosB,QAEPpsB,CACT,CAEA,MAAMuqC,GAAY,CAAC,EACbC,GAAYhmC,IAChB,MAAM4nB,EAASke,GAAU9lC,GACzB,OAAO3J,OAAO+J,OAAO2lC,IAAWxhC,QAAQ7b,GAAMA,EAAEk/B,SAAWA,IAAQ/rB,KAAK,EAG1E,SAASoqC,GAAgB7tC,EAAK0C,EAAOyU,GACnC,MAAMnZ,EAAOC,OAAOD,KAAKgC,GACzB,IAAK,MAAM4H,KAAO5J,EAAM,CACtB,MAAM8vC,GAAUlmC,EAChB,GAAIkmC,GAAUprC,EAAO,CACnB,MAAMmG,EAAQ7I,EAAI4H,UACX5H,EAAI4H,IACPuP,EAAO,GAAK22B,EAASprC,KACvB1C,EAAI8tC,EAAS32B,GAAQtO,GAG3B,CACF,CA+BA,MAAMtH,GAEJqL,gBAAkBnF,EAAAA,EAClBmF,iBAAmB+gC,GACnB/gC,iBAAmB65B,EAAAA,GACnB75B,gBAAkBua,GAClBva,uBACAA,gBAAkBghC,GAElBhhC,mBAAmBzJ,GACjBgkB,GAAShjB,OAAOhB,GAChB4qC,IACF,CAEAnhC,qBAAqBzJ,GACnBgkB,GAASxiB,UAAUxB,GACnB4qC,IACF,CAGAruC,YAAY0D,EAAM4qC,GAChB,MAAM7mC,EAASvH,KAAKuH,OAAS,IAAIkkC,GAAO2C,GAClCC,EAAgBP,GAAUtqC,GAC1B8qC,EAAgBN,GAASK,GAC/B,GAAIC,EACF,MAAM,IAAI5mB,MACR,4CAA+C4mB,EAAc//C,GAA7D,kDACgD+/C,EAAc1e,OAAOrhC,GAAK,oBAI9E,MAAM+Z,EAAUf,EAAO4J,eAAe5J,EAAOglC,oBAAqBvsC,KAAKoR,cAEvEpR,KAAK8rC,SAAW,IAAKvkC,EAAOukC,UAAYlX,GAAgByZ,IACxDruC,KAAK8rC,SAAS1b,aAAa7oB,GAE3B,MAAMuN,EAAU9U,KAAK8rC,SAASnc,eAAe0e,EAAe/lC,EAAQsX,aAC9DgQ,EAAS9a,GAAWA,EAAQ8a,OAC5BrT,EAASqT,GAAUA,EAAOrT,OAC1BC,EAAQoT,GAAUA,EAAOpT,MAE/Bxc,KAAKzR,IAAKggD,EAAAA,EAAAA,MACVvuC,KAAKkN,IAAM4H,EACX9U,KAAK4vB,OAASA,EACd5vB,KAAKwc,MAAQA,EACbxc,KAAKuc,OAASA,EACdvc,KAAKwuC,SAAWlmC,EAIhBtI,KAAKyuC,aAAezuC,KAAK4f,YACzB5f,KAAKouB,QAAU,GACfpuB,KAAK0uC,UAAY,GACjB1uC,KAAK0L,aAAU/Z,EACfqO,KAAK2tB,MAAQ,GACb3tB,KAAK2yB,6BAA0BhhC,EAC/BqO,KAAKwU,eAAY7iB,EACjBqO,KAAK0D,QAAU,GACf1D,KAAK2uC,gBAAah9C,EAClBqO,KAAK4uC,WAAa,CAAC,EAEnB5uC,KAAK6uC,0BAAuBl9C,EAC5BqO,KAAK8uC,gBAAkB,GACvB9uC,KAAKsM,OAAS,CAAC,EACftM,KAAK+uC,SAAW,IAAIxG,GACpBvoC,KAAKw0B,SAAW,CAAC,EACjBx0B,KAAKgvC,eAAiB,CAAC,EACvBhvC,KAAKivC,UAAW,EAChBjvC,KAAKsW,yBAAsB3kB,EAC3BqO,KAAK8N,cAAWnc,EAChBqO,KAAKkvC,WAAYC,EAAAA,EAAAA,KAAS9kC,GAAQrK,KAAK4G,OAAOyD,IAAO/B,EAAQ8mC,aAAe,GAC5EpvC,KAAK8X,aAAe,GAGpBi2B,GAAU/tC,KAAKzR,IAAMyR,KAEhB8U,GAAY8a,GASjBxmB,EAASjF,OAAOnE,KAAM,WAAY0tC,IAClCtkC,EAASjF,OAAOnE,KAAM,WAAY4tC,IAElC5tC,KAAKqvC,cACDrvC,KAAKivC,UACPjvC,KAAK4G,UATL4H,QAAQi8B,MAAM,oEAWlB,CAEI7qB,kBACF,MAAOtX,SAAS,YAACsX,EAAW,oBAAE0vB,GAAoB,MAAE9yB,EAAAA,OAAOD,EAAM,aAAEkyB,GAAgBzuC,KACnF,OAAKic,EAAAA,EAAAA,GAAc2D,GAKf0vB,GAAuBb,EAElBA,EAIFlyB,EAASC,EAAQD,EAAS,KATxBqD,CAUX,CAEI3wB,WACF,OAAO+Q,KAAKuH,OAAOtY,IACrB,CAEIA,SAAKA,GACP+Q,KAAKuH,OAAOtY,KAAOA,CACrB,CAEIqZ,cACF,OAAOtI,KAAKwuC,QACd,CAEIlmC,YAAQA,GACVtI,KAAKuH,OAAOe,QAAUA,CACxB,CAEIif,eACF,OAAOA,EACT,CAKA8nB,cAeE,OAbArvC,KAAK+7B,cAAc,cAEf/7B,KAAKsI,QAAQinC,WACfvvC,KAAK0yB,UAEL8c,EAAAA,EAAAA,IAAYxvC,KAAMA,KAAKsI,QAAQmqB,kBAGjCzyB,KAAKyvC,aAGLzvC,KAAK+7B,cAAc,aAEZ/7B,IACT,CAEAgsC,QAEE,OADA0D,EAAAA,EAAAA,IAAY1vC,KAAK4vB,OAAQ5vB,KAAKkN,KACvBlN,IACT,CAEA6E,OAEE,OADAuE,EAASvE,KAAK7E,MACPA,IACT,CAOA0yB,OAAOlW,EAAOD,GACPnT,EAAS9F,QAAQtD,MAGpBA,KAAK2vC,kBAAoB,CAACnzB,QAAOD,UAFjCvc,KAAK4vC,QAAQpzB,EAAOD,EAIxB,CAEAqzB,QAAQpzB,EAAOD,GACb,MAAMjU,EAAUtI,KAAKsI,QACfsnB,EAAS5vB,KAAK4vB,OACdhQ,EAActX,EAAQgnC,qBAAuBtvC,KAAK4f,YAClDiwB,EAAU7vC,KAAK8rC,SAAS5b,eAAeN,EAAQpT,EAAOD,EAAQqD,GAC9DkwB,EAAWxnC,EAAQmqB,kBAAoBzyB,KAAK8rC,SAAS7b,sBACrD5lB,EAAOrK,KAAKwc,MAAQ,SAAW,SAErCxc,KAAKwc,MAAQqzB,EAAQrzB,MACrBxc,KAAKuc,OAASszB,EAAQtzB,OACtBvc,KAAKyuC,aAAezuC,KAAK4f,aACpB4vB,EAAAA,EAAAA,IAAYxvC,KAAM8vC,GAAU,KAIjC9vC,KAAK+7B,cAAc,SAAU,CAAC5yB,KAAM0mC,KAEpC9G,EAAAA,EAAAA,GAAazgC,EAAQynC,SAAU,CAAC/vC,KAAM6vC,GAAU7vC,MAE5CA,KAAKivC,UACHjvC,KAAKkvC,UAAU7kC,IAEjBrK,KAAKgwC,SAGX,CAEAC,sBACE,MACMC,EADUlwC,KAAKsI,QACSgE,QAAU,CAAC,GAEzC8iB,EAAAA,EAAAA,GAAK8gB,GAAe,CAACC,EAAanL,KAChCmL,EAAY5hD,GAAKy2C,CAAAA,GAErB,CAKAoL,sBACE,MAAM9nC,EAAUtI,KAAKsI,QACf+nC,EAAY/nC,EAAQgE,OACpBA,EAAStM,KAAKsM,OACdgkC,EAAUjyC,OAAOD,KAAKkO,GAAQ7H,QAAO,CAACrE,EAAK7R,KAC/C6R,EAAI7R,IAAM,EACH6R,IACN,CAAC,GACJ,IAAImD,EAAQ,GAER8sC,IACF9sC,EAAQA,EAAMmV,OACZra,OAAOD,KAAKiyC,GAAW/hD,KAAKC,IAC1B,MAAM47C,EAAekG,EAAU9hD,GACzBsd,EAAOq+B,GAAc37C,EAAI47C,GACzBoG,EAAoB,MAAT1kC,EACXgQ,EAAwB,MAAThQ,EACrB,MAAO,CACLvD,QAAS6hC,EACTqG,UAAWD,EAAW,YAAc10B,EAAe,SAAW,OAC9D40B,MAAOF,EAAW,eAAiB10B,EAAe,WAAa,SACjE,OAKNuT,EAAAA,EAAAA,GAAK7rB,GAAQC,IACX,MAAM2mC,EAAe3mC,EAAK8E,QACpB/Z,EAAK47C,EAAa57C,GAClBsd,EAAOq+B,GAAc37C,EAAI47C,GACzBuG,GAAYzhC,EAAAA,EAAAA,GAAek7B,EAAan7C,KAAMwU,EAAKitC,YAE3B9+C,IAA1Bw4C,EAAalhB,UAA0BqkB,GAAqBnD,EAAalhB,SAAUpd,KAAUyhC,GAAqB9pC,EAAKgtC,aACzHrG,EAAalhB,SAAWzlB,EAAKgtC,WAG/BF,EAAQ/hD,IAAM,EACd,IAAI+a,EAAQ,KACZ,GAAI/a,KAAM+d,GAAUA,EAAO/d,GAAIS,OAAS0hD,EACtCpnC,EAAQgD,EAAO/d,OACV,CAEL+a,EAAQ,IADWie,GAASkgB,SAASiJ,GAC7B,CAAe,CACrBniD,KACAS,KAAM0hD,EACNxjC,IAAKlN,KAAKkN,IACV9K,MAAOpC,OAETsM,EAAOhD,EAAM/a,IAAM+a,EAGrBA,EAAMwe,KAAKqiB,EAAc7hC,EAAAA,KAG3B8mB,EAAAA,EAAAA,GAAKkhB,GAAS,CAACK,EAAYpiD,KACpBoiD,UACIrkC,EAAO/d,OAIlB6gC,EAAAA,EAAAA,GAAK9iB,GAAShD,IACZoiB,GAAQhkB,UAAU1H,KAAMsJ,EAAOA,EAAMhB,SACrCojB,GAAQyC,OAAOnuB,KAAMsJ,EAAAA,GAEzB,CAKAsnC,kBACE,MAAM/mC,EAAW7J,KAAK0uC,UAChBt3B,EAAUpX,KAAK/Q,KAAKE,SAASV,OAC7B0oB,EAAUtN,EAASpb,OAGzB,GADAob,EAAS+O,MAAK,CAACpoB,EAAGC,IAAMD,EAAEwZ,MAAQvZ,EAAEuZ,QAChCmN,EAAUC,EAAS,CACrB,IAAK,IAAI/kB,EAAI+kB,EAAS/kB,EAAI8kB,IAAW9kB,EACnC2N,KAAK6wC,oBAAoBx+C,GAE3BwX,EAAS8N,OAAOP,EAASD,EAAUC,GAErCpX,KAAK8uC,gBAAkBjlC,EAASinC,MAAM,GAAGl4B,KAAK20B,GAAc,QAAS,SACvE,CAKAwD,8BACE,MAAOrC,UAAW7kC,EAAU5a,MAAM,SAACE,IAAa6Q,KAC5C6J,EAASpb,OAASU,EAASV,eACtBuR,KAAK0L,QAEd7B,EAASnH,SAAQ,CAACiI,EAAMX,KACmC,IAArD7a,EAASod,QAAOhZ,GAAKA,IAAMoX,EAAKia,WAAUn2B,QAC5CuR,KAAK6wC,oBAAoB7mC,KAG/B,CAEAgnC,2BACE,MAAMC,EAAiB,GACjB9hD,EAAW6Q,KAAK/Q,KAAKE,SAC3B,IAAIkD,EAAG0X,EAIP,IAFA/J,KAAK+wC,8BAEA1+C,EAAI,EAAG0X,EAAO5a,EAASV,OAAQ4D,EAAI0X,EAAM1X,IAAK,CACjD,MAAMsc,EAAUxf,EAASkD,GACzB,IAAIsY,EAAO3K,KAAK+P,eAAe1d,GAC/B,MAAMrD,EAAO2f,EAAQ3f,MAAQgR,KAAKuH,OAAOvY,KAazC,GAXI2b,EAAK3b,MAAQ2b,EAAK3b,OAASA,IAC7BgR,KAAK6wC,oBAAoBx+C,GACzBsY,EAAO3K,KAAK+P,eAAe1d,IAE7BsY,EAAK3b,KAAOA,EACZ2b,EAAK2E,UAAYX,EAAQW,WAAa06B,GAAah7C,EAAMgR,KAAKsI,SAC9DqC,EAAKumC,MAAQviC,EAAQuiC,OAAS,EAC9BvmC,EAAKX,MAAQ3X,EACbsY,EAAKgJ,MAAQ,GAAKhF,EAAQgF,MAC1BhJ,EAAKwmC,QAAUnxC,KAAKshB,iBAAiBjvB,GAEjCsY,EAAKY,WACPZ,EAAKY,WAAWmD,YAAYrc,GAC5BsY,EAAKY,WAAW4C,iBACX,CACL,MAAMijC,EAAkB7pB,GAAS+f,cAAct4C,IACzC,mBAACgf,EAAAA,gBAAoBC,GAAmBpG,EAAAA,EAAAA,SAAkB7Y,GAChEqP,OAAOqB,OAAO0xC,EAAiB,CAC7BnjC,gBAAiBsZ,GAASC,WAAWvZ,GACrCD,mBAAoBA,GAAsBuZ,GAASC,WAAWxZ,KAEhErD,EAAKY,WAAa,IAAI6lC,EAAgBpxC,KAAM3N,GAC5C4+C,EAAe3sC,KAAKqG,EAAKY,YAE7B,CAGA,OADAvL,KAAK4wC,kBACEK,CACT,CAMAI,kBACEjiB,EAAAA,EAAAA,GAAKpvB,KAAK/Q,KAAKE,UAAU,CAACwf,EAASrE,KACjCtK,KAAK+P,eAAezF,GAAciB,WAAW2E,OAAO,GACnDlQ,KACL,CAKAkQ,QACElQ,KAAKqxC,iBACLrxC,KAAK+7B,cAAc,QACrB,CAEAn1B,OAAOyD,GACL,MAAM9C,EAASvH,KAAKuH,OAEpBA,EAAOX,SACP,MAAM0B,EAAUtI,KAAKwuC,SAAWjnC,EAAO4J,eAAe5J,EAAOglC,oBAAqBvsC,KAAKoR,cACjFkgC,EAAgBtxC,KAAKsW,qBAAuBhO,EAAQY,UAU1D,GARAlJ,KAAKuxC,gBACLvxC,KAAKwxC,sBACLxxC,KAAKyxC,uBAILzxC,KAAK+uC,SAAS9F,cAEuD,IAAjEjpC,KAAK+7B,cAAc,eAAgB,CAAC1xB,OAAM2+B,YAAY,IACxD,OAIF,MAAMiI,EAAiBjxC,KAAKgxC,2BAE5BhxC,KAAK+7B,cAAc,wBAGnB,IAAIvN,EAAa,EACjB,IAAK,IAAIn8B,EAAI,EAAG0X,EAAO/J,KAAK/Q,KAAKE,SAASV,OAAQ4D,EAAI0X,EAAM1X,IAAK,CAC/D,MAAM,WAACkZ,GAAcvL,KAAK+P,eAAe1d,GACnC6d,GAASohC,IAAyD,IAAxCL,EAAep0B,QAAQtR,GAGvDA,EAAWmF,sBAAsBR,GACjCse,EAAa9/B,KAAKC,KAAK4c,EAAWkI,iBAAkB+a,EACtD,CACAA,EAAaxuB,KAAK0xC,YAAcppC,EAAQ8jB,OAAOulB,YAAcnjB,EAAa,EAC1ExuB,KAAK4xC,cAAcpjB,GAGd8iB,IAGHliB,EAAAA,EAAAA,GAAK6hB,GAAiB1lC,IACpBA,EAAW2E,OAAO,IAItBlQ,KAAK6xC,gBAAgBxnC,GAGrBrK,KAAK+7B,cAAc,cAAe,CAAC1xB,SAEnCrK,KAAKouB,QAAQxV,KAAK20B,GAAc,IAAK,SAGrC,MAAM,QAAC7pC,EAAO,WAAEirC,GAAc3uC,KAC1B2uC,EACF3uC,KAAK8xC,cAAcnD,GAAY,GACtBjrC,EAAQjV,QACjBuR,KAAK+xC,mBAAmBruC,EAASA,GAAS,GAG5C1D,KAAKgwC,QACP,CAKAuB,iBACEniB,EAAAA,EAAAA,GAAKpvB,KAAKsM,QAAShD,IACjBoiB,GAAQ4C,UAAUtuB,KAAMsJ,EAAAA,IAG1BtJ,KAAKiwC,sBACLjwC,KAAKowC,qBACP,CAKAoB,sBACE,MAAMlpC,EAAUtI,KAAKsI,QACf0pC,EAAiB,IAAI3G,IAAIhtC,OAAOD,KAAK4B,KAAK4uC,aAC1CqD,EAAY,IAAI5G,IAAI/iC,EAAQ4pC,SAE7BC,EAAAA,EAAAA,IAAUH,EAAgBC,MAAgBjyC,KAAK6uC,uBAAyBvmC,EAAQinC,aAEnFvvC,KAAKoyC,eACLpyC,KAAKyvC,aAET,CAKAgC,uBACE,MAAM,eAACzC,GAAkBhvC,KACnBqyC,EAAUryC,KAAKsyC,0BAA4B,GACjD,IAAK,MAAM,OAACjrC,EAAM,MAAEvE,EAAAA,MAAOyO,KAAU8gC,EAAS,CAE5CpE,GAAgBe,EAAgBlsC,EADR,oBAAXuE,GAAgCkK,EAAQA,EAEvD,CACF,CAKA+gC,yBACE,MAAMx6B,EAAe9X,KAAK8X,aAC1B,IAAKA,IAAiBA,EAAarpB,OACjC,OAGFuR,KAAK8X,aAAe,GACpB,MAAMy6B,EAAevyC,KAAK/Q,KAAKE,SAASV,OAClC+jD,EAAWrT,GAAQ,IAAIkM,IAC3BvzB,EACGvL,QAAO7b,GAAKA,EAAE,KAAOyuC,IACrB7wC,KAAI,CAACoC,EAAG2B,IAAMA,EAAI,IAAM3B,EAAEinB,OAAO,GAAG2uB,KAAK,QAGxCmM,EAAYD,EAAQ,GAC1B,IAAK,IAAIngD,EAAI,EAAGA,EAAIkgD,EAAclgD,IAChC,KAAK8/C,EAAAA,EAAAA,IAAUM,EAAWD,EAAQngD,IAChC,OAGJ,OAAOI,MAAM2M,KAAKqzC,GACfnkD,KAAIoC,GAAKA,EAAEy1C,MAAM,OACjB73C,KAAIkC,IAAAA,CAAO6W,OAAQ7W,EAAE,GAAIsS,OAAQtS,EAAE,GAAI+gB,OAAQ/gB,EAAE,MACtD,CAOAohD,cAAcpjB,GACZ,IAA+D,IAA3DxuB,KAAK+7B,cAAc,eAAgB,CAACiN,YAAY,IAClD,OAGFtd,GAAQ9kB,OAAO5G,KAAMA,KAAKwc,MAAOxc,KAAKuc,OAAQiS,GAE9C,MAAMja,EAAOvU,KAAKwU,UACZk+B,EAASn+B,EAAKiI,OAAS,GAAKjI,EAAKgI,QAAU,EAEjDvc,KAAKouB,QAAU,IACfgB,EAAAA,EAAAA,GAAKpvB,KAAK2tB,OAAQrC,IACZonB,GAA2B,cAAjBpnB,EAAIrC,WAOdqC,EAAI5jB,WACN4jB,EAAI5jB,YAEN1H,KAAKouB,QAAQ9pB,QAAQgnB,EAAI8C,WAAU,GAClCpuB,MAEHA,KAAKouB,QAAQ1rB,SAAQ,CAACc,EAAMwG,KAC1BxG,EAAKmvC,KAAO3oC,CAAAA,IAGdhK,KAAK+7B,cAAc,cACrB,CAOA8V,gBAAgBxnC,GACd,IAA6E,IAAzErK,KAAK+7B,cAAc,uBAAwB,CAAC1xB,OAAM2+B,YAAY,IAAlE,CAIA,IAAK,IAAI32C,EAAI,EAAG0X,EAAO/J,KAAK/Q,KAAKE,SAASV,OAAQ4D,EAAI0X,IAAQ1X,EAC5D2N,KAAK+P,eAAe1d,GAAGkZ,WAAW7D,YAGpC,IAAK,IAAIrV,EAAI,EAAG0X,EAAO/J,KAAK/Q,KAAKE,SAASV,OAAQ4D,EAAI0X,IAAQ1X,EAC5D2N,KAAK4yC,eAAevgD,GAAGw6C,EAAAA,EAAAA,IAAWxiC,GAAQA,EAAK,CAACC,aAAcjY,IAAMgY,GAGtErK,KAAK+7B,cAAc,sBAAuB,CAAC1xB,SAC7C,CAOAuoC,eAAe5oC,EAAOK,GACpB,MAAMM,EAAO3K,KAAK+P,eAAe/F,GAC3B6N,EAAO,CAAClN,OAAMX,QAAOK,OAAM2+B,YAAY,IAEW,IAApDhpC,KAAK+7B,cAAc,sBAAuBlkB,KAI9ClN,EAAKY,WAAWrI,QAAQmH,GAExBwN,EAAKmxB,YAAa,EAClBhpC,KAAK+7B,cAAc,qBAAsBlkB,GAC3C,CAEAm4B,UACiE,IAA3DhwC,KAAK+7B,cAAc,eAAgB,CAACiN,YAAY,MAIhD5/B,EAAS5E,IAAIxE,MACXA,KAAKivC,WAAa7lC,EAAS9F,QAAQtD,OACrCoJ,EAAStG,MAAM9C,OAGjBA,KAAKyD,OACLiqC,GAAqB,CAACtrC,MAAOpC,QAEjC,CAEAyD,OACE,IAAIpR,EACJ,GAAI2N,KAAK2vC,kBAAmB,CAC1B,MAAM,MAACnzB,EAAAA,OAAOD,GAAUvc,KAAK2vC,kBAC7B3vC,KAAK4vC,QAAQpzB,EAAOD,GACpBvc,KAAK2vC,kBAAoB,KAI3B,GAFA3vC,KAAKgsC,QAEDhsC,KAAKwc,OAAS,GAAKxc,KAAKuc,QAAU,EACpC,OAGF,IAA6D,IAAzDvc,KAAK+7B,cAAc,aAAc,CAACiN,YAAY,IAChD,OAMF,MAAM6J,EAAS7yC,KAAKouB,QACpB,IAAK/7B,EAAI,EAAGA,EAAIwgD,EAAOpkD,QAAUokD,EAAOxgD,GAAGg8B,GAAK,IAAKh8B,EACnDwgD,EAAOxgD,GAAGoR,KAAKzD,KAAKwU,WAMtB,IAHAxU,KAAK8yC,gBAGEzgD,EAAIwgD,EAAOpkD,SAAU4D,EAC1BwgD,EAAOxgD,GAAGoR,KAAKzD,KAAKwU,WAGtBxU,KAAK+7B,cAAc,YACrB,CAKAjyB,uBAAuBF,GACrB,MAAMC,EAAW7J,KAAK8uC,gBAChB7Y,EAAS,GACf,IAAI5jC,EAAG0X,EAEP,IAAK1X,EAAI,EAAG0X,EAAOF,EAASpb,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CACjD,MAAMsY,EAAOd,EAASxX,GACjBuX,IAAiBe,EAAKwmC,SACzBlb,EAAO3xB,KAAKqG,EAEhB,CAEA,OAAOsrB,CACT,CAMA9M,+BACE,OAAOnpB,KAAK8J,wBAAuB,EACrC,CAOAgpC,gBACE,IAAqE,IAAjE9yC,KAAK+7B,cAAc,qBAAsB,CAACiN,YAAY,IACxD,OAGF,MAAMn/B,EAAW7J,KAAKmpB,+BACtB,IAAK,IAAI92B,EAAIwX,EAASpb,OAAS,EAAG4D,GAAK,IAAKA,EAC1C2N,KAAK+yC,aAAalpC,EAASxX,IAG7B2N,KAAK+7B,cAAc,oBACrB,CAOAgX,aAAapoC,GACX,MAAMuC,EAAMlN,KAAKkN,IACXkH,EAAOzJ,EAAKkJ,MACZm/B,GAAW5+B,EAAKF,SAChBK,EAvrBV,SAAwB5J,GACtB,MAAM,OAACgF,EAAAA,OAAQE,GAAUlF,EACzB,GAAIgF,GAAUE,EACZ,MAAO,CACLoE,KAAMtE,EAAOsE,KACbF,MAAOpE,EAAOoE,MACdD,IAAKjE,EAAOiE,IACZE,OAAQnE,EAAOmE,OAGrB,CA6qBiBi/B,CAAetoC,IAAS3K,KAAKwU,UACpCqD,EAAO,CACXlN,OACAX,MAAOW,EAAKX,MACZg/B,YAAY,IAGwC,IAAlDhpC,KAAK+7B,cAAc,oBAAqBlkB,KAIxCm7B,IACF5O,EAAAA,EAAAA,GAASl3B,EAAK,CACZ+G,MAAoB,IAAdG,EAAKH,KAAiB,EAAIM,EAAKN,KAAOG,EAAKH,KACjDF,OAAsB,IAAfK,EAAKL,MAAkB/T,KAAKwc,MAAQjI,EAAKR,MAAQK,EAAKL,MAC7DD,KAAkB,IAAbM,EAAKN,IAAgB,EAAIS,EAAKT,IAAMM,EAAKN,IAC9CE,QAAwB,IAAhBI,EAAKJ,OAAmBhU,KAAKuc,OAAShI,EAAKP,OAASI,EAAKJ,SAIrErJ,EAAKY,WAAW9H,OAEZuvC,IACFzO,EAAAA,EAAAA,GAAWr3B,GAGb2K,EAAKmxB,YAAa,EAClBhpC,KAAK+7B,cAAc,mBAAoBlkB,GACzC,CAOA0R,cAAcxK,GACZ,OAAOyK,EAAAA,EAAAA,GAAezK,EAAO/e,KAAKwU,UAAWxU,KAAK0xC,YACpD,CAEAwB,0BAA0BtiD,EAAGyZ,EAAM/B,EAAS+gB,GAC1C,MAAMhiB,EAAS8rC,EAAYroB,MAAMzgB,GACjC,MAAsB,mBAAXhD,EACFA,EAAOrH,KAAMpP,EAAG0X,EAAS+gB,GAG3B,EACT,CAEAtZ,eAAezF,GACb,MAAMqE,EAAU3O,KAAK/Q,KAAKE,SAASmb,GAC7BT,EAAW7J,KAAK0uC,UACtB,IAAI/jC,EAAOd,EAAS0C,QAAOhZ,GAAKA,GAAKA,EAAEqxB,WAAajW,IAAS9K,MAoB7D,OAlBK8G,IACHA,EAAO,CACL3b,KAAM,KACNC,KAAM,GACN0f,QAAS,KACTpD,WAAY,KACZsH,OAAQ,KACR7D,QAAS,KACTG,QAAS,KACT+hC,MAAOviC,GAAWA,EAAQuiC,OAAS,EACnClnC,MAAOM,EACPsa,SAAUjW,EACVjC,QAAS,GACT+E,SAAS,GAEX5H,EAASvF,KAAKqG,IAGTA,CACT,CAEAyG,aACE,OAAOpR,KAAK8N,WAAa9N,KAAK8N,UAAWkH,EAAAA,EAAAA,GAAc,KAAM,CAAC5S,MAAOpC,KAAMhR,KAAM,UACnF,CAEAu3B,yBACE,OAAOvmB,KAAKmpB,+BAA+B16B,MAC7C,CAEA6yB,iBAAiBhX,GACf,MAAMqE,EAAU3O,KAAK/Q,KAAKE,SAASmb,GACnC,IAAKqE,EACH,OAAO,EAGT,MAAMhE,EAAO3K,KAAK+P,eAAezF,GAIjC,MAA8B,kBAAhBK,EAAKkI,QAAwBlI,EAAKkI,QAAUlE,EAAQkE,MACpE,CAEAugC,qBAAqB9oC,EAAc6mC,GACpBnxC,KAAK+P,eAAezF,GAC5BuI,QAAUs+B,CACjB,CAEAxwB,qBAAqB3W,GACnBhK,KAAKgvC,eAAehlC,IAAUhK,KAAKgvC,eAAehlC,EACpD,CAEA0T,kBAAkB1T,GAChB,OAAQhK,KAAKgvC,eAAehlC,EAC9B,CAKAqpC,kBAAkB/oC,EAAc2K,EAAWk8B,GACzC,MAAM9mC,EAAO8mC,EAAU,OAAS,OAC1BxmC,EAAO3K,KAAK+P,eAAezF,GAC3BjI,EAAQsI,EAAKY,WAAWwK,wBAAmBpkB,EAAW0Y,IAExDqL,EAAAA,EAAAA,GAAQT,IACVtK,EAAK1b,KAAKgmB,GAAWpC,QAAUs+B,EAC/BnxC,KAAK4G,WAEL5G,KAAKozC,qBAAqB9oC,EAAc6mC,GAExC9uC,EAAMuE,OAAO+D,EAAM,CAACwmC,YACpBnxC,KAAK4G,QAAQsG,GAAQA,EAAI5C,eAAiBA,EAAeD,OAAO1Y,IAEpE,CAEA2hD,KAAKhpC,EAAc2K,GACjBjV,KAAKqzC,kBAAkB/oC,EAAc2K,GAAW,EAClD,CAEAs+B,KAAKjpC,EAAc2K,GACjBjV,KAAKqzC,kBAAkB/oC,EAAc2K,GAAW,EAClD,CAKA47B,oBAAoBvmC,GAClB,MAAMK,EAAO3K,KAAK0uC,UAAUpkC,GACxBK,GAAQA,EAAKY,YACfZ,EAAKY,WAAW4E,kBAEXnQ,KAAK0uC,UAAUpkC,EACxB,CAEAkpC,QACE,IAAInhD,EAAG0X,EAIP,IAHA/J,KAAK6E,OACLuE,EAASrE,OAAO/E,MAEX3N,EAAI,EAAG0X,EAAO/J,KAAK/Q,KAAKE,SAASV,OAAQ4D,EAAI0X,IAAQ1X,EACxD2N,KAAK6wC,oBAAoBx+C,EAE7B,CAEAohD,UACEzzC,KAAK+7B,cAAc,iBACnB,MAAM,OAACnM,EAAM,IAAE1iB,GAAOlN,KAEtBA,KAAKwzC,QACLxzC,KAAKuH,OAAOwkC,aAERnc,IACF5vB,KAAKoyC,gBACL1C,EAAAA,EAAAA,IAAY9f,EAAQ1iB,GACpBlN,KAAK8rC,SAASjc,eAAe3iB,GAC7BlN,KAAK4vB,OAAS,KACd5vB,KAAKkN,IAAM,aAGN6gC,GAAU/tC,KAAKzR,IAEtByR,KAAK+7B,cAAc,eACrB,CAEA2X,iBAAiB77B,GACf,OAAO7X,KAAK4vB,OAAO+jB,aAAa97B,EAClC,CAKA43B,aACEzvC,KAAK4zC,iBACD5zC,KAAKsI,QAAQinC,WACfvvC,KAAK6zC,uBAEL7zC,KAAKivC,UAAW,CAEpB,CAKA2E,iBACE,MAAMrxC,EAAYvC,KAAK4uC,WACjB9C,EAAW9rC,KAAK8rC,SAEhBgI,EAAO,CAAC9kD,EAAM+gC,KAClB+b,EAAShc,iBAAiB9vB,KAAMhR,EAAM+gC,GACtCxtB,EAAUvT,GAAQ+gC,CAAAA,EAGdA,EAAW,CAACn/B,EAAG2C,EAAGub,KACtBle,EAAEkwB,QAAUvtB,EACZ3C,EAAEmwB,QAAUjS,EACZ9O,KAAK8xC,cAAclhD,EAAAA,GAGrBw+B,EAAAA,EAAAA,GAAKpvB,KAAKsI,QAAQ4pC,QAASljD,GAAS8kD,EAAK9kD,EAAM+gC,IACjD,CAKA8jB,uBACO7zC,KAAK6uC,uBACR7uC,KAAK6uC,qBAAuB,CAAC,GAE/B,MAAMtsC,EAAYvC,KAAK6uC,qBACjB/C,EAAW9rC,KAAK8rC,SAEhBgI,EAAO,CAAC9kD,EAAM+gC,KAClB+b,EAAShc,iBAAiB9vB,KAAMhR,EAAM+gC,GACtCxtB,EAAUvT,GAAQ+gC,CAAAA,EAEdgkB,EAAU,CAAC/kD,EAAM+gC,KACjBxtB,EAAUvT,KACZ88C,EAAS9b,oBAAoBhwB,KAAMhR,EAAM+gC,UAClCxtB,EAAUvT,KAIf+gC,EAAW,CAACvT,EAAOD,KACnBvc,KAAK4vB,QACP5vB,KAAK0yB,OAAOlW,EAAOD,IAIvB,IAAIy3B,EACJ,MAAM/E,EAAW,KACf8E,EAAQ,SAAU9E,GAElBjvC,KAAKivC,UAAW,EAChBjvC,KAAK0yB,SAELohB,EAAK,SAAU/jB,GACf+jB,EAAK,SAAUE,EAAAA,EAGjBA,EAAW,KACTh0C,KAAKivC,UAAW,EAEhB8E,EAAQ,SAAUhkB,GAGlB/vB,KAAKwzC,QACLxzC,KAAK4vC,QAAQ,EAAG,GAEhBkE,EAAK,SAAU7E,EAAAA,EAGbnD,EAAS3b,WAAWnwB,KAAK4vB,QAC3Bqf,IAEA+E,GAEJ,CAKA5B,gBACEhjB,EAAAA,EAAAA,GAAKpvB,KAAK4uC,YAAY,CAAC7e,EAAU/gC,KAC/BgR,KAAK8rC,SAAS9b,oBAAoBhwB,KAAMhR,EAAM+gC,EAAAA,IAEhD/vB,KAAK4uC,WAAa,CAAC,GAEnBxf,EAAAA,EAAAA,GAAKpvB,KAAK6uC,sBAAsB,CAAC9e,EAAU/gC,KACzCgR,KAAK8rC,SAAS9b,oBAAoBhwB,KAAMhR,EAAM+gC,EAAAA,IAEhD/vB,KAAK6uC,0BAAuBl9C,CAC9B,CAEAsiD,iBAAiB1wC,EAAO8G,EAAM2rB,GAC5B,MAAMke,EAASle,EAAU,MAAQ,SACjC,IAAIrrB,EAAMnH,EAAMnR,EAAG0X,EAOnB,IALa,YAATM,IACFM,EAAO3K,KAAK+P,eAAexM,EAAM,GAAG+G,cACpCK,EAAKY,WAAW,IAAM2oC,EAAS,wBAG5B7hD,EAAI,EAAG0X,EAAOxG,EAAM9U,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAC9CmR,EAAOD,EAAMlR,GACb,MAAMkZ,EAAa/H,GAAQxD,KAAK+P,eAAevM,EAAK8G,cAAciB,WAC9DA,GACFA,EAAW2oC,EAAS,cAAc1wC,EAAKkR,QAASlR,EAAK8G,aAAc9G,EAAKwG,MAE5E,CACF,CAMAmqC,oBACE,OAAOn0C,KAAK0D,SAAW,EACzB,CAMA0wC,kBAAkBC,GAChB,MAAMC,EAAat0C,KAAK0D,SAAW,GAC7BiD,EAAS0tC,EAAe/lD,KAAI,EAAEgc,eAAcN,YAChD,MAAMW,EAAO3K,KAAK+P,eAAezF,GACjC,IAAKK,EACH,MAAM,IAAI+c,MAAM,6BAA+Bpd,GAGjD,MAAO,CACLA,eACAoK,QAAS/J,EAAK1b,KAAK+a,GACnBA,QACF,MAEeuqC,EAAAA,EAAAA,IAAe5tC,EAAQ2tC,KAGtCt0C,KAAK0D,QAAUiD,EAEf3G,KAAK2uC,WAAa,KAClB3uC,KAAK+xC,mBAAmBprC,EAAQ2tC,GAEpC,CAWAvY,cAAc2M,EAAM7wB,EAAMtL,GACxB,OAAOvM,KAAK+uC,SAAStG,OAAOzoC,KAAM0oC,EAAM7wB,EAAMtL,EAChD,CAOAgC,gBAAgBimC,GACd,OAA6E,IAAtEx0C,KAAK+uC,SAASx2B,OAAOhM,QAAO5L,GAAKA,EAAEmoC,OAAOv6C,KAAOimD,IAAU/lD,MACpE,CAKAsjD,mBAAmBprC,EAAQ2tC,EAAYG,GACrC,MAAMC,EAAe10C,KAAKsI,QAAQqsC,MAC5B1sB,EAAO,CAACz3B,EAAGC,IAAMD,EAAE+b,QAAOhZ,IAAM9C,EAAEk5C,MAAK76B,GAAKvb,EAAE+W,eAAiBwE,EAAExE,cAAgB/W,EAAEyW,QAAU8E,EAAE9E,UAC/F4qC,EAAc3sB,EAAKqsB,EAAY3tC,GAC/BkuC,EAAYJ,EAAS9tC,EAASshB,EAAKthB,EAAQ2tC,GAE7CM,EAAYnmD,QACduR,KAAKi0C,iBAAiBW,EAAaF,EAAarqC,MAAM,GAGpDwqC,EAAUpmD,QAAUimD,EAAarqC,MACnCrK,KAAKi0C,iBAAiBY,EAAWH,EAAarqC,MAAM,EAExD,CAKAynC,cAAclhD,EAAG6jD,GACf,MAAM58B,EAAO,CACXzT,MAAOxT,EACP6jD,SACAzL,YAAY,EACZ8L,YAAa90C,KAAKupB,cAAc34B,IAE5BmkD,EAAejM,IAAYA,EAAOxgC,QAAQ4pC,QAAUlyC,KAAKsI,QAAQ4pC,QAAQpmB,SAASl7B,EAAE6iC,OAAOzkC,MAEjG,IAA6D,IAAzDgR,KAAK+7B,cAAc,cAAelkB,EAAMk9B,GAC1C,OAGF,MAAMjnB,EAAU9tB,KAAKg1C,aAAapkD,EAAG6jD,EAAQ58B,EAAKi9B,aASlD,OAPAj9B,EAAKmxB,YAAa,EAClBhpC,KAAK+7B,cAAc,aAAclkB,EAAMk9B,IAEnCjnB,GAAWjW,EAAKiW,UAClB9tB,KAAKgwC,SAGAhwC,IACT,CAUAg1C,aAAapkD,EAAG6jD,EAAQK,GACtB,MAAOpxC,QAAS4wC,EAAa,GAAE,QAAEhsC,GAAWtI,KAetCqpB,EAAmBorB,EACnB9tC,EAAS3G,KAAKi1C,mBAAmBrkD,EAAG0jD,EAAYQ,EAAazrB,GAC7D6rB,GAAUC,EAAAA,EAAAA,IAAcvkD,GACxBwkD,EAnnCV,SAA4BxkD,EAAGwkD,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAXlkD,EAAE5B,KAGlBkmD,EACKE,EAEFxkD,EALE,IAMX,CA2mCsBykD,CAAmBzkD,EAAGoP,KAAK2uC,WAAYmG,EAAaI,GAElEJ,IAGF90C,KAAK2uC,WAAa,MAGlB5F,EAAAA,EAAAA,GAAazgC,EAAQgtC,QAAS,CAAC1kD,EAAG+V,EAAQ3G,MAAOA,MAE7Ck1C,IACFnM,EAAAA,EAAAA,GAAazgC,EAAQmY,QAAS,CAAC7vB,EAAG+V,EAAQ3G,MAAOA,OAIrD,MAAM8tB,IAAWymB,EAAAA,EAAAA,IAAe5tC,EAAQ2tC,GAQxC,OAPIxmB,GAAW2mB,KACbz0C,KAAK0D,QAAUiD,EACf3G,KAAK+xC,mBAAmBprC,EAAQ2tC,EAAYG,IAG9Cz0C,KAAK2uC,WAAayG,EAEXtnB,CACT,CAUAmnB,mBAAmBrkD,EAAG0jD,EAAYQ,EAAazrB,GAC7C,GAAe,aAAXz4B,EAAE5B,KACJ,MAAO,GAGT,IAAK8lD,EAEH,OAAOR,EAGT,MAAMI,EAAe10C,KAAKsI,QAAQqsC,MAClC,OAAO30C,KAAKkzC,0BAA0BtiD,EAAG8jD,EAAarqC,KAAMqqC,EAAcrrB,EAC5E,EAIF,SAAS8kB,KACP,OAAO/e,EAAAA,EAAAA,GAAKztB,GAAMosC,WAAY3rC,GAAUA,EAAM2sC,SAAS9F,cACzD,CCpuCA,SAASsM,GAAkBtxB,EAAiBrD,EAAqBC,EAAqB20B,GACpF,MAAMC,GARiBxsC,EAQGgb,EAAI3b,QAAQotC,cAP/BC,EAAAA,EAAAA,IAAkB1sC,EAAO,CAAC,aAAc,WAAY,aAAc,cAD3E,IAAyBA,EASvB,MAAM2sC,GAAiB/0B,EAAcD,GAAe,EAC9Ci1B,EAAannD,KAAKiB,IAAIimD,EAAeJ,EAAa50B,EAAc,GAShEk1B,EAAqB30C,IACzB,MAAM40C,GAAiBl1B,EAAcnyB,KAAKiB,IAAIimD,EAAez0C,IAAQq0C,EAAa,EAClF,OAAOxY,EAAAA,EAAAA,GAAY77B,EAAK,EAAGzS,KAAKiB,IAAIimD,EAAeG,GAAAA,EAGrD,MAAO,CACLC,WAAYF,EAAkBL,EAAEO,YAChCC,SAAUH,EAAkBL,EAAEQ,UAC9BC,YAAYlZ,EAAAA,EAAAA,GAAYyY,EAAES,WAAY,EAAGL,GACzCM,UAAUnZ,EAAAA,EAAAA,GAAYyY,EAAEU,SAAU,EAAGN,GAEzC,CAKA,SAASO,GAAW9kD,EAAW+kD,EAAe9iD,EAAWub,GACvD,MAAO,CACLvb,EAAGA,EAAIjC,EAAI5C,KAAKyzB,IAAIk0B,GACpBvnC,EAAGA,EAAIxd,EAAI5C,KAAK2zB,IAAIg0B,GAExB,CAiBA,SAASC,GACPppC,EACAwH,EACA0G,EACAqE,EACA/V,EACAuc,GAEA,MAAM,EAAC1yB,EAAAA,EAAGub,EAAGkT,WAAYlf,EAAK,YAAEyzC,EAAa31B,YAAa41B,GAAU9hC,EAE9DmM,EAAcnyB,KAAKC,IAAI+lB,EAAQmM,YAAcpB,EAAUrE,EAASm7B,EAAa,GAC7E31B,EAAc41B,EAAS,EAAIA,EAAS/2B,EAAUrE,EAASm7B,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAM/kD,EAAQgY,EAAM5G,EAEpB,GAAI2c,EAAS,CAIX,MAEMi3B,IAFuBF,EAAS,EAAIA,EAAS/2B,EAAU,IAChCoB,EAAc,EAAIA,EAAcpB,EAAU,IACI,EAE3Eg3B,GAAiB/kD,GAD4B,IAAvBglD,EAA2B,EAASA,GAAuBA,EAAqBj3B,GAAW/tB,IACvE,EAG5C,MACMilD,GAAejlD,EADRhD,KAAKC,IAAI,KAAO+C,EAAQmvB,EAAczF,EAAS4H,EAAAA,GAAMnC,GAC7B,EAC/BmB,EAAalf,EAAQ6zC,EAAcF,EACnCx0B,EAAWvY,EAAMitC,EAAcF,GAC/B,WAACT,EAAAA,SAAYC,EAAAA,WAAUC,EAAU,SAAEC,GAAYZ,GAAkB7gC,EAASkM,EAAaC,EAAaoB,EAAWD,GAE/G40B,EAA2B/1B,EAAcm1B,EACzCa,EAAyBh2B,EAAco1B,EACvCa,EAA0B90B,EAAag0B,EAAaY,EACpDG,EAAwB90B,EAAWg0B,EAAWY,EAE9CG,EAA2Bp2B,EAAcs1B,EACzCe,EAAyBr2B,EAAcu1B,EACvCe,EAA0Bl1B,EAAak0B,EAAac,EACpDG,EAAwBl1B,EAAWk0B,EAAWc,EAIpD,GAFA/pC,EAAI02B,YAEA3d,EAAU,CAEZ,MAAMmxB,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJA7pC,EAAI+W,IAAI1wB,EAAGub,EAAG+R,EAAai2B,EAAyBM,GACpDlqC,EAAI+W,IAAI1wB,EAAGub,EAAG+R,EAAau2B,EAAuBL,GAG9Cd,EAAW,EAAG,CAChB,MAAMoB,EAAUjB,GAAWS,EAAwBE,EAAuBxjD,EAAGub,GAC7E5B,EAAI+W,IAAIozB,EAAQ9jD,EAAG8jD,EAAQvoC,EAAGmnC,EAAUc,EAAuB90B,EAAWa,EAAAA,GAI5E,MAAMw0B,EAAKlB,GAAWa,EAAwBh1B,EAAU1uB,EAAGub,GAI3D,GAHA5B,EAAI42B,OAAOwT,EAAG/jD,EAAG+jD,EAAGxoC,GAGhBqnC,EAAW,EAAG,CAChB,MAAMkB,EAAUjB,GAAWa,EAAwBE,EAAuB5jD,EAAGub,GAC7E5B,EAAI+W,IAAIozB,EAAQ9jD,EAAG8jD,EAAQvoC,EAAGqnC,EAAUl0B,EAAWa,EAAAA,EAASq0B,EAAwBzoD,KAAKs0B,IAI3F,MAAMu0B,GAA0Bt1B,EAAYk0B,EAAWv1B,GAAiBoB,EAAck0B,EAAat1B,IAAiB,EAKpH,GAJA1T,EAAI+W,IAAI1wB,EAAGub,EAAG8R,EAAaqB,EAAYk0B,EAAWv1B,EAAc22B,GAAuB,GACvFrqC,EAAI+W,IAAI1wB,EAAGub,EAAG8R,EAAa22B,EAAuBv1B,EAAck0B,EAAat1B,GAAc,GAGvFs1B,EAAa,EAAG,CAClB,MAAMmB,EAAUjB,GAAWY,EAA0BE,EAAyB3jD,EAAGub,GACjF5B,EAAI+W,IAAIozB,EAAQ9jD,EAAG8jD,EAAQvoC,EAAGonC,EAAYgB,EAA0BxoD,KAAKs0B,GAAIhB,EAAac,EAAAA,GAI5F,MAAM00B,EAAKpB,GAAWQ,EAA0B50B,EAAYzuB,EAAGub,GAI/D,GAHA5B,EAAI42B,OAAO0T,EAAGjkD,EAAGikD,EAAG1oC,GAGhBknC,EAAa,EAAG,CAClB,MAAMqB,EAAUjB,GAAWQ,EAA0BE,EAAyBvjD,EAAGub,GACjF5B,EAAI+W,IAAIozB,EAAQ9jD,EAAG8jD,EAAQvoC,EAAGknC,EAAYh0B,EAAac,EAAAA,EAASg0B,QAE7D,CACL5pC,EAAI22B,OAAOtwC,EAAGub,GAEd,MAAM2oC,EAAc/oD,KAAKyzB,IAAI20B,GAA2Bj2B,EAActtB,EAChEmkD,EAAchpD,KAAK2zB,IAAIy0B,GAA2Bj2B,EAAc/R,EACtE5B,EAAI42B,OAAO2T,EAAaC,GAExB,MAAMC,EAAYjpD,KAAKyzB,IAAI40B,GAAyBl2B,EAActtB,EAC5DqkD,EAAYlpD,KAAK2zB,IAAI00B,GAAyBl2B,EAAc/R,EAClE5B,EAAI42B,OAAO6T,EAAWC,GAGxB1qC,EAAI2qC,WACN,CAyBA,SAAS5T,GACP/2B,EACAwH,EACA0G,EACAqE,EACAwG,GAEA,MAAM,YAAC6xB,EAAAA,WAAa91B,EAAAA,cAAYxC,EAAa,QAAElX,GAAWoM,GACpD,YAAC8L,EAAAA,gBAAau3B,GAAmBzvC,EACjC0vC,EAAgC,UAAxB1vC,EAAQ+b,YAEtB,IAAK7D,EACH,OAGEw3B,GACF9qC,EAAIqT,UAA0B,EAAdC,EAChBtT,EAAI+qC,SAAWF,GAAmB,UAElC7qC,EAAIqT,UAAYC,EAChBtT,EAAI+qC,SAAWF,GAAmB,SAGpC,IAAI91B,EAAWvN,EAAQuN,SACvB,GAAI61B,EAAa,CACfxB,GAAQppC,EAAKwH,EAAS0G,EAAQqE,EAASwC,EAAUgE,GACjD,IAAK,IAAI5zB,EAAI,EAAGA,EAAIylD,IAAezlD,EACjC6a,EAAI62B,SAEDnnB,MAAM4C,KACTyC,EAAWD,GAAcxC,EAAgB6B,EAAAA,GAAOA,EAAAA,IAIhD22B,GA1ON,SAAiB9qC,EAA+BwH,EAAqBuN,GACnE,MAAM,WAACD,EAAAA,YAAYu0B,EAAAA,EAAahjD,EAAAA,EAAGub,EAAAA,YAAG+R,EAAAA,YAAaD,GAAelM,EAClE,IAAIwjC,EAAc3B,EAAc11B,EAIhC3T,EAAI02B,YACJ12B,EAAI+W,IAAI1wB,EAAGub,EAAG+R,EAAamB,EAAak2B,EAAaj2B,EAAWi2B,GAC5Dt3B,EAAc21B,GAChB2B,EAAc3B,EAAc31B,EAC5B1T,EAAI+W,IAAI1wB,EAAGub,EAAG8R,EAAaqB,EAAWi2B,EAAal2B,EAAak2B,GAAa,IAE7EhrC,EAAI+W,IAAI1wB,EAAGub,EAAGynC,EAAat0B,EAAWa,EAAAA,EAASd,EAAac,EAAAA,GAE9D5V,EAAI2qC,YACJ3qC,EAAIkH,MACN,CA2NI+jC,CAAQjrC,EAAKwH,EAASuN,GAGnB61B,IACHxB,GAAQppC,EAAKwH,EAAS0G,EAAQqE,EAASwC,EAAUgE,GACjD/Y,EAAI62B,SAER,CAUe,MAAMqU,WAAmBrjB,GAEtC/nB,UAAY,MAEZA,gBAAkB,CAChBqX,YAAa,SACbhE,YAAa,OACb03B,qBAAiBpmD,EACjB+jD,aAAc,EACdl1B,YAAa,EACbpF,OAAQ,EACRqE,QAAS,EACTgD,WAAO9wB,EACPs0B,UAAU,GAGZjZ,qBAAuB,CACrB5d,gBAAiB,mBAWnB0Q,YAAY0F,GACVkW,QAEA1b,KAAKsI,aAAU3W,EACfqO,KAAKwf,mBAAgB7tB,EACrBqO,KAAKgiB,gBAAarwB,EAClBqO,KAAKiiB,cAAWtwB,EAChBqO,KAAK4gB,iBAAcjvB,EACnBqO,KAAK6gB,iBAAclvB,EACnBqO,KAAKu2C,YAAc,EACnBv2C,KAAK83C,YAAc,EAEftyC,GACFnH,OAAOqB,OAAOM,KAAMwF,EAExB,CAEAikB,QAAQ4uB,EAAgBC,EAAgBjvB,GACtC,MAAMtK,EAAQ/e,KAAKwqB,SAAS,CAAC,IAAK,KAAMnB,IAClC,MAAC5G,EAAK,SAAE6H,IAAYG,EAAAA,EAAAA,GAAkB1L,EAAO,CAACxrB,EAAG8kD,EAAQvpC,EAAGwpC,KAC5D,WAACt2B,EAAAA,SAAYC,EAAAA,YAAUrB,EAAW,YAAEC,EAAW,cAAErB,GAAiBxf,KAAKwqB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCnB,GACGkvB,EAAUv4C,KAAKsI,QAAQmX,QAAU,EAEjC+4B,GADiBvpC,EAAAA,EAAAA,GAAeuQ,EAAeyC,EAAWD,IACxBX,EAAAA,IAAOqB,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAC1Ew2B,GAAeC,EAAAA,EAAAA,IAAWpuB,EAAU1J,EAAc23B,EAAS13B,EAAc03B,GAE/E,OAAQC,GAAiBC,CAC3B,CAEApuB,eAAehB,GACb,MAAM,EAAC91B,EAAC,EAAEub,EAAC,WAAEkT,EAAAA,SAAYC,EAAAA,YAAUrB,EAAAA,YAAaC,GAAe7gB,KAAKwqB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCnB,IACG,OAACjO,EAAAA,QAAQqE,GAAWzf,KAAKsI,QACzBqwC,GAAa32B,EAAaC,GAAY,EACtC22B,GAAch4B,EAAcC,EAAcpB,EAAUrE,GAAU,EACpE,MAAO,CACL7nB,EAAGA,EAAI7E,KAAKyzB,IAAIw2B,GAAaC,EAC7B9pC,EAAGA,EAAIpgB,KAAK2zB,IAAIs2B,GAAaC,EAEjC,CAEA5jB,gBAAgB3L,GACd,OAAOrpB,KAAKqqB,eAAehB,EAC7B,CAEA5lB,KAAKyJ,GACH,MAAM,QAAC5E,EAAO,cAAEkX,GAAiBxf,KAC3Bob,GAAU9S,EAAQ8S,QAAU,GAAK,EACjCqE,GAAWnX,EAAQmX,SAAW,GAAK,EACnCwG,EAAW3d,EAAQ2d,SAIzB,GAHAjmB,KAAKu2C,YAAuC,UAAxBjuC,EAAQ+b,YAA2B,IAAO,EAC9DrkB,KAAK83C,YAAct4B,EAAgB6B,EAAAA,EAAM3yB,KAAKwX,MAAMsZ,EAAgB6B,EAAAA,GAAO,EAErD,IAAlB7B,GAAuBxf,KAAK4gB,YAAc,GAAK5gB,KAAK6gB,YAAc,EACpE,OAGF3T,EAAIk2B,OAEJ,MAAMuV,GAAa34C,KAAKgiB,WAAahiB,KAAKiiB,UAAY,EACtD/U,EAAI2rC,UAAUnqD,KAAKyzB,IAAIw2B,GAAav9B,EAAQ1sB,KAAK2zB,IAAIs2B,GAAav9B,GAClE,MACM09B,EAAe19B,GADT,EAAI1sB,KAAK2zB,IAAI3zB,KAAKiB,IAAIqzB,EAAAA,EAAIxD,GAAiB,KAGvDtS,EAAIiT,UAAY7X,EAAQlZ,gBACxB8d,EAAIkT,YAAc9X,EAAQ+X,YArL9B,SACEnT,EACAwH,EACA0G,EACAqE,EACAwG,GAEA,MAAM,YAAC6xB,EAAW,WAAE91B,EAAAA,cAAYxC,GAAiB9K,EACjD,IAAIuN,EAAWvN,EAAQuN,SACvB,GAAI61B,EAAa,CACfxB,GAAQppC,EAAKwH,EAAS0G,EAAQqE,EAASwC,EAAUgE,GACjD,IAAK,IAAI5zB,EAAI,EAAGA,EAAIylD,IAAezlD,EACjC6a,EAAIoB,OAEDsO,MAAM4C,KACTyC,EAAWD,GAAcxC,EAAgB6B,EAAAA,GAAOA,EAAAA,IAGpDi1B,GAAQppC,EAAKwH,EAAS0G,EAAQqE,EAASwC,EAAUgE,GACjD/Y,EAAIoB,MAEN,CAkKIyqC,CAAQ7rC,EAAKlN,KAAM84C,EAAcr5B,EAASwG,GAC1Cge,GAAW/2B,EAAKlN,KAAM84C,EAAcr5B,EAASwG,GAE7C/Y,EAAIo2B,SACN,ECxWF,SAAS0V,GAAS9rC,EAAK5E,EAAS2X,EAAQ3X,GACtC4E,EAAI+rC,SAAUhqC,EAAAA,EAAAA,GAAegR,EAAMi5B,eAAgB5wC,EAAQ4wC,gBAC3DhsC,EAAIw2B,aAAYz0B,EAAAA,EAAAA,GAAegR,EAAMohB,WAAY/4B,EAAQ+4B,aACzDn0B,EAAIy2B,gBAAiB10B,EAAAA,EAAAA,GAAegR,EAAMshB,iBAAkBj5B,EAAQi5B,kBACpEr0B,EAAI+qC,UAAWhpC,EAAAA,EAAAA,GAAegR,EAAM83B,gBAAiBzvC,EAAQyvC,iBAC7D7qC,EAAIqT,WAAYtR,EAAAA,EAAAA,GAAegR,EAAMO,YAAalY,EAAQkY,aAC1DtT,EAAIkT,aAAcnR,EAAAA,EAAAA,GAAegR,EAAMI,YAAa/X,EAAQ+X,YAC9D,CAEA,SAASyjB,GAAO52B,EAAKisC,EAAU1zC,GAC7ByH,EAAI42B,OAAOr+B,EAAOlS,EAAGkS,EAAOqJ,EAC9B,CAcA,SAASsqC,GAASt6B,EAAQoG,EAASyG,EAAS,IAC1C,MAAMpa,EAAQuN,EAAOrwB,QACdqU,MAAOu2C,EAAc,EAAG3vC,IAAK4vC,EAAY/nC,EAAQ,GAAKoa,GACtD7oB,MAAOy2C,EAAc7vC,IAAK8vC,GAAct0B,EACzCpiB,EAAQpU,KAAKC,IAAI0qD,EAAaE,GAC9B7vC,EAAMhb,KAAKiB,IAAI2pD,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACLjoC,QACAzO,QACAuD,KAAM6e,EAAQ7e,KACd0D,KAAML,EAAM5G,IAAU22C,EAAUloC,EAAQ7H,EAAM5G,EAAQ4G,EAAM5G,EAEhE,CAiBA,SAAS42C,GAAYxsC,EAAKyX,EAAMO,EAASyG,GACvC,MAAM,OAAC7M,EAAAA,QAAQxW,GAAWqc,GACpB,MAACpT,EAAAA,MAAOzO,EAAAA,KAAOuD,EAAAA,KAAM0D,GAAQqvC,GAASt6B,EAAQoG,EAASyG,GACvDguB,EA9CR,SAAuBrxC,GACrB,OAAIA,EAAQsxC,QACHC,EAAAA,GAGLvxC,EAAQwxC,SAA8C,aAAnCxxC,EAAQyxC,uBACtBC,EAAAA,GAGFlW,EACT,CAoCqBmW,CAAc3xC,GAEjC,IACIjW,EAAG0sB,EAAOrN,GADV,KAAC6F,GAAO,EAAI,QAAE9N,GAAWkiB,GAAU,CAAC,EAGxC,IAAKt5B,EAAI,EAAGA,GAAK0X,IAAQ1X,EACvB0sB,EAAQD,GAAQhc,GAAS2G,EAAUM,EAAO1X,EAAIA,IAAMkf,GAEhDwN,EAAMG,OAGC3H,GACTrK,EAAI22B,OAAO9kB,EAAMxrB,EAAGwrB,EAAMjQ,GAC1ByI,GAAO,GAEPoiC,EAAWzsC,EAAKwE,EAAMqN,EAAOtV,EAASnB,EAAQsxC,SAGhDloC,EAAOqN,GAQT,OALI1Y,IACF0Y,EAAQD,GAAQhc,GAAS2G,EAAUM,EAAO,IAAMwH,GAChDooC,EAAWzsC,EAAKwE,EAAMqN,EAAOtV,EAASnB,EAAQsxC,YAGvCvzC,CACX,CAiBA,SAAS6zC,GAAgBhtC,EAAKyX,EAAMO,EAASyG,GAC3C,MAAM7M,EAAS6F,EAAK7F,QACd,MAACvN,EAAK,MAAEzO,EAAK,KAAEiH,GAAQqvC,GAASt6B,EAAQoG,EAASyG,IACjD,KAACpU,GAAO,EAAI,QAAE9N,GAAWkiB,GAAU,CAAC,EAC1C,IAEIt5B,EAAG0sB,EAAOo7B,EAAOl3B,EAAMJ,EAAMu3B,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAAcvwC,IAAWlH,GAAS2G,EAAUM,EAAOC,EAAQA,IAAUuH,EACrEipC,EAAQ,KACRv3B,IAASJ,IAEX3V,EAAI42B,OAAOuW,EAAMx3B,GACjB3V,EAAI42B,OAAOuW,EAAMp3B,GAGjB/V,EAAI42B,OAAOuW,EAAMD,KASrB,IALI7iC,IACFwH,EAAQD,EAAOy7B,EAAW,IAC1BrtC,EAAI22B,OAAO9kB,EAAMxrB,EAAGwrB,EAAMjQ,IAGvBzc,EAAI,EAAGA,GAAK0X,IAAQ1X,EAAG,CAG1B,GAFA0sB,EAAQD,EAAOy7B,EAAWloD,IAEtB0sB,EAAMG,KAER,SAGF,MAAM3rB,EAAIwrB,EAAMxrB,EACVub,EAAIiQ,EAAMjQ,EACV2rC,EAAa,EAAJlnD,EAEXknD,IAAWN,GAETrrC,EAAImU,EACNA,EAAOnU,EACEA,EAAI+T,IACbA,EAAO/T,GAGTurC,GAAQC,EAASD,EAAO9mD,KAAO+mD,IAE/BE,IAGAttC,EAAI42B,OAAOvwC,EAAGub,GAEdqrC,EAAQM,EACRH,EAAS,EACTr3B,EAAOJ,EAAO/T,GAGhBsrC,EAAQtrC,CACV,CACA0rC,GACF,CAOA,SAASE,GAAkB/1B,GACzB,MAAMnb,EAAOmb,EAAKrc,QACZ+4B,EAAa73B,EAAK63B,YAAc73B,EAAK63B,WAAW5yC,OAEtD,QADqBk2B,EAAKM,YAAeN,EAAKve,OAAUoD,EAAKswC,SAA2C,aAAhCtwC,EAAKuwC,wBAA0CvwC,EAAKowC,SAAYvY,GACnH6Y,GAAkBR,EACzC,CA2CA,MAAMiB,GAA8B,mBAAXC,OAEzB,SAASn3C,GAAKyJ,EAAKyX,EAAM7hB,EAAOyO,GAC1BopC,KAAch2B,EAAKrc,QAAQ4c,QA7BjC,SAA6BhY,EAAKyX,EAAM7hB,EAAOyO,GAC7C,IAAIspC,EAAOl2B,EAAKm2B,MACXD,IACHA,EAAOl2B,EAAKm2B,MAAQ,IAAIF,OACpBj2B,EAAKk2B,KAAKA,EAAM/3C,EAAOyO,IACzBspC,EAAKhD,aAGTmB,GAAS9rC,EAAKyX,EAAKrc,SACnB4E,EAAI62B,OAAO8W,EACb,CAoBIE,CAAoB7tC,EAAKyX,EAAM7hB,EAAOyO,GAlB1C,SAA0BrE,EAAKyX,EAAM7hB,EAAOyO,GAC1C,MAAM,SAACypC,EAAAA,QAAU1yC,GAAWqc,EACtBs2B,EAAgBP,GAAkB/1B,GAExC,IAAK,MAAMO,KAAW81B,EACpBhC,GAAS9rC,EAAK5E,EAAS4c,EAAQjF,OAC/B/S,EAAI02B,YACAqX,EAAc/tC,EAAKyX,EAAMO,EAAS,CAACpiB,QAAO4G,IAAK5G,EAAQyO,EAAQ,KACjErE,EAAI2qC,YAEN3qC,EAAI62B,QAER,CAQImX,CAAiBhuC,EAAKyX,EAAM7hB,EAAOyO,EAEvC,CAEe,MAAM4pC,WAAoBpmB,GAEvC/nB,UAAY,OAKZA,gBAAkB,CAChBksC,eAAgB,OAChB7X,WAAY,GACZE,iBAAkB,EAClBwW,gBAAiB,QACjBv3B,YAAa,EACb46B,iBAAiB,EACjBrB,uBAAwB,UACxBzrC,MAAM,EACNoW,UAAU,EACVk1B,SAAS,EACTE,QAAS,GAMX9sC,qBAAuB,CACrB5d,gBAAiB,kBACjBixB,YAAa,eAIfrT,mBAAqB,CACnB0S,aAAa,EACbC,WAAa3C,GAAkB,eAATA,GAAkC,SAATA,GAIjDld,YAAY0F,GACVkW,QAEA1b,KAAKmlB,UAAW,EAChBnlB,KAAKsI,aAAU3W,EACfqO,KAAKwH,YAAS7V,EACdqO,KAAKoG,WAAQzU,EACbqO,KAAKknB,eAAYv1B,EACjBqO,KAAK86C,WAAQnpD,EACbqO,KAAKq7C,aAAU1pD,EACfqO,KAAKs7C,eAAY3pD,EACjBqO,KAAKilB,YAAa,EAClBjlB,KAAKu7C,gBAAiB,EACtBv7C,KAAKglB,mBAAgBrzB,EAEjB6T,GACFnH,OAAOqB,OAAOM,KAAMwF,EAExB,CAEAqgB,oBAAoBrR,EAAWlF,GAC7B,MAAMhH,EAAUtI,KAAKsI,QACrB,IAAKA,EAAQwxC,SAA8C,aAAnCxxC,EAAQyxC,0BAA2CzxC,EAAQsxC,UAAY55C,KAAKu7C,eAAgB,CAClH,MAAMl1C,EAAOiC,EAAQoc,SAAW1kB,KAAKoG,MAAQpG,KAAKknB,WAClDs0B,EAAAA,EAAAA,IAA2Bx7C,KAAKq7C,QAAS/yC,EAASkM,EAAWnO,EAAMiJ,GACnEtP,KAAKu7C,gBAAiB,EAE1B,CAEIz8B,WAAOA,GACT9e,KAAKq7C,QAAUv8B,SACR9e,KAAKs7C,iBACLt7C,KAAK86C,MACZ96C,KAAKu7C,gBAAiB,CACxB,CAEIz8B,aACF,OAAO9e,KAAKq7C,OACd,CAEIL,eACF,OAAOh7C,KAAKs7C,YAAct7C,KAAKs7C,WAAYG,EAAAA,EAAAA,IAAiBz7C,KAAMA,KAAKsI,QAAQ4c,SACjF,CAMAkR,QACE,MAAM4kB,EAAWh7C,KAAKg7C,SAChBl8B,EAAS9e,KAAK8e,OACpB,OAAOk8B,EAASvsD,QAAUqwB,EAAOk8B,EAAS,GAAGl4C,MAC/C,CAMA4Z,OACE,MAAMs+B,EAAWh7C,KAAKg7C,SAChBl8B,EAAS9e,KAAK8e,OACdvN,EAAQypC,EAASvsD,OACvB,OAAO8iB,GAASuN,EAAOk8B,EAASzpC,EAAQ,GAAG7H,IAC7C,CASA7I,YAAYke,EAAOknB,GACjB,MAAM39B,EAAUtI,KAAKsI,QACfW,EAAQ8V,EAAMknB,GACdnnB,EAAS9e,KAAK8e,OACdk8B,GAAWU,EAAAA,EAAAA,IAAe17C,KAAM,CAACimC,WAAUnjC,MAAOmG,EAAOS,IAAKT,IAEpE,IAAK+xC,EAASvsD,OACZ,OAGF,MAAMwnC,EAAS,GACT0lB,EAvKV,SAAiCrzC,GAC/B,OAAIA,EAAQsxC,QACHgC,EAAAA,GAGLtzC,EAAQwxC,SAA8C,aAAnCxxC,EAAQyxC,uBACtB8B,EAAAA,GAGFC,EAAAA,EACT,CA6JyBC,CAAwBzzC,GAC7C,IAAIjW,EAAG0X,EACP,IAAK1X,EAAI,EAAG0X,EAAOixC,EAASvsD,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CACjD,MAAM,MAACyQ,EAAAA,IAAO4G,GAAOsxC,EAAS3oD,GACxBa,EAAK4rB,EAAOhc,GACZ3P,EAAK2rB,EAAOpV,GAClB,GAAIxW,IAAOC,EAAI,CACb8iC,EAAO3xB,KAAKpR,GACZ,SAEF,MACM8oD,EAAeL,EAAazoD,EAAIC,EAD5BzE,KAAKuqB,KAAKhQ,EAAQ/V,EAAG+yC,KAAc9yC,EAAG8yC,GAAY/yC,EAAG+yC,KAClB39B,EAAQsxC,SACrDoC,EAAa/V,GAAYlnB,EAAMknB,GAC/BhQ,EAAO3xB,KAAK03C,EACd,CACA,OAAyB,IAAlB/lB,EAAOxnC,OAAewnC,EAAO,GAAKA,CAC3C,CAgBAyjB,YAAYxsC,EAAKgY,EAASyG,GAExB,OADsB+uB,GAAkB16C,KACjCi7C,CAAc/tC,EAAKlN,KAAMklB,EAASyG,EAC3C,CASAkvB,KAAK3tC,EAAKpK,EAAOyO,GACf,MAAMypC,EAAWh7C,KAAKg7C,SAChBC,EAAgBP,GAAkB16C,MACxC,IAAIqG,EAAOrG,KAAKoG,MAEhBtD,EAAQA,GAAS,EACjByO,EAAQA,GAAUvR,KAAK8e,OAAOrwB,OAASqU,EAEvC,IAAK,MAAMoiB,KAAW81B,EACpB30C,GAAQ40C,EAAc/tC,EAAKlN,KAAMklB,EAAS,CAACpiB,QAAO4G,IAAK5G,EAAQyO,EAAQ,IAEzE,QAASlL,CACX,CASA5C,KAAKyJ,EAAKsH,EAAW1R,EAAOyO,GAC1B,MAAMjJ,EAAUtI,KAAKsI,SAAW,CAAC,GAClBtI,KAAK8e,QAAU,IAEnBrwB,QAAU6Z,EAAQkY,cAC3BtT,EAAIk2B,OAEJ3/B,GAAKyJ,EAAKlN,KAAM8C,EAAOyO,GAEvBrE,EAAIo2B,WAGFtjC,KAAKmlB,WAEPnlB,KAAKu7C,gBAAiB,EACtBv7C,KAAK86C,WAAQnpD,EAEjB,EC9aF,SAAS83B,GAAQb,EAAkBwC,EAAavf,EAAiBwd,GAC/D,MAAM/gB,EAAUsgB,EAAGtgB,SACZ,CAACuD,GAAO5C,GAAS2f,EAAG4B,SAAS,CAAC3e,GAAOwd,GAE5C,OAAQ36B,KAAKuqB,IAAImS,EAAMniB,GAASX,EAAQuW,OAASvW,EAAQ2zC,SAC3D,CAIe,MAAMC,WAAqBnnB,GAExC/nB,UAAY,QASZA,gBAAkB,CAChBwT,YAAa,EACby7B,UAAW,EACX33B,iBAAkB,EAClB63B,YAAa,EACbn8B,WAAY,SACZnB,OAAQ,EACRU,SAAU,GAMZvS,qBAAuB,CACrB5d,gBAAiB,kBACjBixB,YAAa,eAGfvgB,YAAY0F,GACVkW,QAEA1b,KAAKsI,aAAU3W,EACfqO,KAAKwL,YAAS7Z,EACdqO,KAAKkf,UAAOvtB,EACZqO,KAAK6E,UAAOlT,EAER6T,GACFnH,OAAOqB,OAAOM,KAAMwF,EAExB,CAEAikB,QAAQ2yB,EAAgBC,EAAgBhzB,GACtC,MAAM/gB,EAAUtI,KAAKsI,SACf,EAAC/U,EAAAA,EAAGub,GAAK9O,KAAKwqB,SAAS,CAAC,IAAK,KAAMnB,GACzC,OAAS36B,KAAKyQ,IAAIi9C,EAAS7oD,EAAG,GAAK7E,KAAKyQ,IAAIk9C,EAASvtC,EAAG,GAAMpgB,KAAKyQ,IAAImJ,EAAQ2zC,UAAY3zC,EAAQuW,OAAQ,EAC7G,CAEAy9B,SAASF,EAAgB/yB,GACvB,OAAOI,GAAQzpB,KAAMo8C,EAAQ,IAAK/yB,EACpC,CAEAkzB,SAASF,EAAgBhzB,GACvB,OAAOI,GAAQzpB,KAAMq8C,EAAQ,IAAKhzB,EACpC,CAEAgB,eAAehB,GACb,MAAM,EAAC91B,EAAAA,EAAGub,GAAK9O,KAAKwqB,SAAS,CAAC,IAAK,KAAMnB,GACzC,MAAO,CAAC91B,IAAGub,IACb,CAEA3F,KAAKb,GAEH,IAAIuW,GADJvW,EAAUA,GAAWtI,KAAKsI,SAAW,CAAC,GACjBuW,QAAU,EAC/BA,EAASnwB,KAAKC,IAAIkwB,EAAQA,GAAUvW,EAAQ6zC,aAAe,GAE3D,OAAgC,GAAxBt9B,GADYA,GAAUvW,EAAQkY,aAAe,GAEvD,CAEA/c,KAAKyJ,EAA+BqH,GAClC,MAAMjM,EAAUtI,KAAKsI,QAEjBtI,KAAKkf,MAAQ5W,EAAQuW,OAAS,MAAQ2K,EAAAA,EAAAA,GAAexpB,KAAMuU,EAAMvU,KAAKmJ,KAAKb,GAAW,KAI1F4E,EAAIkT,YAAc9X,EAAQ+X,YAC1BnT,EAAIqT,UAAYjY,EAAQkY,YACxBtT,EAAIiT,UAAY7X,EAAQlZ,iBACxBotD,EAAAA,EAAAA,IAAUtvC,EAAK5E,EAAStI,KAAKzM,EAAGyM,KAAK8O,GACvC,CAEA+Z,WACE,MAAMvgB,EAAUtI,KAAKsI,SAAW,CAAC,EAEjC,OAAOA,EAAQuW,OAASvW,EAAQ2zC,SAClC,EC3FF,SAASQ,GAAaC,EAAKrzB,GACzB,MAAM,EAAC91B,EAAC,EAAEub,EAAC,KAAEsL,EAAAA,MAAMoC,EAAAA,OAAOD,GAAmCmgC,EAAIlyB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWnB,GAEjH,IAAIpV,EAAMF,EAAOD,EAAKE,EAAQ2oC,EAgB9B,OAdID,EAAIviC,YACNwiC,EAAOpgC,EAAS,EAChBtI,EAAOvlB,KAAKiB,IAAI4D,EAAG6mB,GACnBrG,EAAQrlB,KAAKC,IAAI4E,EAAG6mB,GACpBtG,EAAMhF,EAAI6tC,EACV3oC,EAASlF,EAAI6tC,IAEbA,EAAOngC,EAAQ,EACfvI,EAAO1gB,EAAIopD,EACX5oC,EAAQxgB,EAAIopD,EACZ7oC,EAAMplB,KAAKiB,IAAImf,EAAGsL,GAClBpG,EAAStlB,KAAKC,IAAImgB,EAAGsL,IAGhB,CAACnG,OAAMH,MAAKC,QAAOC,SAC5B,CAEA,SAAS4oC,GAAY19B,EAAMjW,EAAOtZ,EAAKhB,GACrC,OAAOuwB,EAAO,GAAI8d,EAAAA,EAAAA,GAAY/zB,EAAOtZ,EAAKhB,EAC5C,CAkCA,SAASkuD,GAAcH,GACrB,MAAMI,EAASL,GAAaC,GACtBlgC,EAAQsgC,EAAO/oC,MAAQ+oC,EAAO7oC,KAC9BsI,EAASugC,EAAO9oC,OAAS8oC,EAAOhpC,IAChC4R,EApCR,SAA0Bg3B,EAAKK,EAAMC,GACnC,MAAM/zC,EAAQyzC,EAAIp0C,QAAQkY,YACpBtB,EAAOw9B,EAAIxiC,cACXu7B,GAAIwH,EAAAA,EAAAA,IAAOh0C,GAEjB,MAAO,CACLnI,EAAG87C,GAAY19B,EAAKpL,IAAK2hC,EAAE3hC,IAAK,EAAGkpC,GACnC1rD,EAAGsrD,GAAY19B,EAAKnL,MAAO0hC,EAAE1hC,MAAO,EAAGgpC,GACvCtsD,EAAGmsD,GAAY19B,EAAKlL,OAAQyhC,EAAEzhC,OAAQ,EAAGgpC,GACzCvtD,EAAGmtD,GAAY19B,EAAKjL,KAAMwhC,EAAExhC,KAAM,EAAG8oC,GAEzC,CAyBiBG,CAAiBR,EAAKlgC,EAAQ,EAAGD,EAAS,GACnDsC,EAxBR,SAA2B69B,EAAKK,EAAMC,GACpC,MAAM,mBAAC1iC,GAAsBoiC,EAAIlyB,SAAS,CAAC,uBACrCvhB,EAAQyzC,EAAIp0C,QAAQotC,aACpBD,GAAI0H,EAAAA,EAAAA,IAAcl0C,GAClBm0C,EAAO1uD,KAAKiB,IAAIotD,EAAMC,GACtB99B,EAAOw9B,EAAIxiC,cAIXmjC,EAAe/iC,IAAsB3S,EAAAA,EAAAA,GAASsB,GAEpD,MAAO,CACLq0C,QAASV,IAAaS,GAAgBn+B,EAAKpL,KAAOoL,EAAKjL,KAAMwhC,EAAE6H,QAAS,EAAGF,GAC3EG,SAAUX,IAAaS,GAAgBn+B,EAAKpL,KAAOoL,EAAKnL,MAAO0hC,EAAE8H,SAAU,EAAGH,GAC9EI,WAAYZ,IAAaS,GAAgBn+B,EAAKlL,QAAUkL,EAAKjL,KAAMwhC,EAAE+H,WAAY,EAAGJ,GACpFK,YAAab,IAAaS,GAAgBn+B,EAAKlL,QAAUkL,EAAKnL,MAAO0hC,EAAEgI,YAAa,EAAGL,GAE3F,CAOiB7H,CAAkBmH,EAAKlgC,EAAQ,EAAGD,EAAS,GAE1D,MAAO,CACLmhC,MAAO,CACLnqD,EAAGupD,EAAO7oC,KACVnF,EAAGguC,EAAOhpC,IACV3hB,EAAGqqB,EACH9sB,EAAG6sB,EACHsC,UAEFm5B,MAAO,CACLzkD,EAAGupD,EAAO7oC,KAAOyR,EAAOj2B,EACxBqf,EAAGguC,EAAOhpC,IAAM4R,EAAO5kB,EACvB3O,EAAGqqB,EAAQkJ,EAAOj2B,EAAIi2B,EAAOp0B,EAC7B5B,EAAG6sB,EAASmJ,EAAO5kB,EAAI4kB,EAAOj1B,EAC9BouB,OAAQ,CACNy+B,QAAS5uD,KAAKC,IAAI,EAAGkwB,EAAOy+B,QAAU5uD,KAAKC,IAAI+2B,EAAO5kB,EAAG4kB,EAAOj2B,IAChE8tD,SAAU7uD,KAAKC,IAAI,EAAGkwB,EAAO0+B,SAAW7uD,KAAKC,IAAI+2B,EAAO5kB,EAAG4kB,EAAOp0B,IAClEksD,WAAY9uD,KAAKC,IAAI,EAAGkwB,EAAO2+B,WAAa9uD,KAAKC,IAAI+2B,EAAOj1B,EAAGi1B,EAAOj2B,IACtEguD,YAAa/uD,KAAKC,IAAI,EAAGkwB,EAAO4+B,YAAc/uD,KAAKC,IAAI+2B,EAAOj1B,EAAGi1B,EAAOp0B,MAIhF,CAEA,SAASm4B,GAAQizB,EAAKnpD,EAAGub,EAAGua,GAC1B,MAAMs0B,EAAc,OAANpqD,EACRqqD,EAAc,OAAN9uC,EAERguC,EAASJ,KADEiB,GAASC,IACSnB,GAAaC,EAAKrzB,GAErD,OAAOyzB,IACHa,IAASjF,EAAAA,EAAAA,IAAWnlD,EAAGupD,EAAO7oC,KAAM6oC,EAAO/oC,UAC3C6pC,IAASlF,EAAAA,EAAAA,IAAW5pC,EAAGguC,EAAOhpC,IAAKgpC,EAAO9oC,QAChD,CAWA,SAAS6pC,GAAkB3wC,EAAK4wC,GAC9B5wC,EAAI4wC,KAAKA,EAAKvqD,EAAGuqD,EAAKhvC,EAAGgvC,EAAK3rD,EAAG2rD,EAAKpuD,EACxC,CAEA,SAASquD,GAAYD,EAAME,EAAQC,EAAU,IAC3C,MAAM1qD,EAAIuqD,EAAKvqD,IAAM0qD,EAAQ1qD,GAAKyqD,EAAS,EACrClvC,EAAIgvC,EAAKhvC,IAAMmvC,EAAQnvC,GAAKkvC,EAAS,EACrC7rD,GAAK2rD,EAAKvqD,EAAIuqD,EAAK3rD,IAAM8rD,EAAQ1qD,EAAI0qD,EAAQ9rD,EAAI6rD,EAAS,GAAKzqD,EAC/D7D,GAAKouD,EAAKhvC,EAAIgvC,EAAKpuD,IAAMuuD,EAAQnvC,EAAImvC,EAAQvuD,EAAIsuD,EAAS,GAAKlvC,EACrE,MAAO,CACLvb,EAAGuqD,EAAKvqD,EAAIA,EACZub,EAAGgvC,EAAKhvC,EAAIA,EACZ3c,EAAG2rD,EAAK3rD,EAAIA,EACZzC,EAAGouD,EAAKpuD,EAAIA,EACZmvB,OAAQi/B,EAAKj/B,OAEjB,CAEe,MAAMq/B,WAAmBnpB,GAEtC/nB,UAAY,MAKZA,gBAAkB,CAChBkN,cAAe,QACfsG,YAAa,EACbk1B,aAAc,EACd76B,cAAe,OACfmF,gBAAYruB,GAMdqb,qBAAuB,CACrB5d,gBAAiB,kBACjBixB,YAAa,eAGfvgB,YAAY0F,GACVkW,QAEA1b,KAAKsI,aAAU3W,EACfqO,KAAKma,gBAAaxoB,EAClBqO,KAAKoa,UAAOzoB,EACZqO,KAAKwc,WAAQ7qB,EACbqO,KAAKuc,YAAS5qB,EACdqO,KAAK6a,mBAAgBlpB,EAEjB6T,GACFnH,OAAOqB,OAAOM,KAAMwF,EAExB,CAEA/B,KAAKyJ,GACH,MAAM,cAAC2N,EAAevS,SAAS,YAAC+X,EAAAA,gBAAajxB,IAAoB4Q,MAC3D,MAACg4C,EAAK,MAAE0F,GAASb,GAAc78C,MAC/Bm+C,GApESt/B,EAoEe6+B,EAAM7+B,QAnExBy+B,SAAWz+B,EAAO0+B,UAAY1+B,EAAO2+B,YAAc3+B,EAAO4+B,YAmExBW,EAAAA,GAAqBP,GApEvE,IAAmBh/B,EAsEf3R,EAAIk2B,OAEAsa,EAAMvrD,IAAM6lD,EAAM7lD,GAAKurD,EAAMhuD,IAAMsoD,EAAMtoD,IAC3Cwd,EAAI02B,YACJua,EAAYjxC,EAAK6wC,GAAYL,EAAO7iC,EAAem9B,IACnD9qC,EAAIkH,OACJ+pC,EAAYjxC,EAAK6wC,GAAY/F,GAAQn9B,EAAe6iC,IACpDxwC,EAAIiT,UAAYE,EAChBnT,EAAIoB,KAAK,YAGXpB,EAAI02B,YACJua,EAAYjxC,EAAK6wC,GAAY/F,EAAOn9B,IACpC3N,EAAIiT,UAAY/wB,EAChB8d,EAAIoB,OAEJpB,EAAIo2B,SACN,CAEA7Z,QAAQ2yB,EAAQC,EAAQhzB,GACtB,OAAOI,GAAQzpB,KAAMo8C,EAAQC,EAAQhzB,EACvC,CAEAizB,SAASF,EAAQ/yB,GACf,OAAOI,GAAQzpB,KAAMo8C,EAAQ,KAAM/yB,EACrC,CAEAkzB,SAASF,EAAQhzB,GACf,OAAOI,GAAQzpB,KAAM,KAAMq8C,EAAQhzB,EACrC,CAEAgB,eAAehB,GACb,MAAM,EAAC91B,EAAAA,EAAGub,EAAAA,KAAGsL,EAAI,WAAED,GAAuCna,KAAKwqB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAenB,GAC1G,MAAO,CACL91B,EAAG4mB,GAAc5mB,EAAI6mB,GAAQ,EAAI7mB,EACjCub,EAAGqL,EAAarL,GAAKA,EAAIsL,GAAQ,EAErC,CAEAyO,SAAShd,GACP,MAAgB,MAATA,EAAe7L,KAAKwc,MAAQ,EAAIxc,KAAKuc,OAAS,CACvD,oGCnNF,MAAM8hC,GAAgB,CACpB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAIIC,GAAoCD,GAAc/vD,KAAIgS,GAASA,EAAM5B,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YAEjH,SAAS6/C,GAAelsD,GACtB,OAAOgsD,GAAchsD,EAAIgsD,GAAc5vD,OACzC,CAEA,SAAS+vD,GAAmBnsD,GAC1B,OAAOisD,GAAkBjsD,EAAIisD,GAAkB7vD,OACjD,CAqBA,SAASgwD,GAAar8C,GACpB,IAAI/P,EAAI,EAER,MAAO,CAACsc,EAAuBrE,KAC7B,MAAMiB,EAAanJ,EAAM2N,eAAezF,GAAciB,WAElDA,aAAsB4T,EACxB9sB,EAnBN,SAAiCsc,EAAuBtc,GAGtD,OAFAsc,EAAQvf,gBAAkBuf,EAAQ1f,KAAKX,KAAI,IAAMiwD,GAAelsD,OAEzDA,CACT,CAeUqsD,CAAwB/vC,EAAStc,GAC5BkZ,aAAsBua,EAC/BzzB,EAfN,SAAkCsc,EAAuBtc,GAGvD,OAFAsc,EAAQvf,gBAAkBuf,EAAQ1f,KAAKX,KAAI,IAAMkwD,GAAmBnsD,OAE7DA,CACT,CAWUssD,CAAyBhwC,EAAStc,GAC7BkZ,IACTlZ,EA9BN,SAAgCsc,EAAuBtc,GAIrD,OAHAsc,EAAQ0R,YAAck+B,GAAelsD,GACrCsc,EAAQvf,gBAAkBovD,GAAmBnsD,KAEpCA,CACX,CAyBUusD,CAAuBjwC,EAAStc,IAG1C,CAEA,SAASwsD,GACPlY,GAEA,IAAI30C,EAEJ,IAAKA,KAAK20C,EACR,GAAIA,EAAY30C,GAAGquB,aAAesmB,EAAY30C,GAAG5C,gBAC/C,OAAO,EAIX,OAAO,CACT,CAQA,OAAe,CACbb,GAAI,SAEJsZ,SAAU,CACRmuB,SAAS,EACT8oB,eAAe,GAGjBzvB,aAAajtB,EAAc28C,EAAOz2C,GAChC,IAAKA,EAAQ0tB,QACX,OAGF,MACE/mC,MAAM,SAACE,GACPmZ,QAAS02C,GACP58C,EAAMmF,QACJ,SAAC+M,GAAY0qC,EAEnB,IAAK12C,EAAQw2C,gBAAkBD,GAA0B1vD,KAxB3D05C,EAwBiGmW,KAtB3EnW,EAAWxoB,aAAewoB,EAAWz5C,kBAsBwDklB,GAAYuqC,GAA0BvqC,IACrJ,OA1BN,IACEu0B,EA4BE,MAAMoW,EAAYR,GAAar8C,GAE/BjT,EAASuT,QAAQu8C,EACnB,GCwCF,SAASC,GAAsBvwC,GAC7B,GAAIA,EAAQsW,WAAY,CACtB,MAAMh2B,EAAO0f,EAAQpB,aACdoB,EAAQsW,kBACRtW,EAAQpB,MACflP,OAAO8gD,eAAexwC,EAAS,OAAQ,CAAC1F,MAAOha,IAEnD,CAEA,SAASmwD,GAAmBh9C,GAC1BA,EAAMnT,KAAKE,SAASuT,SAASiM,IAC3BuwC,GAAsBvwC,EAAAA,GAE1B,CAuBA,OAAe,CACbpgB,GAAI,aAEJsZ,SAAU,CACRw3C,UAAW,UACXrpB,SAAS,GAGXspB,qBAAsB,CAACl9C,EAAOyV,EAAMvP,KAClC,IAAKA,EAAQ0tB,QAGX,YADAopB,GAAmBh9C,GAKrB,MAAMkqB,EAAiBlqB,EAAMoa,MAE7Bpa,EAAMnT,KAAKE,SAASuT,SAAQ,CAACiM,EAASrE,KACpC,MAAM,MAACiD,EAAAA,UAAO+B,GAAaX,EACrBhE,EAAOvI,EAAM2N,eAAezF,GAC5Brb,EAAOse,GAASoB,EAAQ1f,KAE9B,GAAsD,OAAlD2W,EAAAA,EAAAA,GAAQ,CAAC0J,EAAWlN,EAAMkG,QAAQgH,YAEpC,OAGF,IAAK3E,EAAKY,WAAWsC,mBAEnB,OAGF,MAAM0xC,EAAQn9C,EAAMkK,OAAO3B,EAAKqE,SAChC,GAAmB,WAAfuwC,EAAMvwD,MAAoC,SAAfuwD,EAAMvwD,KAEnC,OAGF,GAAIoT,EAAMkG,QAAQ+I,QAEhB,OAGF,IAAI,MAACvO,EAAK,MAAEyO,GAjElB,SAAmD5G,EAAMmU,GACvD,MAAM0gC,EAAa1gC,EAAOrwB,OAE1B,IACI8iB,EADAzO,EAAQ,EAGZ,MAAM,OAAC6I,GAAUhB,GACX,IAAChb,EAAG,IAAEhB,EAAG,WAAEykB,EAAU,WAAEC,GAAc1H,EAAO2H,gBAWlD,OATIF,IACFtQ,GAAQk6B,EAAAA,EAAAA,IAAYrU,EAAAA,EAAAA,GAAa7J,EAAQnT,EAAOE,KAAMlc,GAAKm5B,GAAI,EAAG02B,EAAa,IAG/EjuC,EADE8B,GACM2pB,EAAAA,EAAAA,IAAYrU,EAAAA,EAAAA,GAAa7J,EAAQnT,EAAOE,KAAMld,GAAKo6B,GAAK,EAAGjmB,EAAO08C,GAAc18C,EAEhF08C,EAAa18C,EAGhB,CAACA,QAAOyO,QACjB,CA8C2BkuC,CAA0C90C,EAAM1b,GAErE,GAAIsiB,IADcjJ,EAAQo3C,WAAa,EAAIpzB,GAIzC,YADA4yB,GAAsBvwC,GAuBxB,IAAIgxC,EACJ,QApBI1jC,EAAAA,EAAAA,GAAc1O,KAIhBoB,EAAQpB,MAAQte,SACT0f,EAAQ1f,KACfoP,OAAO8gD,eAAexwC,EAAS,OAAQ,CACrCixC,cAAc,EACdC,YAAY,EACZ77C,IAAK,WACH,OAAOhE,KAAKilB,UACd,EACA/gB,IAAK,SAASvT,GACZqP,KAAKuN,MAAQ5c,CACf,KAMI2X,EAAQ+2C,WAChB,IAAK,OACHM,EAvQR,SAAwB1wD,EAAM6T,EAAOyO,EAAO+a,EAAgBhkB,GAS1D,MAAMw3C,EAAUx3C,EAAQw3C,SAAWxzB,EAEnC,GAAIwzB,GAAWvuC,EACb,OAAOtiB,EAAK6hD,MAAMhuC,EAAOA,EAAQyO,GAGnC,MAAMouC,EAAY,GAEZI,GAAexuC,EAAQ,IAAMuuC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWn9C,EAAQyO,EAAQ,EAEjC,IACIlf,EAAG6tD,EAAcC,EAAS5rC,EAAM6rC,EADhC5vD,EAAIsS,EAKR,IAFA68C,EAAUK,KAAkB/wD,EAAKuB,GAE5B6B,EAAI,EAAGA,EAAIytD,EAAU,EAAGztD,IAAK,CAChC,IAEIkM,EAFA87C,EAAO,EACPgG,EAAO,EAIX,MAAMC,EAAgB5xD,KAAKwX,OAAO7T,EAAI,GAAK0tD,GAAe,EAAIj9C,EACxDy9C,EAAc7xD,KAAKiB,IAAIjB,KAAKwX,OAAO7T,EAAI,GAAK0tD,GAAe,EAAGxuC,GAASzO,EACvE09C,EAAiBD,EAAcD,EAErC,IAAK/hD,EAAI+hD,EAAe/hD,EAAIgiD,EAAahiD,IACvC87C,GAAQprD,EAAKsP,GAAGhL,EAChB8sD,GAAQpxD,EAAKsP,GAAGuQ,EAGlBurC,GAAQmG,EACRH,GAAQG,EAGR,MAAMC,EAAY/xD,KAAKwX,MAAM7T,EAAI0tD,GAAe,EAAIj9C,EAC9C49C,EAAUhyD,KAAKiB,IAAIjB,KAAKwX,OAAO7T,EAAI,GAAK0tD,GAAe,EAAGxuC,GAASzO,GAClEvP,EAAGotD,EAAS7xC,EAAG8xC,GAAW3xD,EAAKuB,GAStC,IAFA2vD,EAAU5rC,GAAQ,EAEbhW,EAAIkiD,EAAWliD,EAAImiD,EAASniD,IAC/BgW,EAAO,GAAM7lB,KAAKuqB,KACf0nC,EAAUtG,IAASprD,EAAKsP,GAAGuQ,EAAI8xC,IAC/BD,EAAU1xD,EAAKsP,GAAGhL,IAAM8sD,EAAOO,IAG9BrsC,EAAO4rC,IACTA,EAAU5rC,EACV2rC,EAAejxD,EAAKsP,GACpB6hD,EAAQ7hD,GAIZohD,EAAUK,KAAkBE,EAC5B1vD,EAAI4vD,CACN,CAKA,OAFAT,EAAUK,KAAkB/wD,EAAKgxD,GAE1BN,CACT,CA0LoBkB,CAAe5xD,EAAM6T,EAAOyO,EAAO+a,EAAgBhkB,GAC/D,MACF,IAAK,UACHq3C,EA3LR,SAA0B1wD,EAAM6T,EAAOyO,EAAO+a,GAC5C,IAEIj6B,EAAG0sB,EAAOxrB,EAAGub,EAAGqrC,EAAO2G,EAAUC,EAAUC,EAAY/9B,EAAMJ,EAF7Dw3B,EAAO,EACPC,EAAS,EAEb,MAAMqF,EAAY,GACZM,EAAWn9C,EAAQyO,EAAQ,EAE3B0vC,EAAOhyD,EAAK6T,GAAOvP,EAEnB2tD,EADOjyD,EAAKgxD,GAAU1sD,EACV0tD,EAElB,IAAK5uD,EAAIyQ,EAAOzQ,EAAIyQ,EAAQyO,IAASlf,EAAG,CACtC0sB,EAAQ9vB,EAAKoD,GACbkB,GAAKwrB,EAAMxrB,EAAI0tD,GAAQC,EAAK50B,EAC5Bxd,EAAIiQ,EAAMjQ,EACV,MAAM2rC,EAAa,EAAJlnD,EAEf,GAAIknD,IAAWN,EAETrrC,EAAImU,GACNA,EAAOnU,EACPgyC,EAAWzuD,GACFyc,EAAI+T,IACbA,EAAO/T,EACPiyC,EAAW1uD,GAIbgoD,GAAQC,EAASD,EAAOt7B,EAAMxrB,KAAO+mD,MAChC,CAEL,MAAM6G,EAAY9uD,EAAI,EAEtB,KAAK4pB,EAAAA,EAAAA,GAAc6kC,MAAc7kC,EAAAA,EAAAA,GAAc8kC,GAAW,CAKxD,MAAMK,EAAqB1yD,KAAKiB,IAAImxD,EAAUC,GACxCM,EAAqB3yD,KAAKC,IAAImyD,EAAUC,GAE1CK,IAAuBJ,GAAcI,IAAuBD,GAC9DxB,EAAUr7C,KAAK,IACVrV,EAAKmyD,GACR7tD,EAAG8mD,IAGHgH,IAAuBL,GAAcK,IAAuBF,GAC9DxB,EAAUr7C,KAAK,IACVrV,EAAKoyD,GACR9tD,EAAG8mD,IAOLhoD,EAAI,GAAK8uD,IAAcH,GAEzBrB,EAAUr7C,KAAKrV,EAAKkyD,IAItBxB,EAAUr7C,KAAKya,GACfo7B,EAAQM,EACRH,EAAS,EACTr3B,EAAOJ,EAAO/T,EACdgyC,EAAWC,EAAWC,EAAa3uD,EAEvC,CAEA,OAAOstD,CACT,CAmHoB2B,CAAiBryD,EAAM6T,EAAOyO,EAAO+a,GACjD,MACF,QACE,MAAM,IAAI5E,MAAM,qCAAqCpf,EAAQ+2C,cAG/D1wC,EAAQsW,WAAa06B,CAAAA,GACvB,EAGFlM,QAAQrxC,GACNg9C,GAAmBh9C,EACrB,GCtOK,SAASm/C,GAAWtb,EAAU7P,EAAO1Z,EAAMrW,GAChD,GAAIA,EACF,OAEF,IAAIvD,EAAQszB,EAAM6P,GACdv8B,EAAMgT,EAAKupB,GAMf,MAJiB,UAAbA,IACFnjC,GAAQ0+C,EAAAA,EAAAA,IAAgB1+C,GACxB4G,GAAM83C,EAAAA,EAAAA,IAAgB93C,IAEjB,CAACu8B,WAAUnjC,QAAO4G,MAC3B,CAqBO,SAAS+3C,GAAgB3+C,EAAO4G,EAAKoV,GAC1C,KAAMpV,EAAM5G,EAAO4G,IAAO,CACxB,MAAMqV,EAAQD,EAAOpV,GACrB,IAAKkT,MAAMmC,EAAMxrB,KAAOqpB,MAAMmC,EAAMjQ,GAClC,KAEJ,CACA,OAAOpF,CACT,CAEA,SAASg4C,GAASlxD,EAAGC,EAAGiV,EAAM/C,GAC5B,OAAInS,GAAKC,EACAkS,EAAGnS,EAAEkV,GAAOjV,EAAEiV,IAEhBlV,EAAIA,EAAEkV,GAAQjV,EAAIA,EAAEiV,GAAQ,CACrC,CCnFO,SAASi8C,GAAoBC,EAAUj9B,GAC5C,IAAI7F,EAAS,GACT1Y,GAAQ,EAUZ,OARI1T,EAAAA,EAAAA,GAAQkvD,IACVx7C,GAAQ,EAER0Y,EAAS8iC,GAET9iC,EDwCG,SAA6B8iC,EAAUj9B,GAC5C,MAAM,EAACpxB,EAAI,KAAI,EAAEub,EAAI,MAAQ8yC,GAAY,CAAC,EACpCC,EAAal9B,EAAK7F,OAClBA,EAAS,GAaf,OAZA6F,EAAKq2B,SAASt4C,SAAQ,EAAEI,QAAO4G,UAC7BA,EAAM+3C,GAAgB3+C,EAAO4G,EAAKm4C,GAClC,MAAMzrB,EAAQyrB,EAAW/+C,GACnB4Z,EAAOmlC,EAAWn4C,GACd,OAANoF,GACFgQ,EAAOxa,KAAK,CAAC/Q,EAAG6iC,EAAM7iC,EAAGub,MACzBgQ,EAAOxa,KAAK,CAAC/Q,EAAGmpB,EAAKnpB,EAAGub,OACT,OAANvb,IACTurB,EAAOxa,KAAK,CAAC/Q,IAAGub,EAAGsnB,EAAMtnB,IACzBgQ,EAAOxa,KAAK,CAAC/Q,IAAGub,EAAG4N,EAAK5N,QAGrBgQ,CACT,CCzDagjC,CAAoBF,EAAUj9B,GAGlC7F,EAAOrwB,OAAS,IAAI0sD,GAAY,CACrCr8B,SACAxW,QAAS,CAACwxC,QAAS,GACnB1zC,QACA8gB,UAAW9gB,IACR,IACP,CAEO,SAAS27C,GAAiB1mB,GAC/B,OAAOA,IAA0B,IAAhBA,EAAO/sB,IAC1B,CC5BO,SAAS0zC,GAAeC,EAASj4C,EAAOk4C,GAE7C,IAAI5zC,EADW2zC,EAAQj4C,GACLsE,KAClB,MAAM6zC,EAAU,CAACn4C,GACjB,IAAIvE,EAEJ,IAAKy8C,EACH,OAAO5zC,EAGT,MAAgB,IAATA,IAA6C,IAA3B6zC,EAAQtlC,QAAQvO,IAAc,CACrD,KAAK9D,EAAAA,EAAAA,GAAS8D,GACZ,OAAOA,EAIT,GADA7I,EAASw8C,EAAQ3zC,IACZ7I,EACH,OAAO,EAGT,GAAIA,EAAO0rC,QACT,OAAO7iC,EAGT6zC,EAAQ79C,KAAKgK,GACbA,EAAO7I,EAAO6I,IAChB,CAEA,OAAO,CACT,CAOO,SAAS8zC,GAAYz9B,EAAM3a,EAAOuH,GAEvC,MAAMjD,EAwER,SAAyBqW,GACvB,MAAMrc,EAAUqc,EAAKrc,QACf+5C,EAAa/5C,EAAQgG,KAC3B,IAAIA,GAAOW,EAAAA,EAAAA,GAAeozC,GAAcA,EAAW58C,OAAQ48C,QAE9C1wD,IAAT2c,IACFA,IAAShG,EAAQlZ,iBAGnB,IAAa,IAATkf,GAA2B,OAATA,EACpB,OAAO,EAGT,IAAa,IAATA,EACF,MAAO,SAET,OAAOA,CACT,CAzFeg0C,CAAgB39B,GAE7B,IAAIhd,EAAAA,EAAAA,GAAS2G,GACX,OAAOsO,MAAMtO,EAAKrF,QAAiBqF,EAGrC,IAAI7I,EAAS88C,WAAWj0C,GAExB,OAAI9D,EAAAA,EAAAA,GAAS/E,IAAW/W,KAAKwX,MAAMT,KAAYA,EAOjD,SAA2B+8C,EAASx4C,EAAOvE,EAAQ8L,GACjC,MAAZixC,GAA+B,MAAZA,IACrB/8C,EAASuE,EAAQvE,GAGnB,GAAIA,IAAWuE,GAASvE,EAAS,GAAKA,GAAU8L,EAC9C,OAAO,EAGT,OAAO9L,CACT,CAhBWg9C,CAAkBn0C,EAAK,GAAItE,EAAOvE,EAAQ8L,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAASsL,QAAQvO,IAAS,GAAKA,CAC5E,CCHA,SAASo0C,GAAe5jC,EAAQ6jC,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAK,IAAItkD,EAAI,EAAGA,EAAIqkD,EAAWn0D,OAAQ8P,IAAK,CAC1C,MAAMomB,EAAOi+B,EAAWrkD,IAClB,MAAC63B,EAAK,KAAE1Z,EAAI,MAAEqC,GAAS+jC,GAAUn+B,EAAMg+B,EAAa,KAE1D,MAAK5jC,GAAUqX,GAAS1Z,GAGxB,GAAI0Z,EAGFysB,EAAUE,QAAQhkC,QAGlB,GADAD,EAAOxa,KAAKya,IACPrC,EAEH,KAGN,CACAoC,EAAOxa,QAAQu+C,EACjB,CAQA,SAASC,GAAUn+B,EAAMg+B,EAAa1c,GACpC,MAAMlnB,EAAQ4F,EAAK9jB,YAAY8hD,EAAa1c,GAC5C,IAAKlnB,EACH,MAAO,CAAC,EAGV,MAAMikC,EAAajkC,EAAMknB,GACnB+U,EAAWr2B,EAAKq2B,SAChB6G,EAAal9B,EAAK7F,OACxB,IAAIsX,GAAQ,EACR1Z,GAAO,EACX,IAAK,IAAIrqB,EAAI,EAAGA,EAAI2oD,EAASvsD,OAAQ4D,IAAK,CACxC,MAAM6yB,EAAU81B,EAAS3oD,GACnB4wD,EAAapB,EAAW38B,EAAQpiB,OAAOmjC,GACvCid,EAAYrB,EAAW38B,EAAQxb,KAAKu8B,GAC1C,IAAIyS,EAAAA,EAAAA,IAAWsK,EAAYC,EAAYC,GAAY,CACjD9sB,EAAQ4sB,IAAeC,EACvBvmC,EAAOsmC,IAAeE,EACtB,MAEJ,CACA,MAAO,CAAC9sB,QAAO1Z,OAAMqC,QACvB,CC1GO,MAAMokC,GACXrjD,YAAY0J,GACVxJ,KAAKzM,EAAIiW,EAAKjW,EACdyM,KAAK8O,EAAItF,EAAKsF,EACd9O,KAAK6e,OAASrV,EAAKqV,MACrB,CAEA66B,YAAYxsC,EAAK4vC,EAAQtzC,GACvB,MAAM,EAACjW,EAAAA,EAAGub,EAAAA,OAAG+P,GAAU7e,KAGvB,OAFA88C,EAASA,GAAU,CAACh6C,MAAO,EAAG4G,IAAK2X,EAAAA,GACnCnU,EAAI+W,IAAI1wB,EAAGub,EAAG+P,EAAQi+B,EAAOpzC,IAAKozC,EAAOh6C,OAAO,IACxC0G,EAAKszC,MACf,CAEAj8C,YAAYke,GACV,MAAM,EAACxrB,EAAAA,EAAGub,EAAAA,OAAG+P,GAAU7e,KACjByiB,EAAQ1D,EAAM0D,MACpB,MAAO,CACLlvB,EAAGA,EAAI7E,KAAKyzB,IAAIM,GAAS5D,EACzB/P,EAAGA,EAAIpgB,KAAK2zB,IAAII,GAAS5D,EACzB4D,QAEJ,ECbK,SAAS2gC,GAAW/nB,GACzB,MAAM,MAACj5B,EAAK,KAAEkM,EAAAA,KAAMqW,GAAQ0W,EAE5B,IAAI7wB,EAAAA,EAAAA,GAAS8D,GACX,OAwBJ,SAAwBlM,EAAO4H,GAC7B,MAAMW,EAAOvI,EAAM2N,eAAe/F,GAC5BmnC,EAAUxmC,GAAQvI,EAAMkf,iBAAiBtX,GAC/C,OAAOmnC,EAAUxmC,EAAKgE,QAAU,IAClC,CA5BW00C,CAAejhD,EAAOkM,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyB+sB,GAC9B,MAAM,MAAC/xB,EAAK,MAAEU,EAAAA,KAAO2a,GAAQ0W,EACvBvc,EAAS,GACTk8B,EAAWr2B,EAAKq2B,SAChBsI,EAAe3+B,EAAK7F,OACpB8jC,EAiBR,SAAuBt5C,EAAOU,GAC5B,MAAMu5C,EAAQ,GACR5pB,EAAQrwB,EAAM+B,wBAAwB,QAE5C,IAAK,IAAIhZ,EAAI,EAAGA,EAAIsnC,EAAMlrC,OAAQ4D,IAAK,CACrC,MAAMsY,EAAOgvB,EAAMtnC,GACnB,GAAIsY,EAAKX,QAAUA,EACjB,MAEGW,EAAKkI,QACR0wC,EAAMR,QAAQp4C,EAAKgE,QAEvB,CACA,OAAO40C,CACT,CA/BqBC,CAAcl6C,EAAOU,GACxC44C,EAAWt+C,KAAKq9C,GAAoB,CAACpuD,EAAG,KAAMub,EAAGxF,EAAM0K,QAAS2Q,IAEhE,IAAK,IAAItyB,EAAI,EAAGA,EAAI2oD,EAASvsD,OAAQ4D,IAAK,CACxC,MAAM6yB,EAAU81B,EAAS3oD,GACzB,IAAK,IAAIkM,EAAI2mB,EAAQpiB,MAAOvE,GAAK2mB,EAAQxb,IAAKnL,IAC5CmkD,GAAe5jC,EAAQwkC,EAAa/kD,GAAIqkD,EAE5C,CACA,OAAO,IAAIzH,GAAY,CAACr8B,SAAQxW,QAAS,CAAC,GAC5C,CETWm7C,CAAgBpoB,GAGzB,GAAa,UAAT/sB,EACF,OAAO,EAGT,MAAMszC,EAmBR,SAAyBvmB,GACvB,MAAM/xB,EAAQ+xB,EAAO/xB,OAAS,CAAC,EAE/B,GAAIA,EAAM8d,yBACR,OAsBJ,SAAiCiU,GAC/B,MAAM,MAAC/xB,EAAAA,KAAOgF,GAAQ+sB,EAChB/yB,EAAUgB,EAAMhB,QAChB7Z,EAAS6a,EAAMyI,YAAYtjB,OAC3BqU,EAAQwF,EAAQmB,QAAUH,EAAM3a,IAAM2a,EAAM3Z,IAC5CsZ,EHuBD,SAAyBqF,EAAMhF,EAAOiQ,GAC3C,IAAItQ,EAYJ,OATEA,EADW,UAATqF,EACMiL,EACU,QAATjL,EACDhF,EAAMhB,QAAQmB,QAAUH,EAAM3Z,IAAM2Z,EAAM3a,KACzCgZ,EAAAA,EAAAA,GAAS2G,GAEVA,EAAKrF,MAELK,EAAMm2B,eAETx2B,CACT,CGrCgBy6C,CAAgBp1C,EAAMhF,EAAOxG,GACrC2C,EAAS,GAEf,GAAI6C,EAAQ+S,KAAK4K,SAAU,CACzB,MAAM3J,EAAShT,EAAM8d,yBAAyB,EAAGtkB,GACjD,OAAO,IAAIqgD,GAAU,CACnB5vD,EAAG+oB,EAAO/oB,EACVub,EAAGwN,EAAOxN,EACV+P,OAAQvV,EAAMyd,8BAA8B9d,KAIhD,IAAK,IAAI5W,EAAI,EAAGA,EAAI5D,IAAU4D,EAC5BoT,EAAOnB,KAAKgF,EAAM8d,yBAAyB/0B,EAAG4W,IAEhD,OAAOxD,CACT,CA3CWk+C,CAAwBtoB,GAEjC,OAIF,SAA+BA,GAC7B,MAAM,MAAC/xB,EAAQ,QAAIgF,GAAQ+sB,EACrB+D,EHqBD,SAAyB9wB,EAAMhF,GACpC,IAAI81B,EAAQ,KAWZ,MAVa,UAAT9wB,EACF8wB,EAAQ91B,EAAM0K,OACI,QAAT1F,EACT8wB,EAAQ91B,EAAMwK,KACLnM,EAAAA,EAAAA,GAAS2G,GAElB8wB,EAAQ91B,EAAM4P,iBAAiB5K,EAAKrF,OAC3BK,EAAMsS,eACfwjB,EAAQ91B,EAAMsS,gBAETwjB,CACT,CGlCgBwkB,CAAgBt1C,EAAMhF,GAEpC,IAAIkB,EAAAA,EAAAA,GAAS40B,GAAQ,CACnB,MAAMjlB,EAAa7Q,EAAMuS,eAEzB,MAAO,CACLtoB,EAAG4mB,EAAailB,EAAQ,KACxBtwB,EAAGqL,EAAa,KAAOilB,GAI3B,OAAO,IACT,CAlBSykB,CAAsBxoB,EAC/B,CA1BmByoB,CAAgBzoB,GAEjC,OAAIumB,aAAoBuB,GACfvB,EAGFD,GAAoBC,EAAUj9B,EACvC,CC9BO,SAASo/B,GAAU72C,EAAKmuB,EAAQ9mB,GACrC,MAAM9O,EAAS29C,GAAW/nB,IACpB,KAAC1W,EAAI,MAAErb,EAAAA,KAAOuC,GAAQwvB,EACtB2oB,EAAWr/B,EAAKrc,QAChB+5C,EAAa2B,EAAS11C,KACtBhO,EAAQ0jD,EAAS50D,iBACjB,MAAC60D,EAAQ3jD,EAAK,MAAEijD,EAAQjjD,GAAS+hD,GAAc,CAAC,EAClD58C,GAAUkf,EAAK7F,OAAOrwB,UACxB21C,EAAAA,EAAAA,GAASl3B,EAAKqH,GAMlB,SAAgBrH,EAAK1H,GACnB,MAAM,KAACmf,EAAAA,OAAMlf,EAAAA,MAAQw+C,EAAAA,MAAOV,EAAAA,KAAOhvC,EAAAA,MAAMjL,GAAS9D,EAC5CygC,EAAWthB,EAAKve,MAAQ,QAAUZ,EAAIqG,KAE5CqB,EAAIk2B,OAEa,MAAb6C,GAAoBsd,IAAUU,IAChCC,GAAah3C,EAAKzH,EAAQ8O,EAAKT,KAC/BxF,GAAKpB,EAAK,CAACyX,OAAMlf,SAAQnF,MAAO2jD,EAAO36C,QAAO28B,aAC9C/4B,EAAIo2B,UACJp2B,EAAIk2B,OACJ8gB,GAAah3C,EAAKzH,EAAQ8O,EAAKP,SAEjC1F,GAAKpB,EAAK,CAACyX,OAAMlf,SAAQnF,MAAOijD,EAAOj6C,QAAO28B,aAE9C/4B,EAAIo2B,SACN,CArBI6gB,CAAOj3C,EAAK,CAACyX,OAAMlf,SAAQw+C,QAAOV,QAAOhvC,OAAMjL,QAAOuC,UACtD04B,EAAAA,EAAAA,GAAWr3B,GAEf,CAoBA,SAASg3C,GAAah3C,EAAKzH,EAAQ2+C,GACjC,MAAM,SAACpJ,EAAAA,OAAUl8B,GAAUrZ,EAC3B,IAAI2wB,GAAQ,EACRiuB,GAAW,EAEfn3C,EAAI02B,YACJ,IAAK,MAAM1e,KAAW81B,EAAU,CAC9B,MAAM,MAACl4C,EAAAA,IAAO4G,GAAOwb,EACfS,EAAa7G,EAAOhc,GACpB8iB,EAAY9G,EAAO2iC,GAAgB3+C,EAAO4G,EAAKoV,IACjDsX,GACFlpB,EAAI22B,OAAOle,EAAWpyB,EAAGoyB,EAAW7W,GACpCsnB,GAAQ,IAERlpB,EAAI42B,OAAOne,EAAWpyB,EAAG6wD,GACzBl3C,EAAI42B,OAAOne,EAAWpyB,EAAGoyB,EAAW7W,IAEtCu1C,IAAa5+C,EAAOi0C,YAAYxsC,EAAKgY,EAAS,CAAC3N,KAAM8sC,IACjDA,EACFn3C,EAAI2qC,YAEJ3qC,EAAI42B,OAAOle,EAAUryB,EAAG6wD,EAE5B,CAEAl3C,EAAI42B,OAAOr+B,EAAO2wB,QAAQ7iC,EAAG6wD,GAC7Bl3C,EAAI2qC,YACJ3qC,EAAIkH,MACN,CAEA,SAAS9F,GAAKpB,EAAK1H,GACjB,MAAM,KAACmf,EAAI,OAAElf,EAAM,SAAEwgC,EAAQ,MAAE3lC,EAAK,MAAEgJ,GAAS9D,EACzCw1C,ENlED,SAAmBr2B,EAAMlf,EAAQwgC,GACtC,MAAM+U,EAAWr2B,EAAKq2B,SAChBl8B,EAAS6F,EAAK7F,OACdwlC,EAAU7+C,EAAOqZ,OACjBynB,EAAQ,GAEd,IAAK,MAAMrhB,KAAW81B,EAAU,CAC9B,IAAI,MAACl4C,EAAAA,IAAO4G,GAAOwb,EACnBxb,EAAM+3C,GAAgB3+C,EAAO4G,EAAKoV,GAElC,MAAMg+B,EAASyE,GAAWtb,EAAUnnB,EAAOhc,GAAQgc,EAAOpV,GAAMwb,EAAQ7e,MAExE,IAAKZ,EAAOu1C,SAAU,CAGpBzU,EAAMjiC,KAAK,CACT+2B,OAAQnW,EACRzf,OAAQq3C,EACRh6C,MAAOgc,EAAOhc,GACd4G,IAAKoV,EAAOpV,KAEd,SAIF,MAAM66C,GAAiB7I,EAAAA,EAAAA,IAAej2C,EAAQq3C,GAE9C,IAAK,MAAM0H,KAAOD,EAAgB,CAChC,MAAME,EAAYlD,GAAWtb,EAAUqe,EAAQE,EAAI1hD,OAAQwhD,EAAQE,EAAI96C,KAAM86C,EAAIn+C,MAC3Eq+C,GAAcC,EAAAA,EAAAA,IAAcz/B,EAASpG,EAAQ2lC,GAEnD,IAAK,MAAMG,KAAcF,EACvBne,EAAMjiC,KAAK,CACT+2B,OAAQupB,EACRn/C,OAAQ++C,EACR1hD,MAAO,CACL,CAACmjC,GAAWyb,GAAS5E,EAAQ2H,EAAW,QAAS/1D,KAAKC,MAExD+a,IAAK,CACH,CAACu8B,GAAWyb,GAAS5E,EAAQ2H,EAAW,MAAO/1D,KAAKiB,OAI5D,CACF,CACA,OAAO42C,CACT,CMoBmB+U,CAAU32B,EAAMlf,EAAQwgC,GAEzC,IAAK,MAAO5K,OAAQwpB,EAAKp/C,OAAQ++C,EAAG,MAAE1hD,EAAK,IAAE4G,KAAQsxC,EAAU,CAC7D,MAAO/6B,OAAO,gBAAC7wB,EAAkBkR,GAAS,CAAC,GAAKukD,EAC1CC,GAAsB,IAAXr/C,EAEjByH,EAAIk2B,OACJl2B,EAAIiT,UAAY/wB,EAEhB21D,GAAW73C,EAAK5D,EAAOw7C,GAAYvD,GAAWtb,EAAUnjC,EAAO4G,IAE/DwD,EAAI02B,YAEJ,MAAMygB,IAAa1/B,EAAK+0B,YAAYxsC,EAAK23C,GAEzC,IAAIx+C,EACJ,GAAIy+C,EAAU,CACRT,EACFn3C,EAAI2qC,YAEJmN,GAAmB93C,EAAKzH,EAAQiE,EAAKu8B,GAGvC,MAAMgf,IAAex/C,EAAOi0C,YAAYxsC,EAAKs3C,EAAK,CAACjtC,KAAM8sC,EAAU56C,SAAS,IAC5EpD,EAAOg+C,GAAYY,EACd5+C,GACH2+C,GAAmB93C,EAAKzH,EAAQ3C,EAAOmjC,GAI3C/4B,EAAI2qC,YACJ3qC,EAAIoB,KAAKjI,EAAO,UAAY,WAE5B6G,EAAIo2B,SACN,CACF,CAEA,SAASyhB,GAAW73C,EAAK5D,EAAOwzC,GAC9B,MAAM,IAAChpC,EAAAA,OAAKE,GAAU1K,EAAMlH,MAAMoS,WAC5B,SAACyxB,EAAAA,MAAUnjC,EAAAA,IAAO4G,GAAOozC,GAAU,CAAC,EACzB,MAAb7W,IACF/4B,EAAI02B,YACJ12B,EAAI4wC,KAAKh7C,EAAOgR,EAAKpK,EAAM5G,EAAOkR,EAASF,GAC3C5G,EAAIkH,OAER,CAEA,SAAS4wC,GAAmB93C,EAAKzH,EAAQsZ,EAAOknB,GAC9C,MAAMif,EAAoBz/C,EAAO5E,YAAYke,EAAOknB,GAChDif,GACFh4C,EAAI42B,OAAOohB,EAAkB3xD,EAAG2xD,EAAkBp2C,EAEtD,CC7GA,OAAe,CACbvgB,GAAI,SAEJ42D,oBAAoB/iD,EAAO28C,EAAOz2C,GAChC,MAAMiJ,GAASnP,EAAMnT,KAAKE,UAAY,IAAIV,OACpCwzD,EAAU,GAChB,IAAIt3C,EAAMtY,EAAGsyB,EAAM0W,EAEnB,IAAKhpC,EAAI,EAAGA,EAAIkf,IAASlf,EACvBsY,EAAOvI,EAAM2N,eAAe1d,GAC5BsyB,EAAOha,EAAKgE,QACZ0sB,EAAS,KAEL1W,GAAQA,EAAKrc,SAAWqc,aAAgBw2B,KAC1C9f,EAAS,CACP8V,QAAS/uC,EAAMkf,iBAAiBjvB,GAChC2X,MAAO3X,EACPic,KAAM8zC,GAAYz9B,EAAMtyB,EAAGkf,GAC3BnP,QACAyJ,KAAMlB,EAAKY,WAAWjD,QAAQgH,UAC9BhG,MAAOqB,EAAKQ,OACZwZ,SAIJha,EAAKy6C,QAAU/pB,EACf4mB,EAAQ39C,KAAK+2B,GAGf,IAAKhpC,EAAI,EAAGA,EAAIkf,IAASlf,EACvBgpC,EAAS4mB,EAAQ5vD,GACZgpC,IAA0B,IAAhBA,EAAO/sB,OAItB+sB,EAAO/sB,KAAO0zC,GAAeC,EAAS5vD,EAAGiW,EAAQ45C,WAErD,EAEAmD,WAAWjjD,EAAO28C,EAAOz2C,GACvB,MAAM7E,EAA4B,eAArB6E,EAAQg9C,SACfz7C,EAAWzH,EAAM+mB,+BACjB5U,EAAOnS,EAAMoS,UACnB,IAAK,IAAIniB,EAAIwX,EAASpb,OAAS,EAAG4D,GAAK,IAAKA,EAAG,CAC7C,MAAMgpC,EAASxxB,EAASxX,GAAG+yD,QACtB/pB,IAILA,EAAO1W,KAAKkB,oBAAoBtR,EAAM8mB,EAAOxvB,MACzCpI,GAAQ43B,EAAO/sB,MACjBy1C,GAAU3hD,EAAM8K,IAAKmuB,EAAQ9mB,GAEjC,CACF,EAEAgxC,mBAAmBnjD,EAAO28C,EAAOz2C,GAC/B,GAAyB,uBAArBA,EAAQg9C,SACV,OAGF,MAAMz7C,EAAWzH,EAAM+mB,+BACvB,IAAK,IAAI92B,EAAIwX,EAASpb,OAAS,EAAG4D,GAAK,IAAKA,EAAG,CAC7C,MAAMgpC,EAASxxB,EAASxX,GAAG+yD,QAEvBrD,GAAiB1mB,IACnB0oB,GAAU3hD,EAAM8K,IAAKmuB,EAAQj5B,EAAMoS,UAEvC,CACF,EAEAgxC,kBAAkBpjD,EAAOyV,EAAMvP,GAC7B,MAAM+yB,EAASxjB,EAAKlN,KAAKy6C,QAEpBrD,GAAiB1mB,IAAgC,sBAArB/yB,EAAQg9C,UAIzCvB,GAAU3hD,EAAM8K,IAAKmuB,EAAQj5B,EAAMoS,UACrC,EAEA3M,SAAU,CACRq6C,WAAW,EACXoD,SAAU,sBCvEd,MAAMG,GAAa,CAACC,EAAWxgB,KAC7B,IAAI,UAACygB,EAAYzgB,EAAAA,SAAU0gB,EAAW1gB,GAAYwgB,EAOlD,OALIA,EAAUG,gBACZF,EAAYj3D,KAAKiB,IAAIg2D,EAAWzgB,GAChC0gB,EAAWF,EAAUI,iBAAmBp3D,KAAKiB,IAAIi2D,EAAU1gB,IAGtD,CACL0gB,WACAD,YACAI,WAAYr3D,KAAKC,IAAIu2C,EAAUygB,GACjC,EAKK,MAAMK,WAAejxB,GAK1Bj1B,YAAYyH,GACVmU,QAEA1b,KAAKimD,QAAS,EAGdjmD,KAAKkmD,eAAiB,GAKtBlmD,KAAKmmD,aAAe,KAGpBnmD,KAAKomD,cAAe,EAEpBpmD,KAAKoC,MAAQmF,EAAOnF,MACpBpC,KAAKsI,QAAUf,EAAOe,QACtBtI,KAAKkN,IAAM3F,EAAO2F,IAClBlN,KAAKqmD,iBAAc10D,EACnBqO,KAAKsmD,iBAAc30D,EACnBqO,KAAKumD,gBAAa50D,EAClBqO,KAAKojB,eAAYzxB,EACjBqO,KAAKmjB,cAAWxxB,EAChBqO,KAAK8T,SAAMniB,EACXqO,KAAKgU,YAASriB,EACdqO,KAAKiU,UAAOtiB,EACZqO,KAAK+T,WAAQpiB,EACbqO,KAAKuc,YAAS5qB,EACdqO,KAAKwc,WAAQ7qB,EACbqO,KAAKq4B,cAAW1mC,EAChBqO,KAAKipB,cAAWt3B,EAChBqO,KAAKO,YAAS5O,EACdqO,KAAKqsB,cAAW16B,CAClB,CAEAiV,OAAOuc,EAAUC,EAAW+W,GAC1Bn6B,KAAKmjB,SAAWA,EAChBnjB,KAAKojB,UAAYA,EACjBpjB,KAAKq4B,SAAW8B,EAEhBn6B,KAAKu6B,gBACLv6B,KAAKwmD,cACLxmD,KAAKw7B,KACP,CAEAjB,gBACMv6B,KAAK6b,gBACP7b,KAAKwc,MAAQxc,KAAKmjB,SAClBnjB,KAAKiU,KAAOjU,KAAKq4B,SAASpkB,KAC1BjU,KAAK+T,MAAQ/T,KAAKwc,QAElBxc,KAAKuc,OAASvc,KAAKojB,UACnBpjB,KAAK8T,IAAM9T,KAAKq4B,SAASvkB,IACzB9T,KAAKgU,OAAShU,KAAKuc,OAEvB,CAEAiqC,cACE,MAAMd,EAAY1lD,KAAKsI,QAAQpZ,QAAU,CAAC,EAC1C,IAAIm3D,GAAcnsB,EAAAA,EAAAA,GAAKwrB,EAAU3lC,eAAgB,CAAC/f,KAAKoC,OAAQpC,OAAS,GAEpE0lD,EAAUn5C,SACZ85C,EAAcA,EAAY95C,QAAQ/I,GAASkiD,EAAUn5C,OAAO/I,EAAMxD,KAAKoC,MAAMnT,SAG3Ey2D,EAAU9sC,OACZytC,EAAcA,EAAYztC,MAAK,CAACpoB,EAAGC,IAAMi1D,EAAU9sC,KAAKpoB,EAAGC,EAAGuP,KAAKoC,MAAMnT,SAGvE+Q,KAAKsI,QAAQmB,SACf48C,EAAY58C,UAGdzJ,KAAKqmD,YAAcA,CACrB,CAEA7qB,MACE,MAAM,QAAClzB,EAAO,IAAE4E,GAAOlN,KAMvB,IAAKsI,EAAQ0d,QAEX,YADAhmB,KAAKwc,MAAQxc,KAAKuc,OAAS,GAI7B,MAAMmpC,EAAYp9C,EAAQpZ,OACpBu3D,GAAY3uB,EAAAA,EAAAA,IAAO4tB,EAAU7tB,MAC7BqN,EAAWuhB,EAAUt9C,KACrBk0B,EAAcr9B,KAAK0mD,uBACnB,SAACd,EAAQ,WAAEG,GAAcN,GAAWC,EAAWxgB,GAErD,IAAI1oB,EAAOD,EAEXrP,EAAI2qB,KAAO4uB,EAAU5nB,OAEjB7+B,KAAK6b,gBACPW,EAAQxc,KAAKmjB,SACb5G,EAASvc,KAAK2mD,SAAStpB,EAAa6H,EAAU0gB,EAAUG,GAAc,KAEtExpC,EAASvc,KAAKojB,UACd5G,EAAQxc,KAAK4mD,SAASvpB,EAAaopB,EAAWb,EAAUG,GAAc,IAGxE/lD,KAAKwc,MAAQ9tB,KAAKiB,IAAI6sB,EAAOlU,EAAQ6a,UAAYnjB,KAAKmjB,UACtDnjB,KAAKuc,OAAS7tB,KAAKiB,IAAI4sB,EAAQjU,EAAQ8a,WAAapjB,KAAKojB,UAC3D,CAKAujC,SAAStpB,EAAa6H,EAAU0gB,EAAUG,GACxC,MAAM,IAAC74C,EAAG,SAAEiW,EAAU7a,SAAUpZ,QAAQ,QAACg/B,KAAaluB,KAChD6mD,EAAW7mD,KAAKkmD,eAAiB,GAEjCK,EAAavmD,KAAKumD,WAAa,CAAC,GAChCxuB,EAAaguB,EAAa73B,EAChC,IAAI44B,EAAczpB,EAElBnwB,EAAI60B,UAAY,OAChB70B,EAAIg1B,aAAe,SAEnB,IAAI6kB,GAAO,EACPjzC,GAAOikB,EAgBX,OAfA/3B,KAAKqmD,YAAY3jD,SAAQ,CAACge,EAAYruB,KACpC,MAAM20D,EAAYpB,EAAY1gB,EAAW,EAAKh4B,EAAI+5C,YAAYvmC,EAAWR,MAAM1D,OAErE,IAANnqB,GAAWk0D,EAAWA,EAAW93D,OAAS,GAAKu4D,EAAY,EAAI94B,EAAU/K,KAC3E2jC,GAAe/uB,EACfwuB,EAAWA,EAAW93D,QAAU4D,EAAI,EAAI,EAAI,IAAM,EAClDyhB,GAAOikB,EACPgvB,KAGFF,EAASx0D,GAAK,CAAC4hB,KAAM,EAAGH,MAAKizC,MAAKvqC,MAAOwqC,EAAWzqC,OAAQwpC,GAE5DQ,EAAWA,EAAW93D,OAAS,IAAMu4D,EAAY94B,CAAAA,IAG5C44B,CACT,CAEAF,SAASvpB,EAAaopB,EAAWb,EAAUsB,GACzC,MAAM,IAACh6C,EAAG,UAAEkW,EAAW9a,SAAUpZ,QAAQ,QAACg/B,KAAaluB,KACjD6mD,EAAW7mD,KAAKkmD,eAAiB,GACjCI,EAActmD,KAAKsmD,YAAc,GACjCa,EAAc/jC,EAAYia,EAEhC,IAAI+pB,EAAal5B,EACbm5B,EAAkB,EAClBC,EAAmB,EAEnBrzC,EAAO,EACPszC,EAAM,EAyBV,OAvBAvnD,KAAKqmD,YAAY3jD,SAAQ,CAACge,EAAYruB,KACpC,MAAM,UAAC20D,EAAS,WAAEjB,GA8VxB,SAA2BH,EAAUa,EAAWv5C,EAAKwT,EAAYwmC,GAC/D,MAAMF,EAKR,SAA4BtmC,EAAYklC,EAAUa,EAAWv5C,GAC3D,IAAIs6C,EAAiB9mC,EAAWR,KAC5BsnC,GAA4C,iBAAnBA,IAC3BA,EAAiBA,EAAe/iD,QAAO,CAACjU,EAAGC,IAAMD,EAAE/B,OAASgC,EAAEhC,OAAS+B,EAAIC,KAE7E,OAAOm1D,EAAYa,EAAUt9C,KAAO,EAAK+D,EAAI+5C,YAAYO,GAAgBhrC,KAC3E,CAXoBirC,CAAmB/mC,EAAYklC,EAAUa,EAAWv5C,GAChE64C,EAYR,SAA6BmB,EAAaxmC,EAAYgnC,GACpD,IAAI3B,EAAamB,EACc,iBAApBxmC,EAAWR,OACpB6lC,EAAa4B,GAA0BjnC,EAAYgnC,IAErD,OAAO3B,CACT,CAlBqB6B,CAAoBV,EAAaxmC,EAAY+lC,EAAU1uB,YAC1E,MAAO,CAACivB,YAAWjB,aACrB,CAlWsC8B,CAAkBjC,EAAUa,EAAWv5C,EAAKwT,EAAYwmC,GAGpF70D,EAAI,GAAKi1D,EAAmBvB,EAAa,EAAI73B,EAAUi5B,IACzDC,GAAcC,EAAkBn5B,EAChCo4B,EAAYhiD,KAAK,CAACkY,MAAO6qC,EAAiB9qC,OAAQ+qC,IAClDrzC,GAAQozC,EAAkBn5B,EAC1Bq5B,IACAF,EAAkBC,EAAmB,GAIvCT,EAASx0D,GAAK,CAAC4hB,OAAMH,IAAKwzC,EAAkBC,MAAK/qC,MAAOwqC,EAAWzqC,OAAQwpC,GAG3EsB,EAAkB34D,KAAKC,IAAI04D,EAAiBL,GAC5CM,GAAoBvB,EAAa73B,CAAAA,IAGnCk5B,GAAcC,EACdf,EAAYhiD,KAAK,CAACkY,MAAO6qC,EAAiB9qC,OAAQ+qC,IAE3CF,CACT,CAEAU,iBACE,IAAK9nD,KAAKsI,QAAQ0d,QAChB,OAEF,MAAMqX,EAAcr9B,KAAK0mD,uBAClBR,eAAgBW,EAAUv+C,SAAS,MAAC2vB,EAAO/oC,QAAQ,QAACg/B,GAAQ,IAAE65B,IAAQ/nD,KACvEgoD,GAAYC,EAAAA,EAAAA,IAAcF,EAAK/nD,KAAKiU,KAAMjU,KAAKwc,OACrD,GAAIxc,KAAK6b,eAAgB,CACvB,IAAIkrC,EAAM,EACN9yC,GAAO0wB,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAKiU,KAAOia,EAASluB,KAAK+T,MAAQ/T,KAAKumD,WAAWQ,IACnF,IAAK,MAAMmB,KAAUrB,EACfE,IAAQmB,EAAOnB,MACjBA,EAAMmB,EAAOnB,IACb9yC,GAAO0wB,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAKiU,KAAOia,EAASluB,KAAK+T,MAAQ/T,KAAKumD,WAAWQ,KAEjFmB,EAAOp0C,KAAO9T,KAAK8T,IAAMupB,EAAcnP,EACvCg6B,EAAOj0C,KAAO+zC,EAAUG,WAAWH,EAAUz0D,EAAE0gB,GAAOi0C,EAAO1rC,OAC7DvI,GAAQi0C,EAAO1rC,MAAQ0R,MAEpB,CACL,IAAIq5B,EAAM,EACNzzC,GAAM6wB,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAK8T,IAAMupB,EAAcnP,EAASluB,KAAKgU,OAAShU,KAAKsmD,YAAYiB,GAAKhrC,QACtG,IAAK,MAAM2rC,KAAUrB,EACfqB,EAAOX,MAAQA,IACjBA,EAAMW,EAAOX,IACbzzC,GAAM6wB,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAK8T,IAAMupB,EAAcnP,EAASluB,KAAKgU,OAAShU,KAAKsmD,YAAYiB,GAAKhrC,SAEpG2rC,EAAOp0C,IAAMA,EACbo0C,EAAOj0C,MAAQjU,KAAKiU,KAAOia,EAC3Bg6B,EAAOj0C,KAAO+zC,EAAUG,WAAWH,EAAUz0D,EAAE20D,EAAOj0C,MAAOi0C,EAAO1rC,OACpE1I,GAAOo0C,EAAO3rC,OAAS2R,EAG7B,CAEArS,eACE,MAAiC,QAA1B7b,KAAKsI,QAAQ2gB,UAAgD,WAA1BjpB,KAAKsI,QAAQ2gB,QACzD,CAEAxlB,OACE,GAAIzD,KAAKsI,QAAQ0d,QAAS,CACxB,MAAM9Y,EAAMlN,KAAKkN,KACjBk3B,EAAAA,EAAAA,GAASl3B,EAAKlN,MAEdA,KAAKooD,SAEL7jB,EAAAA,EAAAA,GAAWr3B,GAEf,CAKAk7C,QACE,MAAO9/C,QAASkB,EAAAA,YAAM88C,EAAAA,WAAaC,EAAAA,IAAYr5C,GAAOlN,MAChD,MAACi4B,EAAO/oC,OAAQw2D,GAAal8C,EAC7B6+C,EAAexgD,EAAAA,EAAAA,MACfmgD,GAAYC,EAAAA,EAAAA,IAAcz+C,EAAKu+C,IAAK/nD,KAAKiU,KAAMjU,KAAKwc,OACpDiqC,GAAY3uB,EAAAA,EAAAA,IAAO4tB,EAAU7tB,OAC7B,QAAC3J,GAAWw3B,EACZxgB,EAAWuhB,EAAUt9C,KACrBm/C,EAAepjB,EAAW,EAChC,IAAIqjB,EAEJvoD,KAAKwkC,YAGLt3B,EAAI60B,UAAYimB,EAAUjmB,UAAU,QACpC70B,EAAIg1B,aAAe,SACnBh1B,EAAIqT,UAAY,GAChBrT,EAAI2qB,KAAO4uB,EAAU5nB,OAErB,MAAM,SAAC+mB,EAAAA,UAAUD,EAAAA,WAAWI,GAAcN,GAAWC,EAAWxgB,GAyE1DrpB,EAAe7b,KAAK6b,eACpBwhB,EAAcr9B,KAAK0mD,sBAEvB6B,EADE1sC,EACO,CACPtoB,GAAGoxC,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAKiU,KAAOia,EAASluB,KAAK+T,MAAQwyC,EAAW,IACtEz3C,EAAG9O,KAAK8T,IAAMoa,EAAUmP,EACxB1Y,KAAM,GAGC,CACPpxB,EAAGyM,KAAKiU,KAAOia,EACfpf,GAAG61B,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAK8T,IAAMupB,EAAcnP,EAASluB,KAAKgU,OAASsyC,EAAY,GAAG/pC,QACxFoI,KAAM,IAIV6jC,EAAAA,EAAAA,IAAsBxoD,KAAKkN,IAAK1D,EAAKi/C,eAErC,MAAM1wB,EAAaguB,EAAa73B,EAChCluB,KAAKqmD,YAAY3jD,SAAQ,CAACge,EAAYruB,KACpC6a,EAAIkT,YAAcM,EAAWJ,UAC7BpT,EAAIiT,UAAYO,EAAWJ,UAE3B,MAAMooC,EAAYx7C,EAAI+5C,YAAYvmC,EAAWR,MAAM1D,MAC7CulB,EAAYimB,EAAUjmB,UAAUrhB,EAAWqhB,YAAcrhB,EAAWqhB,UAAY2jB,EAAU3jB,YAC1FvlB,EAAQopC,EAAW0C,EAAeI,EACxC,IAAIn1D,EAAIg1D,EAAOh1D,EACXub,EAAIy5C,EAAOz5C,EAEfk5C,EAAUW,SAAS3oD,KAAKwc,OAEpBX,EACExpB,EAAI,GAAKkB,EAAIipB,EAAQ0R,EAAUluB,KAAK+T,QACtCjF,EAAIy5C,EAAOz5C,GAAKipB,EAChBwwB,EAAO5jC,OACPpxB,EAAIg1D,EAAOh1D,GAAIoxC,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAKiU,KAAOia,EAASluB,KAAK+T,MAAQwyC,EAAWgC,EAAO5jC,QAElFtyB,EAAI,GAAKyc,EAAIipB,EAAa/3B,KAAKgU,SACxCzgB,EAAIg1D,EAAOh1D,EAAIA,EAAI+yD,EAAYiC,EAAO5jC,MAAMnI,MAAQ0R,EACpDq6B,EAAO5jC,OACP7V,EAAIy5C,EAAOz5C,GAAI61B,EAAAA,EAAAA,IAAe1M,EAAOj4B,KAAK8T,IAAMupB,EAAcnP,EAASluB,KAAKgU,OAASsyC,EAAYiC,EAAO5jC,MAAMpI,SAYhH,GA1HoB,SAAShpB,EAAGub,EAAG4R,GACnC,GAAI9D,MAAMgpC,IAAaA,GAAY,GAAKhpC,MAAM+oC,IAAcA,EAAY,EACtE,OAIFz4C,EAAIk2B,OAEJ,MAAM7iB,GAAYtR,EAAAA,EAAAA,GAAeyR,EAAWH,UAAW,GAUvD,GATArT,EAAIiT,WAAYlR,EAAAA,EAAAA,GAAeyR,EAAWP,UAAWkoC,GACrDn7C,EAAI+rC,SAAUhqC,EAAAA,EAAAA,GAAeyR,EAAWu4B,QAAS,QACjD/rC,EAAIy2B,gBAAiB10B,EAAAA,EAAAA,GAAeyR,EAAWijB,eAAgB,GAC/Dz2B,EAAI+qC,UAAWhpC,EAAAA,EAAAA,GAAeyR,EAAWu3B,SAAU,SACnD/qC,EAAIqT,UAAYA,EAChBrT,EAAIkT,aAAcnR,EAAAA,EAAAA,GAAeyR,EAAWN,YAAaioC,GAEzDn7C,EAAIw2B,aAAYz0B,EAAAA,EAAAA,GAAeyR,EAAWkoC,SAAU,KAEhDlD,EAAUG,cAAe,CAG3B,MAAMgD,EAAc,CAClBhqC,OAAQ8mC,EAAYj3D,KAAKo6D,MAAQ,EACjC9oC,WAAYU,EAAWV,WACvBT,SAAUmB,EAAWnB,SACrBiB,YAAaD,GAETwD,EAAUikC,EAAUe,MAAMx1D,EAAGqyD,EAAW,GACxC5hC,EAAUlV,EAAIw5C,GAGpBU,EAAAA,EAAAA,IAAgB97C,EAAK27C,EAAa9kC,EAASC,EAAS0hC,EAAUI,iBAAmBF,OAC5E,CAGL,MAAMqD,EAAUn6C,EAAIpgB,KAAKC,KAAKu2C,EAAWygB,GAAa,EAAG,GACnDuD,EAAWlB,EAAUG,WAAW50D,EAAGqyD,GACnClQ,GAAeyH,EAAAA,EAAAA,IAAcz8B,EAAWg1B,cAE9CxoC,EAAI02B,YAEAvlC,OAAO+J,OAAOstC,GAAc/L,MAAKp6C,GAAW,IAANA,KACxC6uD,EAAAA,EAAAA,IAAmBlxC,EAAK,CACtB3Z,EAAG21D,EACHp6C,EAAGm6C,EACH92D,EAAGyzD,EACHl2D,EAAGi2D,EACH9mC,OAAQ62B,IAGVxoC,EAAI4wC,KAAKoL,EAAUD,EAASrD,EAAUD,GAGxCz4C,EAAIoB,OACc,IAAdiS,GACFrT,EAAI62B,SAIR72B,EAAIo2B,SACN,CAuDE6lB,CAFcnB,EAAUz0D,EAAEA,GAELub,EAAG4R,GAExBntB,GAAI61D,EAAAA,EAAAA,IAAOrnB,EAAWxuC,EAAIqyD,EAAW0C,EAAczsC,EAAetoB,EAAIipB,EAAQxc,KAAK+T,MAAOvK,EAAKu+C,KAvDhF,SAASx0D,EAAGub,EAAG4R,IAC9B4jB,EAAAA,EAAAA,GAAWp3B,EAAKwT,EAAWR,KAAM3sB,EAAGub,EAAKi3C,EAAa,EAAIU,EAAW,CACnE4C,cAAe3oC,EAAW7N,OAC1BkvB,UAAWimB,EAAUjmB,UAAUrhB,EAAWqhB,YAE9C,CAqDEunB,CAAStB,EAAUz0D,EAAEA,GAAIub,EAAG4R,GAExB7E,EACF0sC,EAAOh1D,GAAKipB,EAAQ0R,OACf,GAA+B,iBAApBxN,EAAWR,KAAmB,CAC9C,MAAMwnC,EAAiBjB,EAAU1uB,WACjCwwB,EAAOz5C,GAAK64C,GAA0BjnC,EAAYgnC,QAElDa,EAAOz5C,GAAKipB,MAIhBwxB,EAAAA,EAAAA,IAAqBvpD,KAAKkN,IAAK1D,EAAKi/C,cACtC,CAKAjkB,YACE,MAAMh7B,EAAOxJ,KAAKsI,QACZ60B,EAAY3zB,EAAKvb,MACjBu7D,GAAY1xB,EAAAA,EAAAA,IAAOqF,EAAUtF,MAC7B4xB,GAAeh7B,EAAAA,EAAAA,GAAU0O,EAAUjP,SAEzC,IAAKiP,EAAUnX,QACb,OAGF,MAAMgiC,GAAYC,EAAAA,EAAAA,IAAcz+C,EAAKu+C,IAAK/nD,KAAKiU,KAAMjU,KAAKwc,OACpDtP,EAAMlN,KAAKkN,IACX+b,EAAWkU,EAAUlU,SACrBq/B,EAAekB,EAAUrgD,KAAO,EAChCugD,EAA6BD,EAAa31C,IAAMw0C,EACtD,IAAIx5C,EAIAmF,EAAOjU,KAAKiU,KACZkP,EAAWnjB,KAAKwc,MAEpB,GAAIxc,KAAK6b,eAEPsH,EAAWz0B,KAAKC,OAAOqR,KAAKumD,YAC5Bz3C,EAAI9O,KAAK8T,IAAM41C,EACfz1C,GAAO0wB,EAAAA,EAAAA,IAAen7B,EAAKyuB,MAAOhkB,EAAMjU,KAAK+T,MAAQoP,OAChD,CAEL,MAAMC,EAAYpjB,KAAKsmD,YAAY7hD,QAAO,CAACC,EAAKyE,IAASza,KAAKC,IAAI+V,EAAKyE,EAAKoT,SAAS,GACrFzN,EAAI46C,GAA6B/kB,EAAAA,EAAAA,IAAen7B,EAAKyuB,MAAOj4B,KAAK8T,IAAK9T,KAAKgU,OAASoP,EAAY5Z,EAAKta,OAAOg/B,QAAUluB,KAAK0mD,uBAK7H,MAAMnzD,GAAIoxC,EAAAA,EAAAA,IAAe1b,EAAUhV,EAAMA,EAAOkP,GAGhDjW,EAAI60B,UAAYimB,EAAUjmB,WAAU7J,EAAAA,EAAAA,IAAmBjP,IACvD/b,EAAIg1B,aAAe,SACnBh1B,EAAIkT,YAAc+c,EAAU78B,MAC5B4M,EAAIiT,UAAYgd,EAAU78B,MAC1B4M,EAAI2qB,KAAO2xB,EAAU3qB,QAErByF,EAAAA,EAAAA,GAAWp3B,EAAKiwB,EAAUjd,KAAM3sB,EAAGub,EAAG06C,EACxC,CAKA9C,sBACE,MAAMvpB,EAAYn9B,KAAKsI,QAAQra,MACzBu7D,GAAY1xB,EAAAA,EAAAA,IAAOqF,EAAUtF,MAC7B4xB,GAAeh7B,EAAAA,EAAAA,GAAU0O,EAAUjP,SACzC,OAAOiP,EAAUnX,QAAUwjC,EAAUzxB,WAAa0xB,EAAaltC,OAAS,CAC1E,CAKAotC,iBAAiBp2D,EAAGub,GAClB,IAAIzc,EAAGu3D,EAAQC,EAEf,IAAInR,EAAAA,EAAAA,IAAWnlD,EAAGyM,KAAKiU,KAAMjU,KAAK+T,SAC7B2kC,EAAAA,EAAAA,IAAW5pC,EAAG9O,KAAK8T,IAAK9T,KAAKgU,QAGhC,IADA61C,EAAK7pD,KAAKkmD,eACL7zD,EAAI,EAAGA,EAAIw3D,EAAGp7D,SAAU4D,EAG3B,GAFAu3D,EAASC,EAAGx3D,IAERqmD,EAAAA,EAAAA,IAAWnlD,EAAGq2D,EAAO31C,KAAM21C,EAAO31C,KAAO21C,EAAOptC,SAC/Ck8B,EAAAA,EAAAA,IAAW5pC,EAAG86C,EAAO91C,IAAK81C,EAAO91C,IAAM81C,EAAOrtC,QAEjD,OAAOvc,KAAKqmD,YAAYh0D,GAK9B,OAAO,IACT,CAMAy3D,YAAYl5D,GACV,MAAM4Y,EAAOxJ,KAAKsI,QAClB,IAoDJ,SAAoBtZ,EAAMwa,GACxB,IAAc,cAATxa,GAAiC,aAATA,KAAyBwa,EAAK8rC,SAAW9rC,EAAKugD,SACzE,OAAO,EAET,GAAIvgD,EAAKiX,UAAqB,UAATzxB,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACT,CA5DSg7D,CAAWp5D,EAAE5B,KAAMwa,GACtB,OAIF,MAAMygD,EAAcjqD,KAAK2pD,iBAAiB/4D,EAAE2C,EAAG3C,EAAEke,GAEjD,GAAe,cAAXle,EAAE5B,MAAmC,aAAX4B,EAAE5B,KAAqB,CACnD,MAAMmqD,EAAWn5C,KAAKmmD,aAChB+D,GApfWz5D,EAofqBw5D,EApfT,QAAfz5D,EAofc2oD,IApfe,OAAN1oD,GAAcD,EAAE8Z,eAAiB7Z,EAAE6Z,cAAgB9Z,EAAEwZ,QAAUvZ,EAAEuZ,OAqflGmvC,IAAa+Q,IACfhwB,EAAAA,EAAAA,GAAK1wB,EAAKugD,QAAS,CAACn5D,EAAGuoD,EAAUn5C,MAAOA,MAG1CA,KAAKmmD,aAAe8D,EAEhBA,IAAgBC,IAClBhwB,EAAAA,EAAAA,GAAK1wB,EAAK8rC,QAAS,CAAC1kD,EAAGq5D,EAAajqD,MAAOA,KAE/C,MAAWiqD,IACT/vB,EAAAA,EAAAA,GAAK1wB,EAAKiX,QAAS,CAAC7vB,EAAGq5D,EAAajqD,MAAOA,MA/f9B,IAACxP,EAAGC,CAigBrB,EAyBF,SAASk3D,GAA0BjnC,EAAYgnC,GAE7C,OAAOA,GADahnC,EAAWR,KAAOQ,EAAWR,KAAKzxB,OAAS,GAAM,EAEvE,CAYA,OAAe,CACbF,GAAI,SAMJ47D,SAAUnE,GAEVljD,MAAMV,EAAO28C,EAAOz2C,GAClB,MAAMwX,EAAS1d,EAAM0d,OAAS,IAAIkmC,GAAO,CAAC94C,IAAK9K,EAAM8K,IAAK5E,UAASlG,UACnEspB,GAAQhkB,UAAUtF,EAAO0d,EAAQxX,GACjCojB,GAAQyC,OAAO/rB,EAAO0d,EACxB,EAEAjb,KAAKzC,GACHspB,GAAQ4C,UAAUlsB,EAAOA,EAAM0d,eACxB1d,EAAM0d,MACf,EAKAma,aAAa73B,EAAO28C,EAAOz2C,GACzB,MAAMwX,EAAS1d,EAAM0d,OACrB4L,GAAQhkB,UAAUtF,EAAO0d,EAAQxX,GACjCwX,EAAOxX,QAAUA,CACnB,EAIAozB,YAAYt5B,GACV,MAAM0d,EAAS1d,EAAM0d,OACrBA,EAAO0mC,cACP1mC,EAAOgoC,gBACT,EAGAsC,WAAWhoD,EAAOyV,GACXA,EAAK48B,QACRryC,EAAM0d,OAAOgqC,YAAYjyC,EAAKzT,MAElC,EAEAyD,SAAU,CACRme,SAAS,EACTiD,SAAU,MACVgP,MAAO,SACP5L,UAAU,EACV5iB,SAAS,EACTlJ,OAAQ,IAGRkgB,QAAQ7vB,EAAG8vB,EAAYZ,GACrB,MAAM9V,EAAQ0W,EAAWpW,aACnB+/C,EAAKvqC,EAAO1d,MACdioD,EAAG/oC,iBAAiBtX,IACtBqgD,EAAG/W,KAAKtpC,GACR0W,EAAW7N,QAAS,IAEpBw3C,EAAG9W,KAAKvpC,GACR0W,EAAW7N,QAAS,EAExB,EAEAyiC,QAAS,KACTyU,QAAS,KAET76D,OAAQ,CACNoR,MAAQ4M,GAAQA,EAAI9K,MAAMkG,QAAQhI,MAClCslD,SAAU,GACV13B,QAAS,GAYTnO,eAAe3d,GACb,MAAMjT,EAAWiT,EAAMnT,KAAKE,UACrBD,QAAQ,cAAC22D,EAAAA,WAAe7lC,EAAU,UAAE+hB,EAAAA,MAAWzhC,EAAAA,gBAAOgqD,EAAe,aAAE5U,IAAiBtzC,EAAM0d,OAAOxX,QAE5G,OAAOlG,EAAM0H,yBAAyBxb,KAAKqc,IACzC,MAAMsV,EAAQtV,EAAKY,WAAWoJ,SAASkxC,EAAgB,OAAIl0D,GACrD6uB,GAAciO,EAAAA,EAAAA,GAAUxO,EAAMO,aAEpC,MAAO,CACLN,KAAM/wB,EAASwb,EAAKX,OAAO2J,MAC3BwM,UAAWF,EAAM7wB,gBACjBkxB,UAAWhgB,EACXuS,QAASlI,EAAKwmC,QACd8H,QAASh5B,EAAMi5B,eACf0P,SAAU3oC,EAAMohB,WAChBsC,eAAgB1jB,EAAMshB,iBACtB0W,SAAUh4B,EAAM83B,gBAChBx3B,WAAYC,EAAYhE,MAAQgE,EAAYjE,QAAU,EACtD6D,YAAaH,EAAMI,YACnBL,WAAYA,GAAcC,EAAMD,WAChCT,SAAUU,EAAMV,SAChBwiB,UAAWA,GAAa9hB,EAAM8hB,UAC9B2T,aAAc4U,IAAoB5U,GAAgBz1B,EAAMy1B,cAGxDprC,aAAcK,EAAKX,MACrB,GACChK,KACL,GAGF/R,MAAO,CACLqS,MAAQ4M,GAAQA,EAAI9K,MAAMkG,QAAQhI,MAClC0lB,SAAS,EACTiD,SAAU,SACV/I,KAAM,KAIVymB,YAAa,CACXjnB,YAAc1C,IAAUA,EAAKutC,WAAW,MACxCr7D,OAAQ,CACNwwB,YAAc1C,IAAU,CAAC,iBAAkB,SAAU,QAAQ8O,SAAS9O,MCtsBrE,MAAMwtC,WAAcz1B,GAIzBj1B,YAAYyH,GACVmU,QAEA1b,KAAKoC,MAAQmF,EAAOnF,MACpBpC,KAAKsI,QAAUf,EAAOe,QACtBtI,KAAKkN,IAAM3F,EAAO2F,IAClBlN,KAAKyqD,cAAW94D,EAChBqO,KAAK8T,SAAMniB,EACXqO,KAAKgU,YAASriB,EACdqO,KAAKiU,UAAOtiB,EACZqO,KAAK+T,WAAQpiB,EACbqO,KAAKwc,WAAQ7qB,EACbqO,KAAKuc,YAAS5qB,EACdqO,KAAKipB,cAAWt3B,EAChBqO,KAAKO,YAAS5O,EACdqO,KAAKqsB,cAAW16B,CAClB,CAEAiV,OAAOuc,EAAUC,GACf,MAAM5Z,EAAOxJ,KAAKsI,QAKlB,GAHAtI,KAAKiU,KAAO,EACZjU,KAAK8T,IAAM,GAENtK,EAAKwc,QAER,YADAhmB,KAAKwc,MAAQxc,KAAKuc,OAASvc,KAAK+T,MAAQ/T,KAAKgU,OAAS,GAIxDhU,KAAKwc,MAAQxc,KAAK+T,MAAQoP,EAC1BnjB,KAAKuc,OAASvc,KAAKgU,OAASoP,EAE5B,MAAM4e,GAAYtvC,EAAAA,EAAAA,GAAQ8W,EAAK0W,MAAQ1W,EAAK0W,KAAKzxB,OAAS,EAC1DuR,KAAKyqD,UAAWh8B,EAAAA,EAAAA,GAAUjlB,EAAK0kB,SAC/B,MAAMw8B,EAAW1oB,GAAYlK,EAAAA,EAAAA,IAAOtuB,EAAKquB,MAAME,WAAa/3B,KAAKyqD,SAASluC,OAEtEvc,KAAK6b,eACP7b,KAAKuc,OAASmuC,EAEd1qD,KAAKwc,MAAQkuC,CAEjB,CAEA7uC,eACE,MAAMuP,EAAMprB,KAAKsI,QAAQ2gB,SACzB,MAAe,QAARmC,GAAyB,WAARA,CAC1B,CAEAu/B,UAAUvvC,GACR,MAAM,IAACtH,EAAAA,KAAKG,EAAAA,OAAMD,EAAAA,MAAQD,EAAAA,QAAOzL,GAAWtI,KACtCi4B,EAAQ3vB,EAAQ2vB,MACtB,IACI9U,EAAUshB,EAAQC,EADlBnlB,EAAW,EAmBf,OAhBIvf,KAAK6b,gBACP4oB,GAASE,EAAAA,EAAAA,IAAe1M,EAAOhkB,EAAMF,GACrC2wB,EAAS5wB,EAAMsH,EACf+H,EAAWpP,EAAQE,IAEM,SAArB3L,EAAQ2gB,UACVwb,EAASxwB,EAAOmH,EAChBspB,GAASC,EAAAA,EAAAA,IAAe1M,EAAOjkB,EAAQF,GACvCyL,GAAiB,GAANyD,EAAAA,IAEXyhB,EAAS1wB,EAAQqH,EACjBspB,GAASC,EAAAA,EAAAA,IAAe1M,EAAOnkB,EAAKE,GACpCuL,EAAgB,GAALyD,EAAAA,GAEbG,EAAWnP,EAASF,GAEf,CAAC2wB,SAAQC,SAAQvhB,WAAU5D,WACpC,CAEA9b,OACE,MAAMyJ,EAAMlN,KAAKkN,IACX1D,EAAOxJ,KAAKsI,QAElB,IAAKkB,EAAKwc,QACR,OAGF,MAAM4kC,GAAW9yB,EAAAA,EAAAA,IAAOtuB,EAAKquB,MAEvBzc,EADawvC,EAAS7yB,WACA,EAAI/3B,KAAKyqD,SAAS32C,KACxC,OAAC2wB,EAAAA,OAAQC,EAAAA,SAAQvhB,EAAAA,SAAU5D,GAAYvf,KAAK2qD,UAAUvvC,IAE5DkpB,EAAAA,EAAAA,GAAWp3B,EAAK1D,EAAK0W,KAAM,EAAG,EAAG0qC,EAAU,CACzCtqD,MAAOkJ,EAAKlJ,MACZ6iB,WACA5D,WACAwiB,WAAW7J,EAAAA,EAAAA,IAAmB1uB,EAAKyuB,OACnCiK,aAAc,SACde,YAAa,CAACwB,EAAQC,IAE1B,EAeF,OAAe,CACbn2C,GAAI,QAMJ47D,SAAUK,GAEV1nD,MAAMV,EAAO28C,EAAOz2C,IArBtB,SAAqBlG,EAAO+6B,GAC1B,MAAMlvC,EAAQ,IAAIu8D,GAAM,CACtBt9C,IAAK9K,EAAM8K,IACX5E,QAAS60B,EACT/6B,UAGFspB,GAAQhkB,UAAUtF,EAAOnU,EAAOkvC,GAChCzR,GAAQyC,OAAO/rB,EAAOnU,GACtBmU,EAAMyoD,WAAa58D,CACrB,CAYI68D,CAAY1oD,EAAOkG,EACrB,EAEAzD,KAAKzC,GACH,MAAMyoD,EAAazoD,EAAMyoD,WACzBn/B,GAAQ4C,UAAUlsB,EAAOyoD,UAClBzoD,EAAMyoD,UACf,EAEA5wB,aAAa73B,EAAO28C,EAAOz2C,GACzB,MAAMra,EAAQmU,EAAMyoD,WACpBn/B,GAAQhkB,UAAUtF,EAAOnU,EAAOqa,GAChCra,EAAMqa,QAAUA,CAClB,EAEAT,SAAU,CACRowB,MAAO,SACPjS,SAAS,EACT6R,KAAM,CACJt3B,OAAQ,QAEV8rB,UAAU,EACV6B,QAAS,GACTjF,SAAU,MACV/I,KAAM,GACN3f,OAAQ,KAGVwlC,cAAe,CACbzlC,MAAO,SAGTqmC,YAAa,CACXjnB,aAAa,EACbC,YAAY,IChKhB,MAAMrxB,GAAM,IAAIy8D,QAEhB,OAAe,CACbx8D,GAAI,WAEJuU,MAAMV,EAAO28C,EAAOz2C,GAClB,MAAMra,EAAQ,IAAIu8D,GAAM,CACtBt9C,IAAK9K,EAAM8K,IACX5E,UACAlG,UAGFspB,GAAQhkB,UAAUtF,EAAOnU,EAAOqa,GAChCojB,GAAQyC,OAAO/rB,EAAOnU,GACtBK,GAAI4V,IAAI9B,EAAOnU,EACjB,EAEA4W,KAAKzC,GACHspB,GAAQ4C,UAAUlsB,EAAO9T,GAAI0V,IAAI5B,IACjC9T,GAAI0W,OAAO5C,EACb,EAEA63B,aAAa73B,EAAO28C,EAAOz2C,GACzB,MAAMra,EAAQK,GAAI0V,IAAI5B,GACtBspB,GAAQhkB,UAAUtF,EAAOnU,EAAOqa,GAChCra,EAAMqa,QAAUA,CAClB,EAEAT,SAAU,CACRowB,MAAO,SACPjS,SAAS,EACT6R,KAAM,CACJt3B,OAAQ,UAEV8rB,UAAU,EACV6B,QAAS,EACTjF,SAAU,MACV/I,KAAM,GACN3f,OAAQ,MAGVwlC,cAAe,CACbzlC,MAAO,SAGTqmC,YAAa,CACXjnB,aAAa,EACbC,YAAY,IClChB,MAAMqrC,GAAc,CAIlBC,QAAQ1nD,GACN,IAAKA,EAAM9U,OACT,OAAO,EAGT,IAAI4D,EAAGhB,EACHkC,EAAI,EACJub,EAAI,EACJyC,EAAQ,EAEZ,IAAKlf,EAAI,EAAGhB,EAAMkS,EAAM9U,OAAQ4D,EAAIhB,IAAOgB,EAAG,CAC5C,MAAMu2B,EAAKrlB,EAAMlR,GAAGqiB,QACpB,GAAIkU,GAAMA,EAAGqM,WAAY,CACvB,MAAM7J,EAAMxC,EAAGoM,kBACfzhC,GAAK63B,EAAI73B,EACTub,GAAKsc,EAAItc,IACPyC,EAEN,CAEA,MAAO,CACLhe,EAAGA,EAAIge,EACPzC,EAAGA,EAAIyC,EAEX,EAKAyZ,QAAQznB,EAAO2nD,GACb,IAAK3nD,EAAM9U,OACT,OAAO,EAGT,IAGI4D,EAAGhB,EAAK85D,EAHR53D,EAAI23D,EAAc33D,EAClBub,EAAIo8C,EAAcp8C,EAClBsb,EAAcrX,OAAOC,kBAGzB,IAAK3gB,EAAI,EAAGhB,EAAMkS,EAAM9U,OAAQ4D,EAAIhB,IAAOgB,EAAG,CAC5C,MAAMu2B,EAAKrlB,EAAMlR,GAAGqiB,QACpB,GAAIkU,GAAMA,EAAGqM,WAAY,CACvB,MAAM3Y,EAASsM,EAAGyB,iBACZ15B,GAAIy6D,EAAAA,EAAAA,IAAsBF,EAAe5uC,GAE3C3rB,EAAIy5B,IACNA,EAAcz5B,EACdw6D,EAAiBviC,GAGvB,CAEA,GAAIuiC,EAAgB,CAClB,MAAME,EAAKF,EAAen2B,kBAC1BzhC,EAAI83D,EAAG93D,EACPub,EAAIu8C,EAAGv8C,EAGT,MAAO,CACLvb,IACAub,IAEJ,GAIF,SAASw8C,GAAalxC,EAAMmxC,GAU1B,OATIA,KACE74D,EAAAA,EAAAA,GAAQ64D,GAEV94D,MAAMo1B,UAAUvjB,KAAKknD,MAAMpxC,EAAMmxC,GAEjCnxC,EAAK9V,KAAKinD,IAIPnxC,CACT,CAQA,SAASqxC,GAAct6D,GACrB,OAAoB,iBAARA,GAAoBA,aAAeu6D,SAAWv6D,EAAI0rB,QAAQ,OAAS,EACtE1rB,EAAIg1C,MAAM,MAEZh1C,CACT,CASA,SAASw6D,GAAkBvpD,EAAOoB,GAChC,MAAM,QAACkR,EAAO,aAAEpK,EAAAA,MAAcN,GAASxG,EACjC+H,EAAanJ,EAAM2N,eAAezF,GAAciB,YAChD,MAACoI,EAAAA,MAAO1K,GAASsC,EAAWmI,iBAAiB1J,GAEnD,MAAO,CACL5H,QACAuR,QACAnI,OAAQD,EAAW6G,UAAUpI,GAC7BkL,IAAK9S,EAAMnT,KAAKE,SAASmb,GAAcrb,KAAK+a,GAC5C4hD,eAAgB3iD,EAChB0F,QAASpD,EAAWqD,aACpBqG,UAAWjL,EACXM,eACAoK,UAEJ,CAKA,SAASm3C,GAAeC,EAASxjD,GAC/B,MAAM4E,EAAM4+C,EAAQ1pD,MAAM8K,KACpB,KAAC6+C,EAAI,OAAEC,EAAAA,MAAQ/9D,GAAS69D,GACxB,SAAClG,EAAAA,UAAUD,GAAar9C,EACxB2jD,GAAWn0B,EAAAA,EAAAA,IAAOxvB,EAAQ2jD,UAC1BzC,GAAY1xB,EAAAA,EAAAA,IAAOxvB,EAAQkhD,WAC3B0C,GAAap0B,EAAAA,EAAAA,IAAOxvB,EAAQ4jD,YAC5BC,EAAiBl+D,EAAMQ,OACvB29D,EAAkBJ,EAAOv9D,OACzB49D,EAAoBN,EAAKt9D,OAEzBy/B,GAAUO,EAAAA,EAAAA,GAAUnmB,EAAQ4lB,SAClC,IAAI3R,EAAS2R,EAAQ3R,OACjBC,EAAQ,EAGR8vC,EAAqBP,EAAKtnD,QAAO,CAAC8M,EAAOg7C,IAAah7C,EAAQg7C,EAASC,OAAO/9D,OAAS89D,EAASE,MAAMh+D,OAAS89D,EAASG,MAAMj+D,QAAQ,GAQ1I,GAPA69D,GAAsBR,EAAQa,WAAWl+D,OAASq9D,EAAQc,UAAUn+D,OAEhE09D,IACF5vC,GAAU4vC,EAAiB3C,EAAUzxB,YACnCo0B,EAAiB,GAAK7jD,EAAQukD,aAC/BvkD,EAAQwkD,mBAEPR,EAAoB,CAGtB/vC,GAAU8vC,GADa/jD,EAAQykD,cAAgBr+D,KAAKC,IAAIg3D,EAAWsG,EAASl0B,YAAck0B,EAASl0B,aAEjGu0B,EAAqBD,GAAqBJ,EAASl0B,YACnDu0B,EAAqB,GAAKhkD,EAAQ0kD,YAElCZ,IACF7vC,GAAUjU,EAAQ2kD,gBACjBb,EAAkBF,EAAWn0B,YAC5Bq0B,EAAkB,GAAK9jD,EAAQ4kD,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASzoC,GAC5BnI,EAAQ9tB,KAAKC,IAAI6tB,EAAOtP,EAAI+5C,YAAYtiC,GAAMnI,MAAQ2wC,EACxD,EA+BA,OA7BAjgD,EAAIk2B,OAEJl2B,EAAI2qB,KAAO2xB,EAAU3qB,QACrBzP,EAAAA,EAAAA,GAAK08B,EAAQ79D,MAAOm/D,GAGpBlgD,EAAI2qB,KAAOo0B,EAASptB,QACpBzP,EAAAA,EAAAA,GAAK08B,EAAQa,WAAWj0C,OAAOozC,EAAQc,WAAYQ,GAGnDD,EAAe7kD,EAAQykD,cAAiBnH,EAAW,EAAIt9C,EAAQqkB,WAAc,GAC7EyC,EAAAA,EAAAA,GAAK28B,GAAOQ,KACVn9B,EAAAA,EAAAA,GAAKm9B,EAASC,OAAQY,IACtBh+B,EAAAA,EAAAA,GAAKm9B,EAASE,MAAOW,IACrBh+B,EAAAA,EAAAA,GAAKm9B,EAASG,MAAOU,EAAAA,IAIvBD,EAAe,EAGfjgD,EAAI2qB,KAAOq0B,EAAWrtB,QACtBzP,EAAAA,EAAAA,GAAK08B,EAAQE,OAAQoB,GAErBlgD,EAAIo2B,UAGJ9mB,GAAS0R,EAAQ1R,MAEV,CAACA,QAAOD,SACjB,CAyBA,SAAS8wC,GAAgBjrD,EAAOkG,EAASa,EAAMmkD,GAC7C,MAAM,EAAC/5D,EAAAA,MAAGipB,GAASrT,GACZqT,MAAO+wC,EAAY/4C,WAAW,KAACP,EAAI,MAAEF,IAAU3R,EACtD,IAAIorD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAASj6D,IAAM0gB,EAAOF,GAAS,EAAI,OAAS,QACnCxgB,GAAKipB,EAAQ,EACtBgxC,EAAS,OACAj6D,GAAKg6D,EAAa/wC,EAAQ,IACnCgxC,EAAS,SAtBb,SAA6BA,EAAQprD,EAAOkG,EAASa,GACnD,MAAM,EAAC5V,EAAAA,MAAGipB,GAASrT,EACbskD,EAAQnlD,EAAQolD,UAAYplD,EAAQqlD,aAC1C,MAAe,SAAXH,GAAqBj6D,EAAIipB,EAAQixC,EAAQrrD,EAAMoa,OAIpC,UAAXgxC,GAAsBj6D,EAAIipB,EAAQixC,EAAQ,QAA9C,CAGF,CAeMG,CAAoBJ,EAAQprD,EAAOkG,EAASa,KAC9CqkD,EAAS,UAGJA,CACT,CAKA,SAASK,GAAmBzrD,EAAOkG,EAASa,GAC1C,MAAMmkD,EAASnkD,EAAKmkD,QAAUhlD,EAAQglD,QA/CxC,SAAyBlrD,EAAO+G,GAC9B,MAAM,EAAC2F,EAAAA,OAAGyN,GAAUpT,EAEpB,OAAI2F,EAAIyN,EAAS,EACR,MACEzN,EAAK1M,EAAMma,OAASA,EAAS,EAC/B,SAEF,QACT,CAsCkDuxC,CAAgB1rD,EAAO+G,GAEvE,MAAO,CACLqkD,OAAQrkD,EAAKqkD,QAAUllD,EAAQklD,QAAUH,GAAgBjrD,EAAOkG,EAASa,EAAMmkD,GAC/EA,SAEJ,CA4BA,SAASS,GAAmBzlD,EAASa,EAAM6kD,EAAW5rD,GACpD,MAAM,UAACsrD,EAAS,aAAEC,EAAAA,aAAcM,GAAgB3lD,GAC1C,OAACklD,EAAAA,OAAQF,GAAUU,EACnBE,EAAiBR,EAAYC,GAC7B,QAACrQ,EAAO,SAAEC,EAAQ,WAAEC,EAAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc8Q,GAEnE,IAAI16D,EAhCN,SAAgB4V,EAAMqkD,GACpB,IAAI,EAACj6D,EAAAA,MAAGipB,GAASrT,EAMjB,MALe,UAAXqkD,EACFj6D,GAAKipB,EACe,WAAXgxC,IACTj6D,GAAMipB,EAAQ,GAETjpB,CACT,CAwBU46D,CAAOhlD,EAAMqkD,GACrB,MAAM1+C,EAvBR,SAAgB3F,EAAMmkD,EAAQY,GAE5B,IAAI,EAACp/C,EAAAA,OAAGyN,GAAUpT,EAQlB,MAPe,QAAXmkD,EACFx+C,GAAKo/C,EAELp/C,GADoB,WAAXw+C,EACJ/wC,EAAS2xC,EAER3xC,EAAS,EAEVzN,CACT,CAYYs/C,CAAOjlD,EAAMmkD,EAAQY,GAc/B,MAZe,WAAXZ,EACa,SAAXE,EACFj6D,GAAK26D,EACe,UAAXV,IACTj6D,GAAK26D,GAEa,SAAXV,EACTj6D,GAAK7E,KAAKC,IAAI2uD,EAASE,GAAckQ,EACjB,UAAXF,IACTj6D,GAAK7E,KAAKC,IAAI4uD,EAAUE,GAAeiQ,GAGlC,CACLn6D,GAAGypC,EAAAA,EAAAA,GAAYzpC,EAAG,EAAG6O,EAAMoa,MAAQrT,EAAKqT,OACxC1N,GAAGkuB,EAAAA,EAAAA,GAAYluB,EAAG,EAAG1M,EAAMma,OAASpT,EAAKoT,QAE7C,CAEA,SAAS8xC,GAAYvC,EAAS7zB,EAAO3vB,GACnC,MAAM4lB,GAAUO,EAAAA,EAAAA,GAAUnmB,EAAQ4lB,SAElC,MAAiB,WAAV+J,EACH6zB,EAAQv4D,EAAIu4D,EAAQtvC,MAAQ,EAClB,UAAVyb,EACE6zB,EAAQv4D,EAAIu4D,EAAQtvC,MAAQ0R,EAAQna,MACpC+3C,EAAQv4D,EAAI26B,EAAQja,IAC5B,CAKA,SAASq6C,GAAwBpyB,GAC/B,OAAOovB,GAAa,GAAIG,GAAcvvB,GACxC,CAUA,SAASqyB,GAAkBjsD,EAAWwS,GACpC,MAAMuwB,EAAWvwB,GAAWA,EAAQnG,SAAWmG,EAAQnG,QAAQm9C,SAAWh3C,EAAQnG,QAAQm9C,QAAQxpD,UAClG,OAAO+iC,EAAW/iC,EAAU+iC,SAASA,GAAY/iC,CACnD,CAEA,MAAMksD,GAAmB,CAEvBC,YAAaC,EAAAA,GACbzgE,MAAM0gE,GACJ,GAAIA,EAAalgE,OAAS,EAAG,CAC3B,MAAM+U,EAAOmrD,EAAa,GACpBz/D,EAASsU,EAAKpB,MAAMnT,KAAKC,OACzB0/D,EAAa1/D,EAASA,EAAOT,OAAS,EAE5C,GAAIuR,MAAQA,KAAKsI,SAAiC,YAAtBtI,KAAKsI,QAAQ+B,KACvC,OAAO7G,EAAKmL,QAAQgF,OAAS,GACxB,GAAInQ,EAAKmQ,MACd,OAAOnQ,EAAKmQ,MACP,GAAIi7C,EAAa,GAAKprD,EAAKyR,UAAY25C,EAC5C,OAAO1/D,EAAOsU,EAAKyR,WAIvB,MAAO,EACT,EACA45C,WAAYH,EAAAA,GAGZ/B,WAAY+B,EAAAA,GAGZI,YAAaJ,EAAAA,GACb/6C,MAAMo7C,GACJ,GAAI/uD,MAAQA,KAAKsI,SAAiC,YAAtBtI,KAAKsI,QAAQ+B,KACvC,OAAO0kD,EAAYp7C,MAAQ,KAAOo7C,EAAYnD,gBAAkBmD,EAAYnD,eAG9E,IAAIj4C,EAAQo7C,EAAYpgD,QAAQgF,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAM1K,EAAQ8lD,EAAYnD,eAI1B,OAHK3vC,EAAAA,EAAAA,GAAchT,KACjB0K,GAAS1K,GAEJ0K,CACT,EACAq7C,WAAWD,GACT,MACMzmD,EADOymD,EAAY3sD,MAAM2N,eAAeg/C,EAAYzkD,cACrCiB,WAAWoJ,SAASo6C,EAAY95C,WACrD,MAAO,CACLoL,YAAa/X,EAAQ+X,YACrBjxB,gBAAiBkZ,EAAQlZ,gBACzBoxB,YAAalY,EAAQkY,YACrB6gB,WAAY/4B,EAAQ+4B,WACpBE,iBAAkBj5B,EAAQi5B,iBAC1BmU,aAAc,EAElB,EACAuZ,iBACE,OAAOjvD,KAAKsI,QAAQ4mD,SACtB,EACAC,gBAAgBJ,GACd,MACMzmD,EADOymD,EAAY3sD,MAAM2N,eAAeg/C,EAAYzkD,cACrCiB,WAAWoJ,SAASo6C,EAAY95C,WACrD,MAAO,CACL+K,WAAY1X,EAAQ0X,WACpBT,SAAUjX,EAAQiX,SAEtB,EACA6vC,WAAYV,EAAAA,GAGZ9B,UAAW8B,EAAAA,GAGXW,aAAcX,EAAAA,GACd1C,OAAQ0C,EAAAA,GACRY,YAAaZ,EAAAA,IAYf,SAASa,GAA2BjtD,EAAW0a,EAAM9P,EAAK66B,GACxD,MAAM9R,EAAS3zB,EAAU0a,GAAMkd,KAAKhtB,EAAK66B,GAEzC,YAAsB,IAAX9R,EACFu4B,GAAiBxxC,GAAMkd,KAAKhtB,EAAK66B,GAGnC9R,CACT,CAEO,MAAMu5B,WAAgBz6B,GAK3B/nB,mBAAqBg+C,GAErBlrD,YAAYyH,GACVmU,QAEA1b,KAAKyvD,QAAU,EACfzvD,KAAK0D,QAAU,GACf1D,KAAK0vD,oBAAiB/9D,EACtBqO,KAAK2vD,WAAQh+D,EACbqO,KAAK4vD,uBAAoBj+D,EACzBqO,KAAK6vD,cAAgB,GACrB7vD,KAAKwI,iBAAc7W,EACnBqO,KAAK8N,cAAWnc,EAChBqO,KAAKoC,MAAQmF,EAAOnF,MACpBpC,KAAKsI,QAAUf,EAAOe,QACtBtI,KAAK8vD,gBAAan+D,EAClBqO,KAAK/R,WAAQ0D,EACbqO,KAAK2sD,gBAAah7D,EAClBqO,KAAK+rD,UAAOp6D,EACZqO,KAAK4sD,eAAYj7D,EACjBqO,KAAKgsD,YAASr6D,EACdqO,KAAKwtD,YAAS77D,EACdqO,KAAKstD,YAAS37D,EACdqO,KAAKzM,OAAI5B,EACTqO,KAAK8O,OAAInd,EACTqO,KAAKuc,YAAS5qB,EACdqO,KAAKwc,WAAQ7qB,EACbqO,KAAK+vD,YAASp+D,EACdqO,KAAKgwD,YAASr+D,EAGdqO,KAAKiwD,iBAAct+D,EACnBqO,KAAKkwD,sBAAmBv+D,EACxBqO,KAAKmwD,qBAAkBx+D,CACzB,CAEAuc,WAAW5F,GACTtI,KAAKsI,QAAUA,EACftI,KAAK4vD,uBAAoBj+D,EACzBqO,KAAK8N,cAAWnc,CAClB,CAKAokB,qBACE,MAAMlJ,EAAS7M,KAAK4vD,kBAEpB,GAAI/iD,EACF,OAAOA,EAGT,MAAMzK,EAAQpC,KAAKoC,MACbkG,EAAUtI,KAAKsI,QAAQixB,WAAWv5B,KAAKoR,cACvC5H,EAAOlB,EAAQ0tB,SAAW5zB,EAAMkG,QAAQY,WAAaZ,EAAQI,WAC7DA,EAAa,IAAIpB,EAAWtH,KAAKoC,MAAOoH,GAK9C,OAJIA,EAAK0M,aACPlW,KAAK4vD,kBAAoBvxD,OAAOyX,OAAOpN,IAGlCA,CACT,CAKA0I,aACE,OAAOpR,KAAK8N,WACZ9N,KAAK8N,UAtLqBiH,EAsLW/U,KAAKoC,MAAMgP,aAtLd06C,EAsL4B9rD,KAtLnB2uD,EAsLyB3uD,KAAK6vD,eArLpE76C,EAAAA,EAAAA,GAAcD,EAAQ,CAC3B+2C,UACA6C,eACA3/D,KAAM,cAJV,IAA8B+lB,EAAQ+2C,EAAS6C,CAuL7C,CAEAyB,SAASt7C,EAASxM,GAChB,MAAM,UAAChG,GAAagG,EAEdmmD,EAAcc,GAA2BjtD,EAAW,cAAetC,KAAM8U,GACzE7mB,EAAQshE,GAA2BjtD,EAAW,QAAStC,KAAM8U,GAC7D+5C,EAAaU,GAA2BjtD,EAAW,aAActC,KAAM8U,GAE7E,IAAI23C,EAAQ,GAKZ,OAJAA,EAAQnB,GAAamB,EAAOhB,GAAcgD,IAC1ChC,EAAQnB,GAAamB,EAAOhB,GAAcx9D,IAC1Cw+D,EAAQnB,GAAamB,EAAOhB,GAAcoD,IAEnCpC,CACT,CAEA4D,cAAc1B,EAAcrmD,GAC1B,OAAOgmD,GACLiB,GAA2BjnD,EAAQhG,UAAW,aAActC,KAAM2uD,GAEtE,CAEA2B,QAAQ3B,EAAcrmD,GACpB,MAAM,UAAChG,GAAagG,EACdioD,EAAY,GAgBlB,OAdAnhC,EAAAA,EAAAA,GAAKu/B,GAAe75C,IAClB,MAAMy3C,EAAW,CACfC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEH8D,EAASjC,GAAkBjsD,EAAWwS,GAC5Cw2C,GAAaiB,EAASC,OAAQf,GAAc8D,GAA2BiB,EAAQ,cAAexwD,KAAM8U,KACpGw2C,GAAaiB,EAASE,MAAO8C,GAA2BiB,EAAQ,QAASxwD,KAAM8U,IAC/Ew2C,GAAaiB,EAASG,MAAOjB,GAAc8D,GAA2BiB,EAAQ,aAAcxwD,KAAM8U,KAElGy7C,EAAUjsD,KAAKioD,EAAAA,IAGVgE,CACT,CAEAE,aAAa9B,EAAcrmD,GACzB,OAAOgmD,GACLiB,GAA2BjnD,EAAQhG,UAAW,YAAatC,KAAM2uD,GAErE,CAGA+B,UAAU/B,EAAcrmD,GACtB,MAAM,UAAChG,GAAagG,EAEd+mD,EAAeE,GAA2BjtD,EAAW,eAAgBtC,KAAM2uD,GAC3E3C,EAASuD,GAA2BjtD,EAAW,SAAUtC,KAAM2uD,GAC/DW,EAAcC,GAA2BjtD,EAAW,cAAetC,KAAM2uD,GAE/E,IAAIlC,EAAQ,GAKZ,OAJAA,EAAQnB,GAAamB,EAAOhB,GAAc4D,IAC1C5C,EAAQnB,GAAamB,EAAOhB,GAAcO,IAC1CS,EAAQnB,GAAamB,EAAOhB,GAAc6D,IAEnC7C,CACT,CAKAkE,aAAaroD,GACX,MAAM3B,EAAS3G,KAAK0D,QACdzU,EAAO+Q,KAAKoC,MAAMnT,KAClBghE,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI99D,EAAGhB,EADHs9D,EAAe,GAGnB,IAAKt8D,EAAI,EAAGhB,EAAMsV,EAAOlY,OAAQ4D,EAAIhB,IAAOgB,EAC1Cs8D,EAAarqD,KAAKqnD,GAAkB3rD,KAAKoC,MAAOuE,EAAOtU,KAyBzD,OArBIiW,EAAQiE,SACVoiD,EAAeA,EAAapiD,QAAO,CAACmI,EAAS1K,EAAOmhB,IAAU7iB,EAAQiE,OAAOmI,EAAS1K,EAAOmhB,EAAOl8B,MAIlGqZ,EAAQsoD,WACVjC,EAAeA,EAAa/1C,MAAK,CAACpoB,EAAGC,IAAM6X,EAAQsoD,SAASpgE,EAAGC,EAAGxB,OAIpEmgC,EAAAA,EAAAA,GAAKu/B,GAAe75C,IAClB,MAAM07C,EAASjC,GAAkBjmD,EAAQhG,UAAWwS,GACpDm7C,EAAY3rD,KAAKirD,GAA2BiB,EAAQ,aAAcxwD,KAAM8U,IACxEo7C,EAAiB5rD,KAAKirD,GAA2BiB,EAAQ,kBAAmBxwD,KAAM8U,IAClFq7C,EAAgB7rD,KAAKirD,GAA2BiB,EAAQ,iBAAkBxwD,KAAM8U,GAAAA,IAGlF9U,KAAKiwD,YAAcA,EACnBjwD,KAAKkwD,iBAAmBA,EACxBlwD,KAAKmwD,gBAAkBA,EACvBnwD,KAAK8vD,WAAanB,EACXA,CACT,CAEA/nD,OAAOknB,EAAS2mB,GACd,MAAMnsC,EAAUtI,KAAKsI,QAAQixB,WAAWv5B,KAAKoR,cACvCzK,EAAS3G,KAAK0D,QACpB,IAAIwE,EACAymD,EAAe,GAEnB,GAAKhoD,EAAOlY,OAML,CACL,MAAMw6B,EAAW+hC,GAAY1iD,EAAQ2gB,UAAUiR,KAAKl6B,KAAM2G,EAAQ3G,KAAK0vD,gBACvEf,EAAe3uD,KAAK2wD,aAAaroD,GAEjCtI,KAAK/R,MAAQ+R,KAAKowD,SAASzB,EAAcrmD,GACzCtI,KAAK2sD,WAAa3sD,KAAKqwD,cAAc1B,EAAcrmD,GACnDtI,KAAK+rD,KAAO/rD,KAAKswD,QAAQ3B,EAAcrmD,GACvCtI,KAAK4sD,UAAY5sD,KAAKywD,aAAa9B,EAAcrmD,GACjDtI,KAAKgsD,OAAShsD,KAAK0wD,UAAU/B,EAAcrmD,GAE3C,MAAMa,EAAOnJ,KAAK2vD,MAAQ9D,GAAe7rD,KAAMsI,GACzCuoD,EAAkBxyD,OAAOqB,OAAO,CAAC,EAAGupB,EAAU9f,GAC9C6kD,EAAYH,GAAmB7tD,KAAKoC,MAAOkG,EAASuoD,GACpDC,EAAkB/C,GAAmBzlD,EAASuoD,EAAiB7C,EAAWhuD,KAAKoC,OAErFpC,KAAKwtD,OAASQ,EAAUR,OACxBxtD,KAAKstD,OAASU,EAAUV,OAExBplD,EAAa,CACXunD,QAAS,EACTl8D,EAAGu9D,EAAgBv9D,EACnBub,EAAGgiD,EAAgBhiD,EACnB0N,MAAOrT,EAAKqT,MACZD,OAAQpT,EAAKoT,OACbwzC,OAAQ9mC,EAAS11B,EACjBy8D,OAAQ/mC,EAASna,QA9BE,IAAjB9O,KAAKyvD,UACPvnD,EAAa,CACXunD,QAAS,IAgCfzvD,KAAK6vD,cAAgBlB,EACrB3uD,KAAK8N,cAAWnc,EAEZuW,GACFlI,KAAK+V,qBAAqBnP,OAAO5G,KAAMkI,GAGrC4lB,GAAWxlB,EAAQyoD,UACrBzoD,EAAQyoD,SAAS72B,KAAKl6B,KAAM,CAACoC,MAAOpC,KAAKoC,MAAO0pD,QAAS9rD,KAAMy0C,UAEnE,CAEAuc,UAAUC,EAAc/jD,EAAK/D,EAAMb,GACjC,MAAM4oD,EAAgBlxD,KAAKmxD,iBAAiBF,EAAc9nD,EAAMb,GAEhE4E,EAAI42B,OAAOotB,EAAcvwB,GAAIuwB,EAActwB,IAC3C1zB,EAAI42B,OAAOotB,EAAcrwB,GAAIqwB,EAAcpwB,IAC3C5zB,EAAI42B,OAAOotB,EAAcE,GAAIF,EAAcG,GAC7C,CAEAF,iBAAiBF,EAAc9nD,EAAMb,GACnC,MAAM,OAACklD,EAAM,OAAEF,GAAUttD,MACnB,UAAC0tD,EAAAA,aAAWO,GAAgB3lD,GAC5B,QAACg1C,EAAO,SAAEC,EAAQ,WAAEC,EAAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc8Q,IAC5D16D,EAAG+9D,EAAKxiD,EAAGyiD,GAAON,GACnB,MAACz0C,EAAAA,OAAOD,GAAUpT,EACxB,IAAIw3B,EAAIE,EAAIuwB,EAAIxwB,EAAIE,EAAIuwB,EAgDxB,MA9Ce,WAAX/D,GACFxsB,EAAKywB,EAAOh1C,EAAS,EAEN,SAAXixC,GACF7sB,EAAK2wB,EACLzwB,EAAKF,EAAK+sB,EAGV9sB,EAAKE,EAAK4sB,EACV2D,EAAKvwB,EAAK4sB,IAEV/sB,EAAK2wB,EAAM90C,EACXqkB,EAAKF,EAAK+sB,EAGV9sB,EAAKE,EAAK4sB,EACV2D,EAAKvwB,EAAK4sB,GAGZ0D,EAAKzwB,IAGHE,EADa,SAAX2sB,EACG8D,EAAM5iE,KAAKC,IAAI2uD,EAASE,GAAekQ,EACxB,UAAXF,EACJ8D,EAAM90C,EAAQ9tB,KAAKC,IAAI4uD,EAAUE,GAAeiQ,EAEhD1tD,KAAK+vD,OAGG,QAAXzC,GACF1sB,EAAK2wB,EACLzwB,EAAKF,EAAK8sB,EAGV/sB,EAAKE,EAAK6sB,EACV0D,EAAKvwB,EAAK6sB,IAEV9sB,EAAK2wB,EAAMh1C,EACXukB,EAAKF,EAAK8sB,EAGV/sB,EAAKE,EAAK6sB,EACV0D,EAAKvwB,EAAK6sB,GAEZ2D,EAAKzwB,GAEA,CAACD,KAAIE,KAAIuwB,KAAIxwB,KAAIE,KAAIuwB,KAC9B,CAEA7sB,UAAUgtB,EAAItkD,EAAK5E,GACjB,MAAMra,EAAQ+R,KAAK/R,MACbQ,EAASR,EAAMQ,OACrB,IAAI+6D,EAAWqD,EAAcx6D,EAE7B,GAAI5D,EAAQ,CACV,MAAMu5D,GAAYC,EAAAA,EAAAA,IAAc3/C,EAAQy/C,IAAK/nD,KAAKzM,EAAGyM,KAAKwc,OAa1D,IAXAg1C,EAAGj+D,EAAI86D,GAAYruD,KAAMsI,EAAQ0vB,WAAY1vB,GAE7C4E,EAAI60B,UAAYimB,EAAUjmB,UAAUz5B,EAAQ0vB,YAC5C9qB,EAAIg1B,aAAe,SAEnBsnB,GAAY1xB,EAAAA,EAAAA,IAAOxvB,EAAQkhD,WAC3BqD,EAAevkD,EAAQukD,aAEvB3/C,EAAIiT,UAAY7X,EAAQmpD,WACxBvkD,EAAI2qB,KAAO2xB,EAAU3qB,OAEhBxsC,EAAI,EAAGA,EAAI5D,IAAU4D,EACxB6a,EAAIo8C,SAASr7D,EAAMoE,GAAI21D,EAAUz0D,EAAEi+D,EAAGj+D,GAAIi+D,EAAG1iD,EAAI06C,EAAUzxB,WAAa,GACxEy5B,EAAG1iD,GAAK06C,EAAUzxB,WAAa80B,EAE3Bx6D,EAAI,IAAM5D,IACZ+iE,EAAG1iD,GAAKxG,EAAQwkD,kBAAoBD,GAI5C,CAKA6E,cAAcxkD,EAAKskD,EAAIn/D,EAAG21D,EAAW1/C,GACnC,MAAM2nD,EAAcjwD,KAAKiwD,YAAY59D,GAC/B88D,EAAkBnvD,KAAKkwD,iBAAiB79D,IACxC,UAACszD,EAAS,SAAEC,EAAAA,WAAUj5B,GAAcrkB,EACpC2jD,GAAWn0B,EAAAA,EAAAA,IAAOxvB,EAAQ2jD,UAC1B0F,EAAStD,GAAYruD,KAAM,OAAQsI,GACnCspD,EAAY5J,EAAUz0D,EAAEo+D,GACxBE,EAAUlM,EAAYsG,EAASl0B,YAAck0B,EAASl0B,WAAa4tB,GAAa,EAAI,EACpFmM,EAASN,EAAG1iD,EAAI+iD,EAEtB,GAAIvpD,EAAQu9C,cAAe,CACzB,MAAMgD,EAAc,CAClBhqC,OAAQnwB,KAAKiB,IAAIi2D,EAAUD,GAAa,EACxC3lC,WAAYmvC,EAAgBnvC,WAC5BT,SAAU4vC,EAAgB5vC,SAC1BiB,YAAa,GAITuD,EAAUikC,EAAUG,WAAWyJ,EAAWhM,GAAYA,EAAW,EACjE5hC,EAAU8tC,EAASnM,EAAY,EAGrCz4C,EAAIkT,YAAc9X,EAAQypD,mBAC1B7kD,EAAIiT,UAAY7X,EAAQypD,oBACxBvV,EAAAA,EAAAA,IAAUtvC,EAAK27C,EAAa9kC,EAASC,GAGrC9W,EAAIkT,YAAc6vC,EAAY5vC,YAC9BnT,EAAIiT,UAAY8vC,EAAY7gE,iBAC5BotD,EAAAA,EAAAA,IAAUtvC,EAAK27C,EAAa9kC,EAASC,OAChC,CAEL9W,EAAIqT,WAAY5Y,EAAAA,EAAAA,GAASsoD,EAAYzvC,aAAe9xB,KAAKC,OAAO0P,OAAO+J,OAAO6nD,EAAYzvC,cAAiByvC,EAAYzvC,aAAe,EACtItT,EAAIkT,YAAc6vC,EAAY5vC,YAC9BnT,EAAIw2B,YAAYusB,EAAY5uB,YAAc,IAC1Cn0B,EAAIy2B,eAAiBssB,EAAY1uB,kBAAoB,EAGrD,MAAMywB,EAAShK,EAAUG,WAAWyJ,EAAWhM,EAAWj5B,GACpDslC,EAASjK,EAAUG,WAAWH,EAAUe,MAAM6I,EAAW,GAAIhM,EAAWj5B,EAAa,GACrF+oB,GAAeyH,EAAAA,EAAAA,IAAc8S,EAAYva,cAE3Cr3C,OAAO+J,OAAOstC,GAAc/L,MAAKp6C,GAAW,IAANA,KACxC2d,EAAI02B,YACJ12B,EAAIiT,UAAY7X,EAAQypD,oBACxB3T,EAAAA,EAAAA,IAAmBlxC,EAAK,CACtB3Z,EAAGy+D,EACHljD,EAAGgjD,EACH3/D,EAAGyzD,EACHl2D,EAAGi2D,EACH9mC,OAAQ62B,IAEVxoC,EAAIoB,OACJpB,EAAI62B,SAGJ72B,EAAIiT,UAAY8vC,EAAY7gE,gBAC5B8d,EAAI02B,aACJwa,EAAAA,EAAAA,IAAmBlxC,EAAK,CACtB3Z,EAAG0+D,EACHnjD,EAAGgjD,EAAS,EACZ3/D,EAAGyzD,EAAW,EACdl2D,EAAGi2D,EAAY,EACf9mC,OAAQ62B,IAEVxoC,EAAIoB,SAGJpB,EAAIiT,UAAY7X,EAAQypD,mBACxB7kD,EAAIm2B,SAAS2uB,EAAQF,EAAQlM,EAAUD,GACvCz4C,EAAIglD,WAAWF,EAAQF,EAAQlM,EAAUD,GAEzCz4C,EAAIiT,UAAY8vC,EAAY7gE,gBAC5B8d,EAAIm2B,SAAS4uB,EAAQH,EAAS,EAAGlM,EAAW,EAAGD,EAAY,IAK/Dz4C,EAAIiT,UAAYngB,KAAKmwD,gBAAgB99D,EACvC,CAEA8/D,SAASX,EAAItkD,EAAK5E,GAChB,MAAM,KAACyjD,GAAQ/rD,MACT,YAACgtD,EAAAA,UAAaoF,EAAAA,cAAWrF,EAAAA,UAAepH,EAAAA,SAAWC,EAAAA,WAAUj5B,GAAcrkB,EAC3E2jD,GAAWn0B,EAAAA,EAAAA,IAAOxvB,EAAQ2jD,UAChC,IAAIoG,EAAiBpG,EAASl0B,WAC1Bu6B,EAAe,EAEnB,MAAMtK,GAAYC,EAAAA,EAAAA,IAAc3/C,EAAQy/C,IAAK/nD,KAAKzM,EAAGyM,KAAKwc,OAEpD+1C,EAAiB,SAAS5tC,GAC9BzX,EAAIo8C,SAAS3kC,EAAMqjC,EAAUz0D,EAAEi+D,EAAGj+D,EAAI++D,GAAed,EAAG1iD,EAAIujD,EAAiB,GAC7Eb,EAAG1iD,GAAKujD,EAAiBrF,CAC3B,EAEMwF,EAA0BxK,EAAUjmB,UAAUqwB,GACpD,IAAI7F,EAAUkG,EAAWhG,EAAOp6D,EAAGkM,EAAGwL,EAAMu0B,EAiB5C,IAfApxB,EAAI60B,UAAYqwB,EAChBllD,EAAIg1B,aAAe,SACnBh1B,EAAI2qB,KAAOo0B,EAASptB,OAEpB2yB,EAAGj+D,EAAI86D,GAAYruD,KAAMwyD,EAAyBlqD,GAGlD4E,EAAIiT,UAAY7X,EAAQ4mD,WACxB9/B,EAAAA,EAAAA,GAAKpvB,KAAK2sD,WAAY4F,GAEtBD,EAAevF,GAA6C,UAA5ByF,EACd,WAAdJ,EAA0BxM,EAAW,EAAIj5B,EAAei5B,EAAW,EAAIj5B,EACvE,EAGCt6B,EAAI,EAAG0X,EAAOgiD,EAAKt9D,OAAQ4D,EAAI0X,IAAQ1X,EAAG,CAc7C,IAbAk6D,EAAWR,EAAK15D,GAChBogE,EAAYzyD,KAAKmwD,gBAAgB99D,GAEjC6a,EAAIiT,UAAYsyC,GAChBrjC,EAAAA,EAAAA,GAAKm9B,EAASC,OAAQ+F,GAEtB9F,EAAQF,EAASE,MAEbM,GAAiBN,EAAMh+D,SACzBuR,KAAK0xD,cAAcxkD,EAAKskD,EAAIn/D,EAAG21D,EAAW1/C,GAC1C+pD,EAAiB3jE,KAAKC,IAAIs9D,EAASl0B,WAAY4tB,IAG5CpnD,EAAI,EAAG+/B,EAAOmuB,EAAMh+D,OAAQ8P,EAAI+/B,IAAQ//B,EAC3Cg0D,EAAe9F,EAAMluD,IAErB8zD,EAAiBpG,EAASl0B,YAG5B3I,EAAAA,EAAAA,GAAKm9B,EAASG,MAAO6F,EACvB,CAGAD,EAAe,EACfD,EAAiBpG,EAASl0B,YAG1B3I,EAAAA,EAAAA,GAAKpvB,KAAK4sD,UAAW2F,GACrBf,EAAG1iD,GAAKk+C,CACV,CAEA0F,WAAWlB,EAAItkD,EAAK5E,GAClB,MAAM0jD,EAAShsD,KAAKgsD,OACdv9D,EAASu9D,EAAOv9D,OACtB,IAAIy9D,EAAY75D,EAEhB,GAAI5D,EAAQ,CACV,MAAMu5D,GAAYC,EAAAA,EAAAA,IAAc3/C,EAAQy/C,IAAK/nD,KAAKzM,EAAGyM,KAAKwc,OAa1D,IAXAg1C,EAAGj+D,EAAI86D,GAAYruD,KAAMsI,EAAQqqD,YAAarqD,GAC9CkpD,EAAG1iD,GAAKxG,EAAQ2kD,gBAEhB//C,EAAI60B,UAAYimB,EAAUjmB,UAAUz5B,EAAQqqD,aAC5CzlD,EAAIg1B,aAAe,SAEnBgqB,GAAap0B,EAAAA,EAAAA,IAAOxvB,EAAQ4jD,YAE5Bh/C,EAAIiT,UAAY7X,EAAQsqD,YACxB1lD,EAAI2qB,KAAOq0B,EAAWrtB,OAEjBxsC,EAAI,EAAGA,EAAI5D,IAAU4D,EACxB6a,EAAIo8C,SAAS0C,EAAO35D,GAAI21D,EAAUz0D,EAAEi+D,EAAGj+D,GAAIi+D,EAAG1iD,EAAIo9C,EAAWn0B,WAAa,GAC1Ey5B,EAAG1iD,GAAKo9C,EAAWn0B,WAAazvB,EAAQ4kD,cAG9C,CAEA/pB,eAAequB,EAAItkD,EAAK2lD,EAAavqD,GACnC,MAAM,OAACklD,EAAM,OAAEF,GAAUttD,MACnB,EAACzM,EAAAA,EAAGub,GAAK0iD,GACT,MAACh1C,EAAAA,OAAOD,GAAUs2C,GAClB,QAACvV,EAAAA,SAASC,EAAAA,WAAUC,EAAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc70C,EAAQ2lD,cAE3E/gD,EAAIiT,UAAY7X,EAAQlZ,gBACxB8d,EAAIkT,YAAc9X,EAAQ+X,YAC1BnT,EAAIqT,UAAYjY,EAAQkY,YAExBtT,EAAI02B,YACJ12B,EAAI22B,OAAOtwC,EAAI+pD,EAASxuC,GACT,QAAXw+C,GACFttD,KAAKgxD,UAAUQ,EAAItkD,EAAK2lD,EAAavqD,GAEvC4E,EAAI42B,OAAOvwC,EAAIipB,EAAQ+gC,EAAUzuC,GACjC5B,EAAI4lD,iBAAiBv/D,EAAIipB,EAAO1N,EAAGvb,EAAIipB,EAAO1N,EAAIyuC,GACnC,WAAX+P,GAAkC,UAAXE,GACzBxtD,KAAKgxD,UAAUQ,EAAItkD,EAAK2lD,EAAavqD,GAEvC4E,EAAI42B,OAAOvwC,EAAIipB,EAAO1N,EAAIyN,EAASkhC,GACnCvwC,EAAI4lD,iBAAiBv/D,EAAIipB,EAAO1N,EAAIyN,EAAQhpB,EAAIipB,EAAQihC,EAAa3uC,EAAIyN,GAC1D,WAAX+wC,GACFttD,KAAKgxD,UAAUQ,EAAItkD,EAAK2lD,EAAavqD,GAEvC4E,EAAI42B,OAAOvwC,EAAIiqD,EAAY1uC,EAAIyN,GAC/BrP,EAAI4lD,iBAAiBv/D,EAAGub,EAAIyN,EAAQhpB,EAAGub,EAAIyN,EAASihC,GACrC,WAAX8P,GAAkC,SAAXE,GACzBxtD,KAAKgxD,UAAUQ,EAAItkD,EAAK2lD,EAAavqD,GAEvC4E,EAAI42B,OAAOvwC,EAAGub,EAAIwuC,GAClBpwC,EAAI4lD,iBAAiBv/D,EAAGub,EAAGvb,EAAI+pD,EAASxuC,GACxC5B,EAAI2qC,YAEJ3qC,EAAIoB,OAEAhG,EAAQkY,YAAc,GACxBtT,EAAI62B,QAER,CAMAgvB,uBAAuBzqD,GACrB,MAAMlG,EAAQpC,KAAKoC,MACbC,EAAQrC,KAAKwI,YACbwqD,EAAQ3wD,GAASA,EAAM9O,EACvB0/D,EAAQ5wD,GAASA,EAAMyM,EAC7B,GAAIkkD,GAASC,EAAO,CAClB,MAAMhqC,EAAW+hC,GAAY1iD,EAAQ2gB,UAAUiR,KAAKl6B,KAAMA,KAAK0D,QAAS1D,KAAK0vD,gBAC7E,IAAKzmC,EACH,OAEF,MAAM9f,EAAOnJ,KAAK2vD,MAAQ9D,GAAe7rD,KAAMsI,GACzCuoD,EAAkBxyD,OAAOqB,OAAO,CAAC,EAAGupB,EAAUjpB,KAAK2vD,OACnD3B,EAAYH,GAAmBzrD,EAAOkG,EAASuoD,GAC/C9xC,EAAQgvC,GAAmBzlD,EAASuoD,EAAiB7C,EAAW5rD,GAClE4wD,EAAMvsD,MAAQsY,EAAMxrB,GAAK0/D,EAAMxsD,MAAQsY,EAAMjQ,IAC/C9O,KAAKwtD,OAASQ,EAAUR,OACxBxtD,KAAKstD,OAASU,EAAUV,OACxBttD,KAAKwc,MAAQrT,EAAKqT,MAClBxc,KAAKuc,OAASpT,EAAKoT,OACnBvc,KAAK+vD,OAAS9mC,EAAS11B,EACvByM,KAAKgwD,OAAS/mC,EAASna,EACvB9O,KAAK+V,qBAAqBnP,OAAO5G,KAAM+e,IAG7C,CAMAm0C,cACE,QAASlzD,KAAKyvD,OAChB,CAEAhsD,KAAKyJ,GACH,MAAM5E,EAAUtI,KAAKsI,QAAQixB,WAAWv5B,KAAKoR,cAC7C,IAAIq+C,EAAUzvD,KAAKyvD,QAEnB,IAAKA,EACH,OAGFzvD,KAAK+yD,uBAAuBzqD,GAE5B,MAAMuqD,EAAc,CAClBr2C,MAAOxc,KAAKwc,MACZD,OAAQvc,KAAKuc,QAETi1C,EAAK,CACTj+D,EAAGyM,KAAKzM,EACRub,EAAG9O,KAAK8O,GAIV2gD,EAAU/gE,KAAKuqB,IAAIw2C,GAAW,KAAO,EAAIA,EAEzC,MAAMvhC,GAAUO,EAAAA,EAAAA,GAAUnmB,EAAQ4lB,SAG5BilC,EAAoBnzD,KAAK/R,MAAMQ,QAAUuR,KAAK2sD,WAAWl+D,QAAUuR,KAAK+rD,KAAKt9D,QAAUuR,KAAK4sD,UAAUn+D,QAAUuR,KAAKgsD,OAAOv9D,OAE9H6Z,EAAQ0tB,SAAWm9B,IACrBjmD,EAAIk2B,OACJl2B,EAAIkmD,YAAc3D,EAGlBzvD,KAAKmjC,eAAequB,EAAItkD,EAAK2lD,EAAavqD,IAE1CkgD,EAAAA,EAAAA,IAAsBt7C,EAAK5E,EAAQmgD,eAEnC+I,EAAG1iD,GAAKof,EAAQpa,IAGhB9T,KAAKwkC,UAAUgtB,EAAItkD,EAAK5E,GAGxBtI,KAAKmyD,SAASX,EAAItkD,EAAK5E,GAGvBtI,KAAK0yD,WAAWlB,EAAItkD,EAAK5E,IAEzBihD,EAAAA,EAAAA,IAAqBr8C,EAAK5E,EAAQmgD,eAElCv7C,EAAIo2B,UAER,CAMA6Q,oBACE,OAAOn0C,KAAK0D,SAAW,EACzB,CAOA0wC,kBAAkBC,EAAgB6W,GAChC,MAAM5W,EAAat0C,KAAK0D,QAClBiD,EAAS0tC,EAAe/lD,KAAI,EAAEgc,eAAcN,YAChD,MAAMW,EAAO3K,KAAKoC,MAAM2N,eAAezF,GAEvC,IAAKK,EACH,MAAM,IAAI+c,MAAM,kCAAoCpd,GAGtD,MAAO,CACLA,eACAoK,QAAS/J,EAAK1b,KAAK+a,GACnBA,QACF,IAEI8jB,IAAWymB,EAAAA,EAAAA,IAAeD,EAAY3tC,GACtC0sD,EAAkBrzD,KAAKszD,iBAAiB3sD,EAAQukD,IAElDp9B,GAAWulC,KACbrzD,KAAK0D,QAAUiD,EACf3G,KAAK0vD,eAAiBxE,EACtBlrD,KAAKuzD,qBAAsB,EAC3BvzD,KAAK4G,QAAO,GAEhB,CASAkjD,YAAYl5D,EAAG6jD,EAAQK,GAAc,GACnC,GAAIL,GAAUz0C,KAAKuzD,oBACjB,OAAO,EAETvzD,KAAKuzD,qBAAsB,EAE3B,MAAMjrD,EAAUtI,KAAKsI,QACfgsC,EAAat0C,KAAK0D,SAAW,GAC7BiD,EAAS3G,KAAKi1C,mBAAmBrkD,EAAG0jD,EAAYG,EAAQK,GAKxDue,EAAkBrzD,KAAKszD,iBAAiB3sD,EAAQ/V,GAGhDk9B,EAAU2mB,KAAWF,EAAAA,EAAAA,IAAe5tC,EAAQ2tC,IAAe+e,EAgBjE,OAbIvlC,IACF9tB,KAAK0D,QAAUiD,GAEX2B,EAAQ0tB,SAAW1tB,EAAQyoD,YAC7B/wD,KAAK0vD,eAAiB,CACpBn8D,EAAG3C,EAAE2C,EACLub,EAAGle,EAAEke,GAGP9O,KAAK4G,QAAO,EAAM6tC,KAIf3mB,CACT,CAWAmnB,mBAAmBrkD,EAAG0jD,EAAYG,EAAQK,GACxC,MAAMxsC,EAAUtI,KAAKsI,QAErB,GAAe,aAAX1X,EAAE5B,KACJ,MAAO,GAGT,IAAK8lD,EAEH,OAAOR,EAIT,MAAM3tC,EAAS3G,KAAKoC,MAAM8wC,0BAA0BtiD,EAAG0X,EAAQ+B,KAAM/B,EAASmsC,GAM9E,OAJInsC,EAAQmB,SACV9C,EAAO8C,UAGF9C,CACT,CASA2sD,iBAAiB3sD,EAAQ/V,GACvB,MAAM,OAACm/D,EAAAA,OAAQC,EAAAA,QAAQ1nD,GAAWtI,KAC5BipB,EAAW+hC,GAAY1iD,EAAQ2gB,UAAUiR,KAAKl6B,KAAM2G,EAAQ/V,GAClE,OAAoB,IAAbq4B,IAAuB8mC,IAAW9mC,EAAS11B,GAAKy8D,IAAW/mC,EAASna,EAC7E,EAGF,OAAe,CACbvgB,GAAI,UACJ47D,SAAUqF,GACVxE,eAEAwI,UAAUpxD,EAAO28C,EAAOz2C,GAClBA,IACFlG,EAAM0pD,QAAU,IAAI0D,GAAQ,CAACptD,QAAOkG,YAExC,EAEA2xB,aAAa73B,EAAO28C,EAAOz2C,GACrBlG,EAAM0pD,SACR1pD,EAAM0pD,QAAQ59C,WAAW5F,EAE7B,EAEA4H,MAAM9N,EAAO28C,EAAOz2C,GACdlG,EAAM0pD,SACR1pD,EAAM0pD,QAAQ59C,WAAW5F,EAE7B,EAEAmrD,UAAUrxD,GACR,MAAM0pD,EAAU1pD,EAAM0pD,QAEtB,GAAIA,GAAWA,EAAQoH,cAAe,CACpC,MAAMr7C,EAAO,CACXi0C,WAGF,IAA8E,IAA1E1pD,EAAM25B,cAAc,oBAAqB,IAAIlkB,EAAMmxB,YAAY,IACjE,OAGF8iB,EAAQroD,KAAKrB,EAAM8K,KAEnB9K,EAAM25B,cAAc,mBAAoBlkB,GAE5C,EAEAuyC,WAAWhoD,EAAOyV,GAChB,GAAIzV,EAAM0pD,QAAS,CAEjB,MAAMziC,EAAmBxR,EAAK48B,OAC1BryC,EAAM0pD,QAAQhC,YAAYjyC,EAAKzT,MAAOilB,EAAkBxR,EAAKi9B,eAE/Dj9B,EAAKiW,SAAU,GAGrB,EAEAjmB,SAAU,CACRmuB,SAAS,EACT+6B,SAAU,KACV9nC,SAAU,UACV75B,gBAAiB,kBACjBqiE,WAAY,OACZjI,UAAW,CACTjpD,OAAQ,QAEVssD,aAAc,EACdC,kBAAmB,EACnB90B,WAAY,OACZk3B,UAAW,OACXlC,YAAa,EACbf,SAAU,CAAC,EAEXmG,UAAW,OACXQ,YAAa,OACb1F,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACV3rD,OAAQ,QAEVoyD,YAAa,OACbzkC,QAAS,EACTy/B,aAAc,EACdD,UAAW,EACXO,aAAc,EACdtI,UAAW,CAACz4C,EAAK1D,IAASA,EAAKyiD,SAAS9iD,KACxCy8C,SAAU,CAAC14C,EAAK1D,IAASA,EAAKyiD,SAAS9iD,KACvC4oD,mBAAoB,OACpBhF,eAAe,EACfpgC,WAAY,EACZtM,YAAa,gBACbG,YAAa,EACbtX,UAAW,CACTzG,SAAU,IACVuD,OAAQ,gBAEV0C,WAAY,CACVwS,QAAS,CACPlsB,KAAM,SACNkZ,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtDunD,QAAS,CACPzpD,OAAQ,SACRvD,SAAU,MAGdH,UAAWksD,IAGbzoB,cAAe,CACbkmB,SAAU,OACVC,WAAY,OACZ1C,UAAW,QAGb7iB,YAAa,CACXjnB,YAAc1C,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnE2C,YAAY,EACZrd,UAAW,CACTod,aAAa,EACbC,YAAY,GAEdzW,UAAW,CACTwqD,WAAW,GAEbhrD,WAAY,CACVgrD,UAAW,cAKfxnB,uBAAwB,CAAC,+HC5yC3B,SAASynB,GAAezkE,EAAQgmB,EAAKlL,EAAO4pD,GAC1C,MAAMx9B,EAAQlnC,EAAO2tB,QAAQ3H,GAC7B,IAAe,IAAXkhB,EACF,MAbgB,EAAClnC,EAAQgmB,EAAKlL,EAAO4pD,KACpB,iBAAR1+C,GACTlL,EAAQ9a,EAAOoV,KAAK4Q,GAAO,EAC3B0+C,EAAY7Q,QAAQ,CAAC/4C,QAAO2J,MAAOuB,KAC1B0H,MAAM1H,KACflL,EAAQ,MAEHA,GAME6pD,CAAY3kE,EAAQgmB,EAAKlL,EAAO4pD,GAGzC,OAAOx9B,IADMlnC,EAAO4kE,YAAY5+C,GACRlL,EAAQosB,CAClC,CAIA,SAAS29B,GAAkB9qD,GACzB,MAAM/Z,EAAS8Q,KAAK+R,YAEpB,OAAI9I,GAAS,GAAKA,EAAQ/Z,EAAOT,OACxBS,EAAO+Z,GAETA,CACT,CAEe,MAAM+qD,WAAsB57B,GAEzCprB,UAAY,WAKZA,gBAAkB,CAChBmM,MAAO,CACL+iB,SAAU63B,KAIdj0D,YAAY0F,GACVkW,MAAMlW,GAGNxF,KAAKi0D,iBAActiE,EACnBqO,KAAKk0D,YAAc,EACnBl0D,KAAKm0D,aAAe,EACtB,CAEArsC,KAAKqiB,GACH,MAAMiqB,EAAQp0D,KAAKm0D,aACnB,GAAIC,EAAM3lE,OAAQ,CAChB,MAAMS,EAAS8Q,KAAK+R,YACpB,IAAK,MAAM,MAAC/H,EAAAA,MAAO2J,KAAUygD,EACvBllE,EAAO8a,KAAW2J,GACpBzkB,EAAOyoB,OAAO3N,EAAO,GAGzBhK,KAAKm0D,aAAe,GAEtBz4C,MAAMoM,KAAKqiB,EACb,CAEA74B,MAAM4D,EAAKlL,GACT,IAAIiS,EAAAA,EAAAA,GAAc/G,GAChB,OAAO,KAET,MAAMhmB,EAAS8Q,KAAK+R,YAGpB,MAtDe,EAAC/H,EAAOrb,IAAkB,OAAVqb,EAAiB,MAAOgzB,EAAAA,EAAAA,GAAYtuC,KAAKY,MAAM0a,GAAQ,EAAGrb,GAsDlF2oC,CAFPttB,EAAQQ,SAASR,IAAU9a,EAAO8a,KAAWkL,EAAMlL,EAC/C2pD,GAAezkE,EAAQgmB,GAAKjG,EAAAA,EAAAA,GAAejF,EAAOkL,GAAMlV,KAAKm0D,cACxCjlE,EAAOT,OAAS,EAC3C,CAEAisC,sBACE,MAAM,WAACtnB,EAAAA,WAAYC,GAAcrT,KAAKsT,gBACtC,IAAI,IAAC3jB,EAAG,IAAEhB,GAAOqR,KAAK0S,WAAU,GAEJ,UAAxB1S,KAAKsI,QAAQw0C,SACV1pC,IACHzjB,EAAM,GAEH0jB,IACH1kB,EAAMqR,KAAK+R,YAAYtjB,OAAS,IAIpCuR,KAAKrQ,IAAMA,EACXqQ,KAAKrR,IAAMA,CACb,CAEAmsC,aACE,MAAMnrC,EAAMqQ,KAAKrQ,IACXhB,EAAMqR,KAAKrR,IACXysB,EAASpb,KAAKsI,QAAQ8S,OACtBjC,EAAQ,GACd,IAAIjqB,EAAS8Q,KAAK+R,YAGlB7iB,EAAkB,IAAT,GAAcP,IAAQO,EAAOT,OAAS,EAAKS,EAASA,EAAO4hD,MAAMnhD,EAAKhB,EAAM,GAErFqR,KAAKk0D,YAAcxlE,KAAKC,IAAIO,EAAOT,QAAU2sB,EAAS,EAAI,GAAI,GAC9Dpb,KAAKi0D,YAAcj0D,KAAKrQ,KAAOyrB,EAAS,GAAM,GAE9C,IAAK,IAAInS,EAAQtZ,EAAKsZ,GAASta,EAAKsa,IAClCkQ,EAAM7U,KAAK,CAAC2E,UAEd,OAAOkQ,CACT,CAEAvF,iBAAiB3K,GACf,OAAO8qD,GAAkB75B,KAAKl6B,KAAMiJ,EACtC,CAKAvB,YACEgU,MAAMhU,YAED1H,KAAK6b,iBAER7b,KAAKyoB,gBAAkBzoB,KAAKyoB,eAEhC,CAGAvP,iBAAiBjQ,GAKf,MAJqB,iBAAVA,IACTA,EAAQjJ,KAAKsR,MAAMrI,IAGJ,OAAVA,EAAiBwJ,IAAMzS,KAAK6d,oBAAoB5U,EAAQjJ,KAAKi0D,aAAej0D,KAAKk0D,YAC1F,CAIA96C,gBAAgBpP,GACd,MAAMmP,EAAQnZ,KAAKmZ,MACnB,OAAInP,EAAQ,GAAKA,EAAQmP,EAAM1qB,OAAS,EAC/B,KAEFuR,KAAKkZ,iBAAiBC,EAAMnP,GAAOf,MAC5C,CAEA8U,iBAAiBqhB,GACf,OAAO1wC,KAAKY,MAAM0Q,KAAKi0D,YAAcj0D,KAAKw/B,mBAAmBJ,GAASp/B,KAAKk0D,YAC7E,CAEAt4C,eACE,OAAO5b,KAAKgU,MACd,ECdF,SAASqgD,GAAkBprD,EAAOqrD,GAAY,WAACn6C,EAAU,YAAEkiB,IACzD,MAAMk4B,GAAMrzC,EAAAA,EAAAA,GAAUmb,GAChB/8B,GAAS6a,EAAazrB,KAAK2zB,IAAIkyC,GAAO7lE,KAAKyzB,IAAIoyC,KAAS,KACxD9lE,EAAS,IAAO6lE,GAAc,GAAKrrD,GAAOxa,OAChD,OAAOC,KAAKiB,IAAI2kE,EAAah1D,EAAO7Q,EACtC,CAEe,MAAM+lE,WAAwBp8B,GAE3Ct4B,YAAY0F,GACVkW,MAAMlW,GAGNxF,KAAK8C,WAAQnR,EAEbqO,KAAK0J,SAAM/X,EAEXqO,KAAKi0D,iBAActiE,EAEnBqO,KAAKy0D,eAAY9iE,EACjBqO,KAAKk0D,YAAc,CACrB,CAEA5iD,MAAM4D,EAAKlL,GACT,OAAIiS,EAAAA,EAAAA,GAAc/G,KAGE,iBAARA,GAAoBA,aAAenC,UAAYvI,UAAU0K,GAF5D,MAMDA,CACV,CAEAw/C,yBACE,MAAM,YAACn5C,GAAevb,KAAKsI,SACrB,WAAC8K,EAAAA,WAAYC,GAAcrT,KAAKsT,gBACtC,IAAI,IAAC3jB,EAAG,IAAEhB,GAAOqR,KAEjB,MAAM20D,EAASplE,GAAMI,EAAMyjB,EAAazjB,EAAMJ,EACxCqlE,EAASrlE,GAAMZ,EAAM0kB,EAAa1kB,EAAMY,EAE9C,GAAIgsB,EAAa,CACf,MAAMs5C,GAAUpqD,EAAAA,EAAAA,GAAK9a,GACfmlE,GAAUrqD,EAAAA,EAAAA,GAAK9b,GAEjBkmE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAIX,GAAIhlE,IAAQhB,EAAK,CACf,IAAIysB,EAAiB,IAARzsB,EAAY,EAAID,KAAKuqB,IAAU,IAANtqB,GAEtCimE,EAAOjmE,EAAMysB,GAERG,GACHo5C,EAAOhlE,EAAMyrB,GAGjBpb,KAAKrQ,IAAMA,EACXqQ,KAAKrR,IAAMA,CACb,CAEAomE,eACE,MAAM3/B,EAAWp1B,KAAKsI,QAAQ6Q,MAE9B,IACI67C,GADA,cAACn/B,EAAAA,SAAeo/B,GAAY7/B,EAkBhC,OAfI6/B,GACFD,EAAWtmE,KAAK4nC,KAAKt2B,KAAKrR,IAAMsmE,GAAYvmE,KAAKwX,MAAMlG,KAAKrQ,IAAMslE,GAAY,EAC1ED,EAAW,MACbxmD,QAAQC,KAAK,UAAUzO,KAAKzR,sBAAsB0mE,mCAA0CD,8BAC5FA,EAAW,OAGbA,EAAWh1D,KAAKk1D,mBAChBr/B,EAAgBA,GAAiB,IAG/BA,IACFm/B,EAAWtmE,KAAKiB,IAAIkmC,EAAem/B,IAG9BA,CACT,CAKAE,mBACE,OAAOniD,OAAOC,iBAChB,CAEA8nB,aACE,MAAMtxB,EAAOxJ,KAAKsI,QACZ8sB,EAAW5rB,EAAK2P,MAMtB,IAAI67C,EAAWh1D,KAAK+0D,eACpBC,EAAWtmE,KAAKC,IAAI,EAAGqmE,GAEvB,MAcM77C,EAhPV,SAAuBg8C,EAAmBC,GACxC,MAAMj8C,EAAQ,IAMR,OAAC2jC,EAAM,KAAE7b,EAAAA,IAAMtxC,EAAAA,IAAKhB,EAAG,UAAE0mE,EAAAA,MAAW9jD,EAAAA,SAAOyjD,EAAQ,UAAEM,EAAAA,cAAWC,GAAiBJ,EACjFK,EAAOv0B,GAAQ,EACfw0B,EAAYT,EAAW,GACtBrlE,IAAK+lE,EAAM/mE,IAAKgnE,GAAQP,EACzBhiD,IAAc6I,EAAAA,EAAAA,GAActsB,GAC5B0jB,IAAc4I,EAAAA,EAAAA,GAActtB,GAC5BinE,IAAgB35C,EAAAA,EAAAA,GAAc1K,GAC9B+iD,GAAcqB,EAAOD,IAASJ,EAAY,GAChD,IACInwD,EAAQ0wD,EAASC,EAASC,EAD1Bt2C,GAAUu2C,EAAAA,EAAAA,KAASL,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAI/1C,EAdgB,QAcUrM,IAAeC,EAC3C,MAAO,CAAC,CAACpK,MAAOysD,GAAO,CAACzsD,MAAO0sD,IAGjCI,EAAYrnE,KAAK4nC,KAAKq/B,EAAOl2C,GAAW/wB,KAAKwX,MAAMwvD,EAAOj2C,GACtDs2C,EAAYN,IAEdh2C,GAAUu2C,EAAAA,EAAAA,IAAQD,EAAYt2C,EAAUg2C,EAAYD,GAAQA,IAGzDv5C,EAAAA,EAAAA,GAAco5C,KAEjBlwD,EAASzW,KAAKyQ,IAAI,GAAIk2D,GACtB51C,EAAU/wB,KAAK4nC,KAAK7W,EAAUta,GAAUA,GAG3B,UAAX23C,GACF+Y,EAAUnnE,KAAKwX,MAAMwvD,EAAOj2C,GAAWA,EACvCq2C,EAAUpnE,KAAK4nC,KAAKq/B,EAAOl2C,GAAWA,IAEtCo2C,EAAUH,EACVI,EAAUH,GAGRviD,GAAcC,GAAc4tB,IAAQg1B,EAAAA,EAAAA,KAAatnE,EAAMgB,GAAOsxC,EAAMxhB,EAAU,MAKhFs2C,EAAYrnE,KAAKY,MAAMZ,KAAKiB,KAAKhB,EAAMgB,GAAO8vB,EAASu1C,IACvDv1C,GAAW9wB,EAAMgB,GAAOomE,EACxBF,EAAUlmE,EACVmmE,EAAUnnE,GACDinE,GAITC,EAAUziD,EAAazjB,EAAMkmE,EAC7BC,EAAUziD,EAAa1kB,EAAMmnE,EAC7BC,EAAYxkD,EAAQ,EACpBkO,GAAWq2C,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAWp2C,EAIhCs2C,GADEG,EAAAA,EAAAA,IAAaH,EAAWrnE,KAAKY,MAAMymE,GAAYt2C,EAAU,KAC/C/wB,KAAKY,MAAMymE,GAEXrnE,KAAK4nC,KAAKy/B,IAM1B,MAAMI,EAAgBznE,KAAKC,KACzBynE,EAAAA,EAAAA,IAAe32C,IACf22C,EAAAA,EAAAA,IAAeP,IAEjB1wD,EAASzW,KAAKyQ,IAAI,IAAI8c,EAAAA,EAAAA,GAAco5C,GAAac,EAAgBd,GACjEQ,EAAUnnE,KAAKY,MAAMumE,EAAU1wD,GAAUA,EACzC2wD,EAAUpnE,KAAKY,MAAMwmE,EAAU3wD,GAAUA,EAEzC,IAAI5G,EAAI,EAiBR,IAhBI6U,IACEmiD,GAAiBM,IAAYlmE,GAC/BwpB,EAAM7U,KAAK,CAAC2E,MAAOtZ,IAEfkmE,EAAUlmE,GACZ4O,KAGE23D,EAAAA,EAAAA,IAAaxnE,KAAKY,OAAOumE,EAAUt3D,EAAIkhB,GAAWta,GAAUA,EAAQxV,EAAK0kE,GAAkB1kE,EAAK2kE,EAAYa,KAC9G52D,KAEOs3D,EAAUlmE,GACnB4O,KAIGA,EAAIw3D,IAAax3D,EACtB4a,EAAM7U,KAAK,CAAC2E,MAAOva,KAAKY,OAAOumE,EAAUt3D,EAAIkhB,GAAWta,GAAUA,IAcpE,OAXIkO,GAAckiD,GAAiBO,IAAYnnE,EAEzCwqB,EAAM1qB,SAAUynE,EAAAA,EAAAA,IAAa/8C,EAAMA,EAAM1qB,OAAS,GAAGwa,MAAOta,EAAK0lE,GAAkB1lE,EAAK2lE,EAAYa,IACtGh8C,EAAMA,EAAM1qB,OAAS,GAAGwa,MAAQta,EAEhCwqB,EAAM7U,KAAK,CAAC2E,MAAOta,IAEX0kB,GAAcyiD,IAAYnnE,GACpCwqB,EAAM7U,KAAK,CAAC2E,MAAO6sD,IAGd38C,CACT,CA4HkBk9C,CAdkB,CAC9BrB,WACAlY,OAAQtzC,EAAKszC,OACbntD,IAAK6Z,EAAK7Z,IACVhB,IAAK6a,EAAK7a,IACV0mE,UAAWjgC,EAASigC,UACpBp0B,KAAM7L,EAAS6/B,SACf1jD,MAAO6jB,EAAS7jB,MAChB+jD,UAAWt1D,KAAKilC,aAChB9qB,WAAYna,KAAK6b,eACjBwgB,YAAajH,EAASiH,aAAe,EACrCk5B,eAA0C,IAA3BngC,EAASmgC,eAERv1D,KAAK24B,QAAU34B,MAmBjC,MAdoB,UAAhBwJ,EAAKszC,SACPwZ,EAAAA,EAAAA,IAAmBn9C,EAAOnZ,KAAM,SAG9BwJ,EAAKC,SACP0P,EAAM1P,UAENzJ,KAAK8C,MAAQ9C,KAAKrR,IAClBqR,KAAK0J,IAAM1J,KAAKrQ,MAEhBqQ,KAAK8C,MAAQ9C,KAAKrQ,IAClBqQ,KAAK0J,IAAM1J,KAAKrR,KAGXwqB,CACT,CAKAzR,YACE,MAAMyR,EAAQnZ,KAAKmZ,MACnB,IAAIrW,EAAQ9C,KAAKrQ,IACb+Z,EAAM1J,KAAKrR,IAIf,GAFA+sB,MAAMhU,YAEF1H,KAAKsI,QAAQ8S,QAAUjC,EAAM1qB,OAAQ,CACvC,MAAM2sB,GAAU1R,EAAM5G,GAASpU,KAAKC,IAAIwqB,EAAM1qB,OAAS,EAAG,GAAK,EAC/DqU,GAASsY,EACT1R,GAAO0R,EAETpb,KAAKi0D,YAAcnxD,EACnB9C,KAAKy0D,UAAY/qD,EACjB1J,KAAKk0D,YAAcxqD,EAAM5G,CAC3B,CAEA8Q,iBAAiB3K,GACf,OAAOkb,EAAAA,EAAAA,GAAalb,EAAOjJ,KAAKoC,MAAMkG,QAAQ8b,OAAQpkB,KAAKsI,QAAQ6Q,MAAM6O,OAC3E,EC9Sa,MAAMuuC,WAAoB/B,GAEvCxnD,UAAY,SAKZA,gBAAkB,CAChBmM,MAAO,CACL+iB,SAAUs6B,EAAAA,GAAAA,WAAAA,UAKd97B,sBACE,MAAM,IAAC/qC,EAAG,IAAEhB,GAAOqR,KAAK0S,WAAU,GAElC1S,KAAKrQ,KAAM6a,EAAAA,EAAAA,GAAS7a,GAAOA,EAAM,EACjCqQ,KAAKrR,KAAM6b,EAAAA,EAAAA,GAAS7b,GAAOA,EAAM,EAGjCqR,KAAK00D,wBACP,CAMAQ,mBACE,MAAM/6C,EAAana,KAAK6b,eAClBptB,EAAS0rB,EAAana,KAAKwc,MAAQxc,KAAKuc,OACxC8f,GAAcnb,EAAAA,EAAAA,GAAUlhB,KAAKsI,QAAQ6Q,MAAMkjB,aAC3C/8B,GAAS6a,EAAazrB,KAAK2zB,IAAIga,GAAe3tC,KAAKyzB,IAAIka,KAAiB,KACxEkC,EAAWv+B,KAAK4+B,wBAAwB,GAC9C,OAAOlwC,KAAK4nC,KAAK7nC,EAASC,KAAKiB,IAAI,GAAI4uC,EAASxG,WAAaz4B,GAC/D,CAGA4Z,iBAAiBjQ,GACf,OAAiB,OAAVA,EAAiBwJ,IAAMzS,KAAK6d,oBAAoB5U,EAAQjJ,KAAKi0D,aAAej0D,KAAKk0D,YAC1F,CAEAn2C,iBAAiBqhB,GACf,OAAOp/B,KAAKi0D,YAAcj0D,KAAKw/B,mBAAmBJ,GAASp/B,KAAKk0D,WAClE,EC1CF,MAAMuC,GAAalnE,GAAKb,KAAKwX,OAAMwwD,EAAAA,EAAAA,IAAMnnE,IACnConE,GAAiB,CAACpnE,EAAGyD,IAAMtE,KAAKyQ,IAAI,GAAIs3D,GAAWlnE,GAAKyD,GAE9D,SAAS4jE,GAAQC,GAEf,OAAkB,IADHA,EAAWnoE,KAAKyQ,IAAI,GAAIs3D,GAAWI,GAEpD,CAEA,SAASC,GAAMnnE,EAAKhB,EAAKooE,GACvB,MAAMC,EAAYtoE,KAAKyQ,IAAI,GAAI43D,GACzBj0D,EAAQpU,KAAKwX,MAAMvW,EAAMqnE,GAE/B,OADYtoE,KAAK4nC,KAAK3nC,EAAMqoE,GACfl0D,CACf,CAqBA,SAASuzD,GAAclB,GAAmB,IAACxlE,EAAG,IAAEhB,IAC9CgB,GAAM+pC,EAAAA,EAAAA,GAAgBy7B,EAAkBxlE,IAAKA,GAC7C,MAAMwpB,EAAQ,GACR89C,EAASR,GAAW9mE,GAC1B,IAAIunE,EAvBN,SAAkBvnE,EAAKhB,GAErB,IAAIooE,EAAWN,GADD9nE,EAAMgB,GAEpB,KAAOmnE,GAAMnnE,EAAKhB,EAAKooE,GAAY,IACjCA,IAEF,KAAOD,GAAMnnE,EAAKhB,EAAKooE,GAAY,IACjCA,IAEF,OAAOroE,KAAKiB,IAAIonE,EAAUN,GAAW9mE,GACvC,CAaYwnE,CAASxnE,EAAKhB,GACpB0mE,EAAY6B,EAAM,EAAIxoE,KAAKyQ,IAAI,GAAIzQ,KAAKuqB,IAAIi+C,IAAQ,EACxD,MAAMjC,EAAWvmE,KAAKyQ,IAAI,GAAI+3D,GACxB98C,EAAO68C,EAASC,EAAMxoE,KAAKyQ,IAAI,GAAI83D,GAAU,EAC7Cn0D,EAAQpU,KAAKY,OAAOK,EAAMyqB,GAAQi7C,GAAaA,EAC/Cj6C,EAAS1sB,KAAKwX,OAAOvW,EAAMyqB,GAAQ66C,EAAW,IAAMA,EAAW,GACrE,IAAImC,EAAc1oE,KAAKwX,OAAOpD,EAAQsY,GAAU1sB,KAAKyQ,IAAI,GAAI+3D,IACzDjuD,GAAQywB,EAAAA,EAAAA,GAAgBy7B,EAAkBxlE,IAAKjB,KAAKY,OAAO8qB,EAAOgB,EAASg8C,EAAc1oE,KAAKyQ,IAAI,GAAI+3D,IAAQ7B,GAAaA,GAC/H,KAAOpsD,EAAQta,GACbwqB,EAAM7U,KAAK,CAAC2E,QAAO8sB,MAAO6gC,GAAQ3tD,GAAQmuD,gBACtCA,GAAe,GACjBA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEEA,GAAe,KACjBF,IACAE,EAAc,EACd/B,EAAY6B,GAAO,EAAI,EAAI7B,GAE7BpsD,EAAQva,KAAKY,OAAO8qB,EAAOgB,EAASg8C,EAAc1oE,KAAKyQ,IAAI,GAAI+3D,IAAQ7B,GAAaA,EAEtF,MAAMgC,GAAW39B,EAAAA,EAAAA,GAAgBy7B,EAAkBxmE,IAAKsa,GAGxD,OAFAkQ,EAAM7U,KAAK,CAAC2E,MAAOouD,EAAUthC,MAAO6gC,GAAQS,GAAWD,gBAEhDj+C,CACT,CAEe,MAAMm+C,WAAyBl/B,GAE5CprB,UAAY,cAKZA,gBAAkB,CAChBmM,MAAO,CACL+iB,SAAUs6B,EAAAA,GAAAA,WAAAA,YACVzgC,MAAO,CACLC,SAAS,KAMfl2B,YAAY0F,GACVkW,MAAMlW,GAGNxF,KAAK8C,WAAQnR,EAEbqO,KAAK0J,SAAM/X,EAEXqO,KAAKi0D,iBAActiE,EACnBqO,KAAKk0D,YAAc,CACrB,CAEA5iD,MAAM4D,EAAKlL,GACT,MAAMf,EAAQurD,GAAgB3sC,UAAUvW,MAAMk6C,MAAMxrD,KAAM,CAACkV,EAAKlL,IAChE,GAAc,IAAVf,EAIJ,OAAOuB,EAAAA,EAAAA,GAASvB,IAAUA,EAAQ,EAAIA,EAAQ,KAH5CjJ,KAAKu3D,OAAQ,CAIjB,CAEA78B,sBACE,MAAM,IAAC/qC,EAAG,IAAEhB,GAAOqR,KAAK0S,WAAU,GAElC1S,KAAKrQ,KAAM6a,EAAAA,EAAAA,GAAS7a,GAAOjB,KAAKC,IAAI,EAAGgB,GAAO,KAC9CqQ,KAAKrR,KAAM6b,EAAAA,EAAAA,GAAS7b,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAE1CqR,KAAKsI,QAAQiT,cACfvb,KAAKu3D,OAAQ,GAKXv3D,KAAKu3D,OAASv3D,KAAKrQ,MAAQqQ,KAAKm5B,iBAAkB3uB,EAAAA,EAAAA,GAASxK,KAAKi5B,YAClEj5B,KAAKrQ,IAAMA,IAAQgnE,GAAe32D,KAAKrQ,IAAK,GAAKgnE,GAAe32D,KAAKrQ,KAAM,GAAKgnE,GAAe32D,KAAKrQ,IAAK,IAG3GqQ,KAAK00D,wBACP,CAEAA,yBACE,MAAM,WAACthD,EAAAA,WAAYC,GAAcrT,KAAKsT,gBACtC,IAAI3jB,EAAMqQ,KAAKrQ,IACXhB,EAAMqR,KAAKrR,IAEf,MAAMgmE,EAASplE,GAAMI,EAAMyjB,EAAazjB,EAAMJ,EACxCqlE,EAASrlE,GAAMZ,EAAM0kB,EAAa1kB,EAAMY,EAE1CI,IAAQhB,IACNgB,GAAO,GACTglE,EAAO,GACPC,EAAO,MAEPD,EAAOgC,GAAehnE,GAAM,IAC5BilE,EAAO+B,GAAehoE,EAAK,MAG3BgB,GAAO,GACTglE,EAAOgC,GAAehoE,GAAM,IAE1BA,GAAO,GAETimE,EAAO+B,GAAehnE,EAAK,IAG7BqQ,KAAKrQ,IAAMA,EACXqQ,KAAKrR,IAAMA,CACb,CAEAmsC,aACE,MAAMtxB,EAAOxJ,KAAKsI,QAMZ6Q,EAAQk9C,GAJY,CACxB1mE,IAAKqQ,KAAKi5B,SACVtqC,IAAKqR,KAAKg5B,UAEmCh5B,MAkB/C,MAdoB,UAAhBwJ,EAAKszC,SACPwZ,EAAAA,EAAAA,IAAmBn9C,EAAOnZ,KAAM,SAG9BwJ,EAAKC,SACP0P,EAAM1P,UAENzJ,KAAK8C,MAAQ9C,KAAKrR,IAClBqR,KAAK0J,IAAM1J,KAAKrQ,MAEhBqQ,KAAK8C,MAAQ9C,KAAKrQ,IAClBqQ,KAAK0J,IAAM1J,KAAKrR,KAGXwqB,CACT,CAMAvF,iBAAiB3K,GACf,YAAiBtX,IAAVsX,EACH,KACAkb,EAAAA,EAAAA,GAAalb,EAAOjJ,KAAKoC,MAAMkG,QAAQ8b,OAAQpkB,KAAKsI,QAAQ6Q,MAAM6O,OACxE,CAKAtgB,YACE,MAAM5E,EAAQ9C,KAAKrQ,IAEnB+rB,MAAMhU,YAEN1H,KAAKi0D,aAAcyC,EAAAA,EAAAA,IAAM5zD,GACzB9C,KAAKk0D,aAAcwC,EAAAA,EAAAA,IAAM12D,KAAKrR,MAAO+nE,EAAAA,EAAAA,IAAM5zD,EAC7C,CAEAoW,iBAAiBjQ,GAIf,YAHctX,IAAVsX,GAAiC,IAAVA,IACzBA,EAAQjJ,KAAKrQ,KAED,OAAVsZ,GAAkB2T,MAAM3T,GACnBwJ,IAEFzS,KAAK6d,mBAAmB5U,IAAUjJ,KAAKrQ,IAC1C,IACC+mE,EAAAA,EAAAA,IAAMztD,GAASjJ,KAAKi0D,aAAej0D,KAAKk0D,YAC/C,CAEAn2C,iBAAiBqhB,GACf,MAAMC,EAAUr/B,KAAKw/B,mBAAmBJ,GACxC,OAAO1wC,KAAKyQ,IAAI,GAAIa,KAAKi0D,YAAc50B,EAAUr/B,KAAKk0D,YACxD,ECxNF,SAASsD,GAAsBhuD,GAC7B,MAAM4rB,EAAW5rB,EAAK2P,MAEtB,GAAIic,EAASpP,SAAWxc,EAAKwc,QAAS,CACpC,MAAMkI,GAAUO,EAAAA,EAAAA,GAAU2G,EAAS2N,iBACnC,OAAO9zB,EAAAA,EAAAA,GAAemmB,EAASyC,MAAQzC,EAASyC,KAAK1uB,KAAMtB,EAAAA,EAAAA,KAAAA,MAAsBqmB,EAAQ3R,OAE3F,OAAO,CACT,CAUA,SAASk7C,GAAgBh1C,EAAO2I,EAAKjiB,EAAMxZ,EAAKhB,GAC9C,OAAI8zB,IAAU9yB,GAAO8yB,IAAU9zB,EACtB,CACLmU,MAAOsoB,EAAOjiB,EAAO,EACrBO,IAAK0hB,EAAOjiB,EAAO,GAEZsZ,EAAQ9yB,GAAO8yB,EAAQ9zB,EACzB,CACLmU,MAAOsoB,EAAMjiB,EACbO,IAAK0hB,GAIF,CACLtoB,MAAOsoB,EACP1hB,IAAK0hB,EAAMjiB,EAEf,CAKA,SAASuuD,GAAmBpuD,GA8B1B,MAAMkR,EAAO,CACX/qB,EAAG6Z,EAAM2K,KAAO3K,EAAMmhD,SAASx2C,KAC/B3iB,EAAGgY,EAAMyK,MAAQzK,EAAMmhD,SAAS12C,MAChCjT,EAAGwI,EAAMwK,IAAMxK,EAAMmhD,SAAS32C,IAC9BrjB,EAAG6Y,EAAM0K,OAAS1K,EAAMmhD,SAASz2C,QAE7B2jD,EAASt5D,OAAOqB,OAAO,CAAC,EAAG8a,GAC3BkiB,EAAa,GACbxO,EAAU,GACV0pC,EAAatuD,EAAMuuD,aAAappE,OAChCqpE,EAAiBxuD,EAAMhB,QAAQ4d,YAC/B6xC,EAAkBD,EAAeE,kBAAoBh1C,EAAAA,EAAK40C,EAAa,EAE7E,IAAK,IAAIvlE,EAAI,EAAGA,EAAIulE,EAAYvlE,IAAK,CACnC,MAAMmX,EAAOsuD,EAAev+B,WAAWjwB,EAAM2uD,qBAAqB5lE,IAClE67B,EAAQ77B,GAAKmX,EAAK0kB,QAClB,MAAM/G,EAAgB7d,EAAM4uD,iBAAiB7lE,EAAGiX,EAAM6uD,YAAcjqC,EAAQ77B,GAAI0lE,GAC1EK,GAAStgC,EAAAA,EAAAA,IAAOtuB,EAAKquB,MACrB6yB,GA9EgBx9C,EA8EY5D,EAAM4D,IA9Eb2qB,EA8EkBugC,EA9EZzkD,EA8EoBrK,EAAMuuD,aAAaxlE,GA7E1EshB,GAAQjhB,EAAAA,EAAAA,GAAQihB,GAASA,EAAQ,CAACA,GAC3B,CACLxhB,GAAGkmE,EAAAA,EAAAA,IAAanrD,EAAK2qB,EAAKgH,OAAQlrB,GAClCjkB,EAAGikB,EAAMllB,OAASopC,EAAKE,aA2EvB2E,EAAWrqC,GAAKq4D,EAEhB,MAAMntB,GAAeikB,EAAAA,EAAAA,IAAgBl4C,EAAMqd,cAAct0B,GAAK0lE,GACxDt1C,EAAQ/zB,KAAKY,OAAM2tC,EAAAA,EAAAA,GAAUM,IAGnC+6B,GAAaX,EAAQn9C,EAAM+iB,EAFXk6B,GAAgBh1C,EAAO0E,EAAc5zB,EAAGm3D,EAASv4D,EAAG,EAAG,KACvDslE,GAAgBh1C,EAAO0E,EAAcrY,EAAG47C,EAASh7D,EAAG,GAAI,KAE1E,CAtFF,IAA0Bwd,EAAK2qB,EAAMlkB,EAwFnCrK,EAAMivD,eACJ/9C,EAAK/qB,EAAIkoE,EAAOloE,EAChBkoE,EAAOrmE,EAAIkpB,EAAKlpB,EAChBkpB,EAAK1Z,EAAI62D,EAAO72D,EAChB62D,EAAOlnE,EAAI+pB,EAAK/pB,GAIlB6Y,EAAMkvD,iBAwBR,SAA8BlvD,EAAOozB,EAAYxO,GAC/C,MAAM3qB,EAAQ,GACRq0D,EAAatuD,EAAMuuD,aAAappE,OAChC+a,EAAOF,EAAMhB,QACbmwD,EAAQjB,GAAsBhuD,GAAQ,EACtCkvD,EAAgBpvD,EAAM6uD,YACtBJ,EAAkBvuD,EAAK0c,YAAY8xC,kBAAoBh1C,EAAAA,EAAK40C,EAAa,EAE/E,IAAK,IAAIvlE,EAAI,EAAGA,EAAIulE,EAAYvlE,IAAK,CACnC,MAAMsmE,EAAqBrvD,EAAM4uD,iBAAiB7lE,EAAGqmE,EAAgBD,EAAQvqC,EAAQ77B,GAAI0lE,GACnFt1C,EAAQ/zB,KAAKY,OAAM2tC,EAAAA,EAAAA,IAAUukB,EAAAA,EAAAA,IAAgBmX,EAAmBl2C,MAAQK,EAAAA,KACxE3Z,EAAOuzB,EAAWrqC,GAClByc,EAAI8pD,GAAUD,EAAmB7pD,EAAG3F,EAAKzZ,EAAG+yB,GAC5Csf,EAAY82B,GAAqBp2C,GACjCxO,EAAO6kD,GAAiBH,EAAmBplE,EAAG4V,EAAKhX,EAAG4vC,GAE5Dx+B,EAAMe,KAAK,CAET/Q,EAAGolE,EAAmBplE,EACtBub,IAGAizB,YAGA9tB,OACAH,IAAKhF,EACLiF,MAAOE,EAAO9K,EAAKhX,EACnB6hB,OAAQlF,EAAI3F,EAAKzZ,GAErB,CACA,OAAO6T,CACT,CAxD2Bw1D,CAAqBzvD,EAAOozB,EAAYxO,EACnE,CAEA,SAASoqC,GAAaX,EAAQn9C,EAAMiI,EAAOu2C,EAASC,GAClD,MAAM52C,EAAM3zB,KAAKuqB,IAAIvqB,KAAK2zB,IAAII,IACxBN,EAAMzzB,KAAKuqB,IAAIvqB,KAAKyzB,IAAIM,IAC9B,IAAIlvB,EAAI,EACJub,EAAI,EACJkqD,EAAQl2D,MAAQ0X,EAAK/qB,GACvB8D,GAAKinB,EAAK/qB,EAAIupE,EAAQl2D,OAASuf,EAC/Bs1C,EAAOloE,EAAIf,KAAKiB,IAAIgoE,EAAOloE,EAAG+qB,EAAK/qB,EAAI8D,IAC9BylE,EAAQtvD,IAAM8Q,EAAKlpB,IAC5BiC,GAAKylE,EAAQtvD,IAAM8Q,EAAKlpB,GAAK+wB,EAC7Bs1C,EAAOrmE,EAAI5C,KAAKC,IAAIgpE,EAAOrmE,EAAGkpB,EAAKlpB,EAAIiC,IAErC0lE,EAAQn2D,MAAQ0X,EAAK1Z,GACvBgO,GAAK0L,EAAK1Z,EAAIm4D,EAAQn2D,OAASqf,EAC/Bw1C,EAAO72D,EAAIpS,KAAKiB,IAAIgoE,EAAO72D,EAAG0Z,EAAK1Z,EAAIgO,IAC9BmqD,EAAQvvD,IAAM8Q,EAAK/pB,IAC5Bqe,GAAKmqD,EAAQvvD,IAAM8Q,EAAK/pB,GAAK0xB,EAC7Bw1C,EAAOlnE,EAAI/B,KAAKC,IAAIgpE,EAAOlnE,EAAG+pB,EAAK/pB,EAAIqe,GAE3C,CAoCA,SAAS+pD,GAAqBp2C,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAGF,OACT,CAEA,SAASq2C,GAAiBvlE,EAAGpB,EAAG8lC,GAM9B,MALc,UAAVA,EACF1kC,GAAKpB,EACc,WAAV8lC,IACT1kC,GAAMpB,EAAI,GAELoB,CACT,CAEA,SAASqlE,GAAU9pD,EAAGpf,EAAG+yB,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClB3T,GAAMpf,EAAI,GACD+yB,EAAQ,KAAOA,EAAQ,MAChC3T,GAAKpf,GAEAof,CACT,CAmDA,SAASoqD,GAAe5vD,EAAOuV,EAAQoH,EAAU2oC,GAC/C,MAAM,IAAC1hD,GAAO5D,EACd,GAAI2c,EAEF/Y,EAAI+W,IAAI3a,EAAMkd,QAASld,EAAMmd,QAAS5H,EAAQ,EAAGwC,EAAAA,OAC5C,CAEL,IAAI8F,EAAgB7d,EAAM4uD,iBAAiB,EAAGr5C,GAC9C3R,EAAI22B,OAAO1c,EAAc5zB,EAAG4zB,EAAcrY,GAE1C,IAAK,IAAIzc,EAAI,EAAGA,EAAIu8D,EAAYv8D,IAC9B80B,EAAgB7d,EAAM4uD,iBAAiB7lE,EAAGwsB,GAC1C3R,EAAI42B,OAAO3c,EAAc5zB,EAAG4zB,EAAcrY,GAGhD,CAiCe,MAAMqqD,WAA0B3E,GAE7CxnD,UAAY,eAKZA,gBAAkB,CAChBgZ,SAAS,EAGTozC,SAAS,EACTnwC,SAAU,YAEVlD,WAAY,CACVC,SAAS,EACTzF,UAAW,EACX8gB,WAAY,GACZE,iBAAkB,GAGpBlmB,KAAM,CACJ4K,UAAU,GAGZjE,WAAY,EAGZ7I,MAAO,CAEL0pB,mBAAmB,EAEnB3G,SAAUs6B,EAAAA,GAAAA,WAAAA,SAGZtwC,YAAa,CACX8c,mBAAerxC,EAGfoxC,gBAAiB,EAGjB/c,SAAS,EAGT6R,KAAM,CACJ1uB,KAAM,IAIR+yB,SAASvoB,GACAA,EAITua,QAAS,EAGT8pC,mBAAmB,IAIvBhrD,qBAAuB,CACrB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAGjBA,mBAAqB,CACnB+Y,WAAY,CACV2tC,UAAW,SAIf5zD,YAAY0F,GACVkW,MAAMlW,GAGNxF,KAAKwmB,aAAU70B,EAEfqO,KAAKymB,aAAU90B,EAEfqO,KAAKm4D,iBAAcxmE,EAEnBqO,KAAK63D,aAAe,GACpB73D,KAAKw4D,iBAAmB,EAC1B,CAEAj+B,gBAEE,MAAMrM,EAAUluB,KAAKyqD,UAAWh8B,EAAAA,EAAAA,GAAU+oC,GAAsBx3D,KAAKsI,SAAW,GAC1EnW,EAAI6N,KAAKwc,MAAQxc,KAAKmjB,SAAW+K,EAAQ1R,MACzC9sB,EAAIsQ,KAAKuc,OAASvc,KAAKojB,UAAY8K,EAAQ3R,OACjDvc,KAAKwmB,QAAU93B,KAAKwX,MAAMlG,KAAKiU,KAAO9hB,EAAI,EAAI+7B,EAAQja,MACtDjU,KAAKymB,QAAU/3B,KAAKwX,MAAMlG,KAAK8T,IAAMpkB,EAAI,EAAIw+B,EAAQpa,KACrD9T,KAAKm4D,YAAczpE,KAAKwX,MAAMxX,KAAKiB,IAAIwC,EAAGzC,GAAK,EACjD,CAEAgrC,sBACE,MAAM,IAAC/qC,EAAG,IAAEhB,GAAOqR,KAAK0S,WAAU,GAElC1S,KAAKrQ,KAAM6a,EAAAA,EAAAA,GAAS7a,KAASitB,MAAMjtB,GAAOA,EAAM,EAChDqQ,KAAKrR,KAAM6b,EAAAA,EAAAA,GAAS7b,KAASiuB,MAAMjuB,GAAOA,EAAM,EAGhDqR,KAAK00D,wBACP,CAMAQ,mBACE,OAAOxmE,KAAK4nC,KAAKt2B,KAAKm4D,YAAcX,GAAsBx3D,KAAKsI,SACjE,CAEA2zB,mBAAmB9iB,GACjBq7C,GAAgB3sC,UAAUoU,mBAAmB/B,KAAKl6B,KAAMmZ,GAGxDnZ,KAAK63D,aAAe73D,KAAK+R,YACtBzjB,KAAI,CAAC2a,EAAOe,KACX,MAAM2J,GAAQo1B,EAAAA,EAAAA,GAAa/oC,KAAKsI,QAAQ4d,YAAYgW,SAAU,CAACjzB,EAAOe,GAAQhK,MAC9E,OAAO2T,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzCpH,QAAO,CAAChd,EAAG8C,IAAM2N,KAAKoC,MAAMsb,kBAAkBrrB,IACnD,CAEAmpC,MACE,MAAMhyB,EAAOxJ,KAAKsI,QAEdkB,EAAKwc,SAAWxc,EAAK0c,YAAYF,QACnC0xC,GAAmB13D,MAEnBA,KAAKu4D,eAAe,EAAG,EAAG,EAAG,EAEjC,CAEAA,eAAec,EAAcC,EAAeC,EAAaC,GACvDx5D,KAAKwmB,SAAW93B,KAAKwX,OAAOmzD,EAAeC,GAAiB,GAC5Dt5D,KAAKymB,SAAW/3B,KAAKwX,OAAOqzD,EAAcC,GAAkB,GAC5Dx5D,KAAKm4D,aAAezpE,KAAKiB,IAAIqQ,KAAKm4D,YAAc,EAAGzpE,KAAKC,IAAI0qE,EAAcC,EAAeC,EAAaC,GACxG,CAEA7yC,cAAc3c,GACZ,MAAMyvD,EAAkBp4C,EAAAA,GAAOrhB,KAAK63D,aAAappE,QAAU,GACrDuzB,EAAahiB,KAAKsI,QAAQ0Z,YAAc,EAE9C,OAAOw/B,EAAAA,EAAAA,IAAgBx3C,EAAQyvD,GAAkBv4C,EAAAA,EAAAA,GAAUc,GAC7D,CAEA+E,8BAA8B9d,GAC5B,IAAIgT,EAAAA,EAAAA,GAAchT,GAChB,OAAOwJ,IAIT,MAAMinD,EAAgB15D,KAAKm4D,aAAen4D,KAAKrR,IAAMqR,KAAKrQ,KAC1D,OAAIqQ,KAAKsI,QAAQmB,SACPzJ,KAAKrR,IAAMsa,GAASywD,GAEtBzwD,EAAQjJ,KAAKrQ,KAAO+pE,CAC9B,CAEAC,8BAA8BrvC,GAC5B,IAAIrO,EAAAA,EAAAA,GAAcqO,GAChB,OAAO7X,IAGT,MAAMmnD,EAAiBtvC,GAAYtqB,KAAKm4D,aAAen4D,KAAKrR,IAAMqR,KAAKrQ,MACvE,OAAOqQ,KAAKsI,QAAQmB,QAAUzJ,KAAKrR,IAAMirE,EAAiB55D,KAAKrQ,IAAMiqE,CACvE,CAEA3B,qBAAqBjuD,GACnB,MAAMkc,EAAclmB,KAAK63D,cAAgB,GAEzC,GAAI7tD,GAAS,GAAKA,EAAQkc,EAAYz3B,OAAQ,CAC5C,MAAMorE,EAAa3zC,EAAYlc,GAC/B,OA1LN,SAAiC+K,EAAQ/K,EAAO2J,GAC9C,OAAOqB,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BpB,QACA3J,QACAhb,KAAM,cAEV,CAoLa8qE,CAAwB95D,KAAKoR,aAAcpH,EAAO6vD,GAE7D,CAEA3B,iBAAiBluD,EAAO+vD,EAAoBhC,EAAkB,GAC5D,MAAMt1C,EAAQziB,KAAK2mB,cAAc3c,GAAS8Y,EAAAA,EAAUi1C,EACpD,MAAO,CACLxkE,EAAG7E,KAAKyzB,IAAIM,GAASs3C,EAAqB/5D,KAAKwmB,QAC/C1X,EAAGpgB,KAAK2zB,IAAII,GAASs3C,EAAqB/5D,KAAKymB,QAC/ChE,QAEJ,CAEA2E,yBAAyBpd,EAAOf,GAC9B,OAAOjJ,KAAKk4D,iBAAiBluD,EAAOhK,KAAK+mB,8BAA8B9d,GACzE,CAEA+wD,gBAAgBhwD,GACd,OAAOhK,KAAKonB,yBAAyBpd,GAAS,EAAGhK,KAAKy/B,eACxD,CAEAw6B,sBAAsBjwD,GACpB,MAAM,KAACiK,EAAAA,IAAMH,EAAAA,MAAKC,EAAK,OAAEC,GAAUhU,KAAKw4D,iBAAiBxuD,GACzD,MAAO,CACLiK,OACAH,MACAC,QACAC,SAEJ,CAKAmvB,iBACE,MAAM,gBAAC/zC,EAAiBisB,MAAM,SAAC4K,IAAajmB,KAAKsI,QACjD,GAAIlZ,EAAiB,CACnB,MAAM8d,EAAMlN,KAAKkN,IACjBA,EAAIk2B,OACJl2B,EAAI02B,YACJs1B,GAAel5D,KAAMA,KAAK+mB,8BAA8B/mB,KAAKy0D,WAAYxuC,EAAUjmB,KAAK63D,aAAappE,QACrGye,EAAI2qC,YACJ3qC,EAAIiT,UAAY/wB,EAChB8d,EAAIoB,OACJpB,EAAIo2B,UAER,CAKAE,WACE,MAAMt2B,EAAMlN,KAAKkN,IACX1D,EAAOxJ,KAAKsI,SACZ,WAACyd,EAAU,KAAE1K,EAAAA,OAAMqK,GAAUlc,EAC7BolD,EAAa5uD,KAAK63D,aAAappE,OAErC,IAAI4D,EAAG+oB,EAAQ6N,EAmBf,GAjBIzf,EAAK0c,YAAYF,SA9UzB,SAAyB1c,EAAOslD,GAC9B,MAAM,IAAC1hD,EAAK5E,SAAS,YAAC4d,IAAgB5c,EAEtC,IAAK,IAAIjX,EAAIu8D,EAAa,EAAGv8D,GAAK,EAAGA,IAAK,CACxC,MAAM6uC,EAAchb,EAAYqT,WAAWjwB,EAAM2uD,qBAAqB5lE,IAChE+lE,GAAStgC,EAAAA,EAAAA,IAAOoJ,EAAYrJ,OAC5B,EAACtkC,EAAC,EAAEub,EAAAA,UAAGizB,EAAAA,KAAW9tB,EAAI,IAAEH,EAAAA,MAAKC,EAAAA,OAAOC,GAAU1K,EAAMkvD,iBAAiBnmE,IACrE,cAAC2wC,GAAiB9B,EAExB,KAAKjlB,EAAAA,EAAAA,GAAc+mB,GAAgB,CACjC,MAAM0S,GAAeyH,EAAAA,EAAAA,IAAcjc,EAAYwU,cACzCxnB,GAAUO,EAAAA,EAAAA,GAAUyS,EAAY6B,iBACtC71B,EAAIiT,UAAY6iB,EAEhB,MAAMk3B,EAAejmD,EAAOia,EAAQja,KAC9BkmD,EAAcrmD,EAAMoa,EAAQpa,IAC5BsmD,EAAgBrmD,EAAQE,EAAOia,EAAQ1R,MACvC69C,EAAiBrmD,EAASF,EAAMoa,EAAQ3R,OAE1Cle,OAAO+J,OAAOstC,GAAc/L,MAAKp6C,GAAW,IAANA,KACxC2d,EAAI02B,aACJwa,EAAAA,EAAAA,IAAmBlxC,EAAK,CACtB3Z,EAAG2mE,EACHprD,EAAGqrD,EACHhoE,EAAGioE,EACH1qE,EAAG2qE,EACHx7C,OAAQ62B,IAEVxoC,EAAIoB,QAEJpB,EAAIm2B,SAAS62B,EAAcC,EAAaC,EAAeC,IAI3D/1B,EAAAA,EAAAA,GACEp3B,EACA5D,EAAMuuD,aAAaxlE,GACnBkB,EACAub,EAAKspD,EAAOrgC,WAAa,EACzBqgC,EACA,CACE93D,MAAO4gC,EAAY5gC,MACnByhC,UAAWA,EACXG,aAAc,UAGpB,CACF,CAgSMo4B,CAAgBt6D,KAAM4uD,GAGpBvzC,EAAK2K,SACPhmB,KAAKmZ,MAAMzW,SAAQ,CAACkB,EAAMoG,KACxB,GAAc,IAAVA,EAAa,CACfoR,EAASpb,KAAK+mB,8BAA8BnjB,EAAKqF,OACjD,MAAM6L,EAAU9U,KAAKoR,WAAWpH,GAC1Bk3B,EAAc7lB,EAAKke,WAAWzkB,GAC9BqsB,EAAoBzb,EAAO6T,WAAWzkB,IAtRtD,SAAwBxL,EAAOixD,EAAc17C,EAAQ+vC,EAAY3uB,GAC/D,MAAM/yB,EAAM5D,EAAM4D,IACZ+Y,EAAWs0C,EAAat0C,UAExB,MAAC3lB,EAAAA,UAAOigB,GAAag6C,GAErBt0C,IAAa2oC,IAAgBtuD,IAAUigB,GAAa1B,EAAS,IAInE3R,EAAIk2B,OACJl2B,EAAIkT,YAAc9f,EAClB4M,EAAIqT,UAAYA,EAChBrT,EAAIw2B,YAAYzD,EAAWqB,MAC3Bp0B,EAAIy2B,eAAiB1D,EAAWuB,WAEhCt0B,EAAI02B,YACJs1B,GAAe5vD,EAAOuV,EAAQoH,EAAU2oC,GACxC1hD,EAAI2qC,YACJ3qC,EAAI62B,SACJ72B,EAAIo2B,UACN,CAmQUk3B,CAAex6D,KAAMkhC,EAAa9lB,EAAQwzC,EAAYztB,OAKxDpb,EAAWC,QAAS,CAGtB,IAFA9Y,EAAIk2B,OAEC/wC,EAAIu8D,EAAa,EAAGv8D,GAAK,EAAGA,IAAK,CACpC,MAAM6uC,EAAcnb,EAAWwT,WAAWv5B,KAAKi4D,qBAAqB5lE,KAC9D,MAACiO,EAAAA,UAAOigB,GAAa2gB,EAEtB3gB,GAAcjgB,IAInB4M,EAAIqT,UAAYA,EAChBrT,EAAIkT,YAAc9f,EAElB4M,EAAIw2B,YAAYxC,EAAYG,YAC5Bn0B,EAAIy2B,eAAiBzC,EAAYK,iBAEjCnmB,EAASpb,KAAK+mB,8BAA8Bvd,EAAK2P,MAAM1P,QAAUzJ,KAAKrQ,IAAMqQ,KAAKrR,KACjFs6B,EAAWjpB,KAAKk4D,iBAAiB7lE,EAAG+oB,GACpClO,EAAI02B,YACJ12B,EAAI22B,OAAO7jC,KAAKwmB,QAASxmB,KAAKymB,SAC9BvZ,EAAI42B,OAAO7a,EAAS11B,EAAG01B,EAASna,GAChC5B,EAAI62B,SACN,CAEA72B,EAAIo2B,UAER,CAKAW,aAAc,CAKdE,aACE,MAAMj3B,EAAMlN,KAAKkN,IACX1D,EAAOxJ,KAAKsI,QACZ8sB,EAAW5rB,EAAK2P,MAEtB,IAAKic,EAASpP,QACZ,OAGF,MAAMhE,EAAahiB,KAAK2mB,cAAc,GACtC,IAAIvL,EAAQoB,EAEZtP,EAAIk2B,OACJl2B,EAAI2rC,UAAU74C,KAAKwmB,QAASxmB,KAAKymB,SACjCvZ,EAAI9Z,OAAO4uB,GACX9U,EAAI60B,UAAY,SAChB70B,EAAIg1B,aAAe,SAEnBliC,KAAKmZ,MAAMzW,SAAQ,CAACkB,EAAMoG,KACxB,GAAc,IAAVA,IAAgBR,EAAKC,QACvB,OAGF,MAAMy3B,EAAc9L,EAASmE,WAAWv5B,KAAKoR,WAAWpH,IAClDu0B,GAAWzG,EAAAA,EAAAA,IAAOoJ,EAAYrJ,MAGpC,GAFAzc,EAASpb,KAAK+mB,8BAA8B/mB,KAAKmZ,MAAMnP,GAAOf,OAE1Di4B,EAAY2B,kBAAmB,CACjC31B,EAAI2qB,KAAO0G,EAASM,OACpBriB,EAAQtP,EAAI+5C,YAAYrjD,EAAK+P,OAAO6I,MACpCtP,EAAIiT,UAAY+gB,EAAY8B,cAE5B,MAAM9U,GAAUO,EAAAA,EAAAA,GAAUyS,EAAY6B,iBACtC71B,EAAIm2B,UACD7mB,EAAQ,EAAI0R,EAAQja,MACpBmH,EAASmjB,EAASp1B,KAAO,EAAI+kB,EAAQpa,IACtC0I,EAAQ0R,EAAQ1R,MAChB+hB,EAASp1B,KAAO+kB,EAAQ3R,SAI5B+nB,EAAAA,EAAAA,GAAWp3B,EAAKtJ,EAAK+P,MAAO,GAAIyH,EAAQmjB,EAAU,CAChDj+B,MAAO4gC,EAAY5gC,OACrB,IAGF4M,EAAIo2B,SACN,CAKAkB,YAAa,ECjnBf,MAAMi2B,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMxxD,KAAM,EAAG2tD,MAAO,KAC5C8D,OAAQ,CAACD,QAAQ,EAAMxxD,KAAM,IAAM2tD,MAAO,IAC1C+D,OAAQ,CAACF,QAAQ,EAAMxxD,KAAM,IAAO2tD,MAAO,IAC3CgE,KAAM,CAACH,QAAQ,EAAMxxD,KAAM,KAAS2tD,MAAO,IAC3CiE,IAAK,CAACJ,QAAQ,EAAMxxD,KAAM,MAAU2tD,MAAO,IAC3CkE,KAAM,CAACL,QAAQ,EAAOxxD,KAAM,OAAW2tD,MAAO,GAC9CmE,MAAO,CAACN,QAAQ,EAAMxxD,KAAM,OAAS2tD,MAAO,IAC5CoE,QAAS,CAACP,QAAQ,EAAOxxD,KAAM,OAAS2tD,MAAO,GAC/CqE,KAAM,CAACR,QAAQ,EAAMxxD,KAAM,SAMvBiyD,GAA6C/8D,OAAOD,KAAKq8D,IAM/D,SAASY,GAAO7qE,EAAGC,GACjB,OAAOD,EAAIC,CACb,CAOA,SAAS6gB,GAAMhI,EAAO1J,GACpB,IAAIqc,EAAAA,EAAAA,GAAcrc,GAChB,OAAO,KAGT,MAAM07D,EAAUhyD,EAAMiyD,UAChB,OAACC,EAAAA,MAAQlsE,EAAAA,WAAOmsE,GAAcnyD,EAAMoyD,WAC1C,IAAIzyD,EAAQrJ,EAaZ,MAXsB,mBAAX47D,IACTvyD,EAAQuyD,EAAOvyD,KAIZuB,EAAAA,EAAAA,GAASvB,KACZA,EAA0B,iBAAXuyD,EACXF,EAAQhqD,MAAMrI,EAA4BuyD,GAC1CF,EAAQhqD,MAAMrI,IAGN,OAAVA,EACK,MAGL3Z,IACF2Z,EAAkB,SAAV3Z,KAAqB+1B,EAAAA,EAAAA,GAASo2C,KAA8B,IAAfA,EAEjDH,EAAQpzC,QAAQjf,EAAO3Z,GADvBgsE,EAAQpzC,QAAQjf,EAAO,UAAWwyD,KAIhCxyD,EACV,CAUA,SAAS0yD,GAA0BC,EAASjsE,EAAKhB,EAAKktE,GACpD,MAAM9xD,EAAOqxD,GAAM3sE,OAEnB,IAAK,IAAI4D,EAAI+oE,GAAMv+C,QAAQ++C,GAAUvpE,EAAI0X,EAAO,IAAK1X,EAAG,CACtD,MAAMypE,EAAWrB,GAAUW,GAAM/oE,IAC3B8S,EAAS22D,EAAShF,MAAQgF,EAAShF,MAAQ/jD,OAAOgpD,iBAExD,GAAID,EAASnB,QAAUjsE,KAAK4nC,MAAM3nC,EAAMgB,IAAQwV,EAAS22D,EAAS3yD,QAAU0yD,EAC1E,OAAOT,GAAM/oE,EAEjB,CAEA,OAAO+oE,GAAMrxD,EAAO,EACtB,CAuCA,SAASiyD,GAAQ7iD,EAAO8iD,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWztE,OAAQ,CAC5B,MAAM,GAACq6B,EAAE,GAAEC,IAAMozC,EAAAA,EAAAA,IAAQD,EAAYD,GAErC9iD,EADkB+iD,EAAWpzC,IAAOmzC,EAAOC,EAAWpzC,GAAMozC,EAAWnzC,KACpD,QAJnB5P,EAAM8iD,IAAQ,CAMlB,CA8BA,SAASG,GAAoB9yD,EAAOlB,EAAQi0D,GAC1C,MAAMljD,EAAQ,GAER7qB,EAAM,CAAC,EACPyb,EAAO3B,EAAO3Z,OACpB,IAAI4D,EAAG4W,EAEP,IAAK5W,EAAI,EAAGA,EAAI0X,IAAQ1X,EACtB4W,EAAQb,EAAO/V,GACf/D,EAAI2a,GAAS5W,EAEb8mB,EAAM7U,KAAK,CACT2E,QACA8sB,OAAO,IAMX,OAAiB,IAAThsB,GAAesyD,EAxCzB,SAAuB/yD,EAAO6P,EAAO7qB,EAAK+tE,GACxC,MAAMf,EAAUhyD,EAAMiyD,SAChBnlC,GAASklC,EAAQpzC,QAAQ/O,EAAM,GAAGlQ,MAAOozD,GACzC3/C,EAAOvD,EAAMA,EAAM1qB,OAAS,GAAGwa,MACrC,IAAI8sB,EAAO/rB,EAEX,IAAK+rB,EAAQK,EAAOL,GAASrZ,EAAMqZ,GAASulC,EAAQ/2D,IAAIwxB,EAAO,EAAGsmC,GAChEryD,EAAQ1b,EAAIynC,GACR/rB,GAAS,IACXmP,EAAMnP,GAAO+rB,OAAQ,GAGzB,OAAO5c,CACT,CA2B8CmjD,CAAchzD,EAAO6P,EAAO7qB,EAAK+tE,GAAzCljD,CACtC,CAEe,MAAMojD,WAAkBnkC,GAErCprB,UAAY,OAKZA,gBAAkB,CAQhB8vC,OAAQ,OAER0f,SAAU,CAAC,EACXP,KAAM,CACJT,QAAQ,EACRhG,MAAM,EACNlmE,OAAO,EACPmsE,YAAY,EACZG,QAAS,cACTa,eAAgB,CAAC,GAEnBtjD,MAAO,CASLkiB,OAAQ,OAERa,UAAU,EAEVnG,MAAO,CACLC,SAAS,KAQfl2B,YAAYkJ,GACV0S,MAAM1S,GAGNhJ,KAAKuY,OAAS,CACZtpB,KAAM,GACNC,OAAQ,GACR2Z,IAAK,IAIP7I,KAAK08D,MAAQ,MAEb18D,KAAK28D,gBAAahrE,EAClBqO,KAAK48D,SAAW,CAAC,EACjB58D,KAAK68D,aAAc,EACnB78D,KAAK07D,gBAAa/pE,CACpB,CAEAm2B,KAAKuoB,EAAW7mC,EAAO,IACrB,MAAMyyD,EAAO5rB,EAAU4rB,OAAS5rB,EAAU4rB,KAAO,CAAC,GAE5CX,EAAUt7D,KAAKu7D,SAAW,IAAIiB,EAASp0C,MAAMioB,EAAUmsB,SAASxuE,MAEtEstE,EAAQxzC,KAAKte,IAMbshC,EAAAA,EAAAA,IAAQmxB,EAAKQ,eAAgBnB,EAAQvzC,WAErC/nB,KAAK07D,WAAa,CAChBF,OAAQS,EAAKT,OACblsE,MAAO2sE,EAAK3sE,MACZmsE,WAAYQ,EAAKR,YAGnB//C,MAAMoM,KAAKuoB,GAEXrwC,KAAK68D,YAAcrzD,EAAKszD,UAC1B,CAOAxrD,MAAM4D,EAAKlL,GACT,YAAYrY,IAARujB,EACK,KAEF5D,GAAMtR,KAAMkV,EACrB,CAEAma,eACE3T,MAAM2T,eACNrvB,KAAKuY,OAAS,CACZtpB,KAAM,GACNC,OAAQ,GACR2Z,IAAK,GAET,CAEA6xB,sBACE,MAAMpyB,EAAUtI,KAAKsI,QACfgzD,EAAUt7D,KAAKu7D,SACf/F,EAAOltD,EAAQ2zD,KAAKzG,MAAQ,MAElC,IAAI,IAAC7lE,EAAAA,IAAKhB,EAAAA,WAAKykB,EAAAA,WAAYC,GAAcrT,KAAKsT,gBAK9C,SAASypD,EAAajgB,GACf1pC,GAAewJ,MAAMkgC,EAAOntD,OAC/BA,EAAMjB,KAAKiB,IAAIA,EAAKmtD,EAAOntD,MAExB0jB,GAAeuJ,MAAMkgC,EAAOnuD,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKmuD,EAAOnuD,KAE/B,CAGKykB,GAAeC,IAElB0pD,EAAa/8D,KAAKg9D,mBAIK,UAAnB10D,EAAQw0C,QAA+C,WAAzBx0C,EAAQ6Q,MAAMkiB,QAC9C0hC,EAAa/8D,KAAK0S,WAAU,KAIhC/iB,GAAM6a,EAAAA,EAAAA,GAAS7a,KAASitB,MAAMjtB,GAAOA,GAAO2rE,EAAQpzC,QAAQ/kB,KAAKC,MAAOoyD,GACxE7mE,GAAM6b,EAAAA,EAAAA,GAAS7b,KAASiuB,MAAMjuB,GAAOA,GAAO2sE,EAAQnzC,MAAMhlB,KAAKC,MAAOoyD,GAAQ,EAG9Ex1D,KAAKrQ,IAAMjB,KAAKiB,IAAIA,EAAKhB,EAAM,GAC/BqR,KAAKrR,IAAMD,KAAKC,IAAIgB,EAAM,EAAGhB,EAC/B,CAKAquE,kBACE,MAAMxlD,EAAMxX,KAAKi9D,qBACjB,IAAIttE,EAAMojB,OAAOC,kBACbrkB,EAAMokB,OAAOE,kBAMjB,OAJIuE,EAAI/oB,SACNkB,EAAM6nB,EAAI,GACV7oB,EAAM6oB,EAAIA,EAAI/oB,OAAS,IAElB,CAACkB,MAAKhB,MACf,CAKAmsC,aACE,MAAMxyB,EAAUtI,KAAKsI,QACf40D,EAAW50D,EAAQ2zD,KACnB7mC,EAAW9sB,EAAQ6Q,MACnB+iD,EAAiC,WAApB9mC,EAASiG,OAAsBr7B,KAAKi9D,qBAAuBj9D,KAAKm9D,YAE5D,UAAnB70D,EAAQw0C,QAAsBof,EAAWztE,SAC3CuR,KAAKrQ,IAAMqQ,KAAKi5B,UAAYijC,EAAW,GACvCl8D,KAAKrR,IAAMqR,KAAKg5B,UAAYkjC,EAAWA,EAAWztE,OAAS,IAG7D,MAAMkB,EAAMqQ,KAAKrQ,IACXhB,EAAMqR,KAAKrR,IAEXwqB,GAAQikD,EAAAA,EAAAA,IAAelB,EAAYvsE,EAAKhB,GAgB9C,OAXAqR,KAAK08D,MAAQQ,EAAS1H,OAASpgC,EAASD,SACpCwmC,GAA0BuB,EAAStB,QAAS57D,KAAKrQ,IAAKqQ,KAAKrR,IAAKqR,KAAKq9D,kBAAkB1tE,IArR/F,SAAoC2Z,EAAO8yB,EAAUw/B,EAASjsE,EAAKhB,GACjE,IAAK,IAAI0D,EAAI+oE,GAAM3sE,OAAS,EAAG4D,GAAK+oE,GAAMv+C,QAAQ++C,GAAUvpE,IAAK,CAC/D,MAAMmjE,EAAO4F,GAAM/oE,GACnB,GAAIooE,GAAUjF,GAAMmF,QAAUrxD,EAAMiyD,SAAStzC,KAAKt5B,EAAKgB,EAAK6lE,IAASp5B,EAAW,EAC9E,OAAOo5B,CAEX,CAEA,OAAO4F,GAAMQ,EAAUR,GAAMv+C,QAAQ++C,GAAW,EAClD,CA6QQ0B,CAA2Bt9D,KAAMmZ,EAAM1qB,OAAQyuE,EAAStB,QAAS57D,KAAKrQ,IAAKqQ,KAAKrR,MACpFqR,KAAK28D,WAAcvnC,EAASW,MAAMC,SAA0B,SAAfh2B,KAAK08D,MAxQtD,SAA4BlH,GAC1B,IAAK,IAAInjE,EAAI+oE,GAAMv+C,QAAQ24C,GAAQ,EAAGzrD,EAAOqxD,GAAM3sE,OAAQ4D,EAAI0X,IAAQ1X,EACrE,GAAIooE,GAAUW,GAAM/oE,IAAIsoE,OACtB,OAAOS,GAAM/oE,EAGnB,CAmQQkrE,CAAmBv9D,KAAK08D,YADyC/qE,EAErEqO,KAAKw9D,YAAYtB,GAEb5zD,EAAQmB,SACV0P,EAAM1P,UAGD2yD,GAAoBp8D,KAAMmZ,EAAOnZ,KAAK28D,WAC/C,CAEArhC,gBAGMt7B,KAAKsI,QAAQm1D,qBACfz9D,KAAKw9D,YAAYx9D,KAAKmZ,MAAM7qB,KAAIsV,IAASA,EAAKqF,QAElD,CAUAu0D,YAAYtB,EAAa,IACvB,IAEI9lC,EAAO1Z,EAFP5Z,EAAQ,EACR4G,EAAM,EAGN1J,KAAKsI,QAAQ8S,QAAU8gD,EAAWztE,SACpC2nC,EAAQp2B,KAAK09D,mBAAmBxB,EAAW,IAEzCp5D,EADwB,IAAtBo5D,EAAWztE,OACL,EAAI2nC,GAEHp2B,KAAK09D,mBAAmBxB,EAAW,IAAM9lC,GAAS,EAE7D1Z,EAAO1c,KAAK09D,mBAAmBxB,EAAWA,EAAWztE,OAAS,IAE5Dib,EADwB,IAAtBwyD,EAAWztE,OACPiuB,GAECA,EAAO1c,KAAK09D,mBAAmBxB,EAAWA,EAAWztE,OAAS,KAAO,GAGhF,MAAMuyC,EAAQk7B,EAAWztE,OAAS,EAAI,GAAM,IAC5CqU,GAAQk6B,EAAAA,EAAAA,GAAYl6B,EAAO,EAAGk+B,GAC9Bt3B,GAAMszB,EAAAA,EAAAA,GAAYtzB,EAAK,EAAGs3B,GAE1BhhC,KAAK48D,SAAW,CAAC95D,QAAO4G,MAAKvE,OAAQ,GAAKrC,EAAQ,EAAI4G,GACxD,CASAyzD,YACE,MAAM7B,EAAUt7D,KAAKu7D,SACf5rE,EAAMqQ,KAAKrQ,IACXhB,EAAMqR,KAAKrR,IACX2Z,EAAUtI,KAAKsI,QACf40D,EAAW50D,EAAQ2zD,KAEnB0B,EAAQT,EAAS1H,MAAQmG,GAA0BuB,EAAStB,QAASjsE,EAAKhB,EAAKqR,KAAKq9D,kBAAkB1tE,IACtGslE,GAAWhmD,EAAAA,EAAAA,GAAe3G,EAAQ6Q,MAAM87C,SAAU,GAClD2I,EAAoB,SAAVD,GAAmBT,EAASzB,WACtCoC,GAAax4C,EAAAA,EAAAA,GAASu4C,KAAwB,IAAZA,EAClCzkD,EAAQ,CAAC,EACf,IACI8iD,EAAM1qD,EADN6kB,EAAQzmC,EAYZ,GARIkuE,IACFznC,GAASklC,EAAQpzC,QAAQkO,EAAO,UAAWwnC,IAI7CxnC,GAASklC,EAAQpzC,QAAQkO,EAAOynC,EAAa,MAAQF,GAGjDrC,EAAQrzC,KAAKt5B,EAAKgB,EAAKguE,GAAS,IAAS1I,EAC3C,MAAM,IAAIvtC,MAAM/3B,EAAM,QAAUhB,EAAM,uCAAyCsmE,EAAW,IAAM0I,GAGlG,MAAMzB,EAAsC,SAAzB5zD,EAAQ6Q,MAAMkiB,QAAqBr7B,KAAK89D,oBAC3D,IAAK7B,EAAO7lC,EAAO7kB,EAAQ,EAAG0qD,EAAOttE,EAAKstE,GAAQX,EAAQ/2D,IAAI03D,EAAMhH,EAAU0I,GAAQpsD,IACpFyqD,GAAQ7iD,EAAO8iD,EAAMC,GAQvB,OALID,IAASttE,GAA0B,UAAnB2Z,EAAQw0C,QAAgC,IAAVvrC,GAChDyqD,GAAQ7iD,EAAO8iD,EAAMC,GAIhB79D,OAAOD,KAAK+a,GAAOP,MAAK,CAACpoB,EAAGC,IAAMD,EAAIC,IAAGnC,KAAIiF,IAAMA,GAC5D,CAMAqgB,iBAAiB3K,GACf,MAAMqyD,EAAUt7D,KAAKu7D,SACf2B,EAAWl9D,KAAKsI,QAAQ2zD,KAE9B,OAAIiB,EAASa,cACJzC,EAAQtzC,OAAO/e,EAAOi0D,EAASa,eAEjCzC,EAAQtzC,OAAO/e,EAAOi0D,EAAST,eAAeuB,SACvD,CAOAh2C,OAAO/e,EAAO+e,GACZ,MACMD,EADU/nB,KAAKsI,QACG2zD,KAAKQ,eACvBjH,EAAOx1D,KAAK08D,MACZuB,EAAMj2C,GAAUD,EAAQytC,GAC9B,OAAOx1D,KAAKu7D,SAASvzC,OAAO/e,EAAOg1D,EACrC,CAWAC,oBAAoBjC,EAAMjyD,EAAOmP,EAAO6O,GACtC,MAAM1f,EAAUtI,KAAKsI,QACf61D,EAAY71D,EAAQ6Q,MAAM+iB,SAEhC,GAAIiiC,EACF,OAAOjkC,EAAAA,EAAAA,GAAKikC,EAAW,CAAClC,EAAMjyD,EAAOmP,GAAQnZ,MAG/C,MAAM+nB,EAAUzf,EAAQ2zD,KAAKQ,eACvBjH,EAAOx1D,KAAK08D,MACZL,EAAYr8D,KAAK28D,WACjByB,EAAc5I,GAAQztC,EAAQytC,GAC9B6I,EAAchC,GAAat0C,EAAQs0C,GACnCz4D,EAAOuV,EAAMnP,GACb+rB,EAAQsmC,GAAagC,GAAez6D,GAAQA,EAAKmyB,MAEvD,OAAO/1B,KAAKu7D,SAASvzC,OAAOi0C,EAAMj0C,IAAW+N,EAAQsoC,EAAcD,GACrE,CAKAniC,mBAAmB9iB,GACjB,IAAI9mB,EAAG0X,EAAMnG,EAEb,IAAKvR,EAAI,EAAG0X,EAAOoP,EAAM1qB,OAAQ4D,EAAI0X,IAAQ1X,EAC3CuR,EAAOuV,EAAM9mB,GACbuR,EAAK+P,MAAQ3T,KAAKk+D,oBAAoBt6D,EAAKqF,MAAO5W,EAAG8mB,EAEzD,CAMAukD,mBAAmBz0D,GACjB,OAAiB,OAAVA,EAAiBwJ,KAAOxJ,EAAQjJ,KAAKrQ,MAAQqQ,KAAKrR,IAAMqR,KAAKrQ,IACtE,CAMAupB,iBAAiBjQ,GACf,MAAMq1D,EAAUt+D,KAAK48D,SACfxxC,EAAMprB,KAAK09D,mBAAmBz0D,GACpC,OAAOjJ,KAAK6d,oBAAoBygD,EAAQx7D,MAAQsoB,GAAOkzC,EAAQn5D,OACjE,CAMA4Y,iBAAiBqhB,GACf,MAAMk/B,EAAUt+D,KAAK48D,SACfxxC,EAAMprB,KAAKw/B,mBAAmBJ,GAASk/B,EAAQn5D,OAASm5D,EAAQ50D,IACtE,OAAO1J,KAAKrQ,IAAMy7B,GAAOprB,KAAKrR,IAAMqR,KAAKrQ,IAC3C,CAOA4uE,cAAc5qD,GACZ,MAAM6qD,EAAYx+D,KAAKsI,QAAQ6Q,MACzBslD,EAAiBz+D,KAAKkN,IAAI+5C,YAAYtzC,GAAO6I,MAC7CiG,GAAQvB,EAAAA,EAAAA,GAAUlhB,KAAK6b,eAAiB2iD,EAAUliC,YAAckiC,EAAUniC,aAC1EqiC,EAAchwE,KAAKyzB,IAAIM,GACvBk8C,EAAcjwE,KAAK2zB,IAAII,GACvBm8C,EAAe5+D,KAAK4+B,wBAAwB,GAAGz1B,KAErD,MAAO,CACLhX,EAAIssE,EAAiBC,EAAgBE,EAAeD,EACpDjvE,EAAI+uE,EAAiBE,EAAgBC,EAAeF,EAExD,CAOArB,kBAAkBwB,GAChB,MAAM3B,EAAWl9D,KAAKsI,QAAQ2zD,KACxBQ,EAAiBS,EAAST,eAG1Bz0C,EAASy0C,EAAeS,EAAS1H,OAASiH,EAAe/B,YACzDoE,EAAe9+D,KAAKk+D,oBAAoBW,EAAa,EAAGzC,GAAoBp8D,KAAM,CAAC6+D,GAAc7+D,KAAK28D,YAAa30C,GACnH7e,EAAOnJ,KAAKu+D,cAAcO,GAG1BjD,EAAWntE,KAAKwX,MAAMlG,KAAK6b,eAAiB7b,KAAKwc,MAAQrT,EAAKhX,EAAI6N,KAAKuc,OAASpT,EAAKzZ,GAAK,EAChG,OAAOmsE,EAAW,EAAIA,EAAW,CACnC,CAKAiC,oBACE,IACIzrE,EAAG0X,EADHmyD,EAAal8D,KAAKuY,OAAOtpB,MAAQ,GAGrC,GAAIitE,EAAWztE,OACb,OAAOytE,EAGT,MAAMviC,EAAQ35B,KAAKqL,0BAEnB,GAAIrL,KAAK68D,aAAeljC,EAAMlrC,OAC5B,OAAQuR,KAAKuY,OAAOtpB,KAAO0qC,EAAM,GAAGpuB,WAAWiI,mBAAmBxT,MAGpE,IAAK3N,EAAI,EAAG0X,EAAO4vB,EAAMlrC,OAAQ4D,EAAI0X,IAAQ1X,EAC3C6pE,EAAaA,EAAWxjD,OAAOihB,EAAMtnC,GAAGkZ,WAAWiI,mBAAmBxT,OAGxE,OAAQA,KAAKuY,OAAOtpB,KAAO+Q,KAAK++D,UAAU7C,EAC5C,CAKAe,qBACE,MAAMf,EAAal8D,KAAKuY,OAAOrpB,QAAU,GACzC,IAAImD,EAAG0X,EAEP,GAAImyD,EAAWztE,OACb,OAAOytE,EAGT,MAAMhtE,EAAS8Q,KAAK+R,YACpB,IAAK1f,EAAI,EAAG0X,EAAO7a,EAAOT,OAAQ4D,EAAI0X,IAAQ1X,EAC5C6pE,EAAW53D,KAAKgN,GAAMtR,KAAM9Q,EAAOmD,KAGrC,OAAQ2N,KAAKuY,OAAOrpB,OAAS8Q,KAAK68D,YAAcX,EAAal8D,KAAK++D,UAAU7C,EAC9E,CAMA6C,UAAU32D,GAER,OAAOuQ,EAAAA,EAAAA,GAAavQ,EAAOwQ,KAAKyiD,IAClC,ECtpBF,SAASx6D,GAAYm+D,EAAO79D,EAAKsI,GAC/B,IAEIw1D,EAAYC,EAAYC,EAAYC,EAFpCt2C,EAAK,EACLC,EAAKi2C,EAAMvwE,OAAS,EAEpBgb,GACEtI,GAAO69D,EAAMl2C,GAAIsC,KAAOjqB,GAAO69D,EAAMj2C,GAAIqC,OACzCtC,KAAIC,OAAMJ,EAAAA,EAAAA,GAAaq2C,EAAO,MAAO79D,MAEvCiqB,IAAK6zC,EAAYhD,KAAMkD,GAAcH,EAAMl2C,MAC3CsC,IAAK8zC,EAAYjD,KAAMmD,GAAcJ,EAAMj2C,MAEzC5nB,GAAO69D,EAAMl2C,GAAImzC,MAAQ96D,GAAO69D,EAAMj2C,GAAIkzC,QAC1CnzC,KAAIC,OAAMJ,EAAAA,EAAAA,GAAaq2C,EAAO,OAAQ79D,MAExC86D,KAAMgD,EAAY7zC,IAAK+zC,GAAcH,EAAMl2C,MAC3CmzC,KAAMiD,EAAY9zC,IAAKg0C,GAAcJ,EAAMj2C,KAG/C,MAAMs2C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAeh+D,EAAM89D,GAAcI,EAAOF,CACrF,CAEA,MAAMG,WAAwB/C,GAE5BvvD,UAAY,aAKZA,gBAAkBuvD,GAAU10D,SAK5B/H,YAAYkJ,GACV0S,MAAM1S,GAGNhJ,KAAKu/D,OAAS,GAEdv/D,KAAKw/D,aAAU7tE,EAEfqO,KAAKy/D,iBAAc9tE,CACrB,CAKA6rE,cACE,MAAMtB,EAAal8D,KAAK0/D,yBAClBV,EAAQh/D,KAAKu/D,OAASv/D,KAAK2/D,iBAAiBzD,GAClDl8D,KAAKw/D,QAAU3+D,GAAYm+D,EAAOh/D,KAAKrQ,KACvCqQ,KAAKy/D,YAAc5+D,GAAYm+D,EAAOh/D,KAAKrR,KAAOqR,KAAKw/D,QACvD9jD,MAAM8hD,YAAYtB,EACpB,CAaAyD,iBAAiBzD,GACf,MAAM,IAACvsE,EAAG,IAAEhB,GAAOqR,KACbuD,EAAQ,GACRy7D,EAAQ,GACd,IAAI3sE,EAAG0X,EAAM2H,EAAMoH,EAAMsF,EAEzB,IAAK/rB,EAAI,EAAG0X,EAAOmyD,EAAWztE,OAAQ4D,EAAI0X,IAAQ1X,EAChDymB,EAAOojD,EAAW7pE,GACdymB,GAAQnpB,GAAOmpB,GAAQnqB,GACzB4U,EAAMe,KAAKwU,GAIf,GAAIvV,EAAM9U,OAAS,EAEjB,MAAO,CACL,CAACwtE,KAAMtsE,EAAKy7B,IAAK,GACjB,CAAC6wC,KAAMttE,EAAKy8B,IAAK,IAIrB,IAAK/4B,EAAI,EAAG0X,EAAOxG,EAAM9U,OAAQ4D,EAAI0X,IAAQ1X,EAC3C+rB,EAAO7a,EAAMlR,EAAI,GACjBqf,EAAOnO,EAAMlR,EAAI,GACjBymB,EAAOvV,EAAMlR,GAGT3D,KAAKY,OAAO8uB,EAAO1M,GAAQ,KAAOoH,GACpCkmD,EAAM16D,KAAK,CAAC23D,KAAMnjD,EAAMsS,IAAK/4B,GAAK0X,EAAO,KAG7C,OAAOi1D,CACT,CAOAU,yBACE,IAAIxD,EAAal8D,KAAKuY,OAAO1P,KAAO,GAEpC,GAAIqzD,EAAWztE,OACb,OAAOytE,EAGT,MAAMjtE,EAAO+Q,KAAK89D,oBACZnqD,EAAQ3T,KAAKi9D,qBAUnB,OANEf,EAHEjtE,EAAKR,QAAUklB,EAAMllB,OAGVuR,KAAK++D,UAAU9vE,EAAKypB,OAAO/E,IAE3B1kB,EAAKR,OAASQ,EAAO0kB,EAEpCuoD,EAAal8D,KAAKuY,OAAO1P,IAAMqzD,EAExBA,CACT,CAMAwB,mBAAmBz0D,GACjB,OAAQpI,GAAYb,KAAKu/D,OAAQt2D,GAASjJ,KAAKw/D,SAAWx/D,KAAKy/D,WACjE,CAMA1hD,iBAAiBqhB,GACf,MAAMk/B,EAAUt+D,KAAK48D,SACfv9B,EAAUr/B,KAAKw/B,mBAAmBJ,GAASk/B,EAAQn5D,OAASm5D,EAAQ50D,IAC1E,OAAO7I,GAAYb,KAAKu/D,OAAQlgC,EAAUr/B,KAAKy/D,YAAcz/D,KAAKw/D,SAAS,EAC7E,wJCvIW59D,GAAgB,CAC3BolC,EACA1yB,GACAuL,GACAvT,8wCCbK,SAASoiD,IACd,CAMK,MAAMngB,EAAO,MAClB,IAAIhgD,EAAK,EACT,MAAO,IAAMA,GACd,EAHmB,GAUb,SAAS0tB,EAAchT,GAC5B,OAAOA,OACT,CAOO,SAASvW,EAAqBuW,GACnC,GAAIxW,MAAMC,SAAWD,MAAMC,QAAQuW,GACjC,OAAO,EAET,MAAMja,EAAOqP,OAAOwpB,UAAU+3C,SAAS1lC,KAAKjxB,GAC5C,MAAyB,YAArBja,EAAK8hD,MAAM,EAAG,IAAuC,WAAnB9hD,EAAK8hD,OAAO,EAIpD,CAOO,SAASnpC,EAASsB,GACvB,OAAiB,OAAVA,GAA4D,oBAA1C5K,OAAOwpB,UAAU+3C,SAAS1lC,KAAKjxB,EAC1D,CAMA,SAAS42D,EAAe52D,GACtB,OAAyB,iBAAVA,GAAsBA,aAAiB8J,SAAWvI,UAAUvB,EAC7E,CAUO,SAASywB,EAAgBzwB,EAAgB62D,GAC9C,OAAOD,EAAe52D,GAASA,EAAQ62D,CACzC,CAOO,SAAS7wD,EAAkBhG,EAAsB62D,GACtD,YAAwB,IAAV72D,EAAwB62D,EAAe72D,CACvD,OAEa0Y,EAAe,CAAC1Y,EAAwB82D,IAClC,iBAAV92D,GAAsBA,EAAM+2D,SAAS,KAC1Czd,WAAWt5C,GAAS,KACjBA,EAAQ82D,EAEFz8C,EAAc,CAACra,EAAwB82D,IACjC,iBAAV92D,GAAsBA,EAAM+2D,SAAS,KAC1Czd,WAAWt5C,GAAS,IAAM82D,GACvB92D,EASA,SAASizB,EACdv5B,EACAkV,EACAooD,GAEA,GAAIt9D,GAAyB,mBAAZA,EAAGu3B,KAClB,OAAOv3B,EAAG6oD,MAAMyU,EAASpoD,EAE7B,CAuBO,SAASuX,EACd8wC,EACAv9D,EACAs9D,EACAx2D,GAEA,IAAIpX,EAAWhB,EAAa+M,EAC5B,GAAI1L,EAAQwtE,GAEV,GADA7uE,EAAM6uE,EAASzxE,OACXgb,EACF,IAAKpX,EAAIhB,EAAM,EAAGgB,GAAK,EAAGA,IACxBsQ,EAAGu3B,KAAK+lC,EAASC,EAAS7tE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIhB,EAAKgB,IACnBsQ,EAAGu3B,KAAK+lC,EAASC,EAAS7tE,GAAIA,QAG7B,GAAIsV,EAASu4D,GAGlB,IAFA9hE,EAAOC,OAAOD,KAAK8hE,GACnB7uE,EAAM+M,EAAK3P,OACN4D,EAAI,EAAGA,EAAIhB,EAAKgB,IACnBsQ,EAAGu3B,KAAK+lC,EAASC,EAAS9hE,EAAK/L,IAAK+L,EAAK/L,GAG/C,CAQO,SAASkiD,EAAe4rB,EAAuBC,GACpD,IAAI/tE,EAAW0X,EAAcyhB,EAAqB/Q,EAElD,IAAK0lD,IAAOC,GAAMD,EAAG1xE,SAAW2xE,EAAG3xE,OACjC,OAAO,EAGT,IAAK4D,EAAI,EAAG0X,EAAOo2D,EAAG1xE,OAAQ4D,EAAI0X,IAAQ1X,EAIxC,GAHAm5B,EAAK20C,EAAG9tE,GACRooB,EAAK2lD,EAAG/tE,GAEJm5B,EAAGlhB,eAAiBmQ,EAAGnQ,cAAgBkhB,EAAGxhB,QAAUyQ,EAAGzQ,MACzD,OAAO,EAIX,OAAO,CACT,CAMO,SAASxK,EAAS67B,GACvB,GAAI3oC,EAAQ2oC,GACV,OAAOA,EAAO/sC,IAAIkR,GAGpB,GAAImI,EAAS0zB,GAAS,CACpB,MAAM51B,EAASpH,OAAOinC,OAAO,MACvBlnC,EAAOC,OAAOD,KAAKi9B,GACnBglC,EAAOjiE,EAAK3P,OAClB,IAAIuD,EAAI,EAER,KAAOA,EAAIquE,IAAQruE,EACjByT,EAAOrH,EAAKpM,IAAMwN,EAAM67B,EAAOj9B,EAAKpM,KAGtC,OAAOyT,EAGT,OAAO41B,CACT,CAEA,SAASilC,EAAWt4D,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAe6U,QAAQ7U,EAC3D,CAOO,SAASu4D,EAAQv4D,EAAavC,EAAmB41B,EAAmB/yB,GACzE,IAAKg4D,EAAWt4D,GACd,OAGF,MAAMw4D,EAAO/6D,EAAOuC,GACdy4D,EAAOplC,EAAOrzB,GAEhBL,EAAS64D,IAAS74D,EAAS84D,GAE7B36B,EAAM06B,EAAMC,EAAMn4D,GAElB7C,EAAOuC,GAAOxI,EAAMihE,EAExB,CA0BO,SAAS36B,EAASrgC,EAAW41B,EAAqB/yB,GACvD,MAAM25C,EAAUvvD,EAAQ2oC,GAAUA,EAAS,CAACA,GACtCtxB,EAAOk4C,EAAQxzD,OAErB,IAAKkZ,EAASlC,GACZ,OAAOA,EAIT,MAAMi7D,GADNp4D,EAAUA,GAAW,CAAC,GACCo4D,QAAUH,EACjC,IAAII,EAEJ,IAAK,IAAItuE,EAAI,EAAGA,EAAI0X,IAAQ1X,EAAG,CAE7B,GADAsuE,EAAU1e,EAAQ5vD,IACbsV,EAASg5D,GACZ,SAGF,MAAMviE,EAAOC,OAAOD,KAAKuiE,GACzB,IAAK,IAAI3uE,EAAI,EAAGquE,EAAOjiE,EAAK3P,OAAQuD,EAAIquE,IAAQruE,EAC9C0uE,EAAOtiE,EAAKpM,GAAIyT,EAAQk7D,EAASr4D,EAErC,CAEA,OAAO7C,CACT,CAgBO,SAASqlC,EAAWrlC,EAAW41B,GAEpC,OAAOyK,EAASrgC,EAAQ41B,EAAQ,CAACqlC,OAAQE,GAC3C,CAMO,SAASA,EAAU54D,EAAavC,EAAmB41B,GACxD,IAAKilC,EAAWt4D,GACd,OAGF,MAAMw4D,EAAO/6D,EAAOuC,GACdy4D,EAAOplC,EAAOrzB,GAEhBL,EAAS64D,IAAS74D,EAAS84D,GAC7B31B,EAAQ01B,EAAMC,GACJpiE,OAAOwpB,UAAUg5C,eAAe3mC,KAAKz0B,EAAQuC,KACvDvC,EAAOuC,GAAOxI,EAAMihE,GAExB,CAKO,SAASK,EAAY17B,EAAen8B,EAAgBkwC,EAAkBwnB,QAC7DhvE,IAAVsX,GACFuF,QAAQC,KAAK22B,EAAQ,MAAQ+T,EAC3B,gCAAkCwnB,EAAU,YAElD,CAGA,MAAMI,EAAe,CAEnB,GAAIxxE,GAAKA,EAETgE,EAAGkiD,GAAKA,EAAEliD,EACVub,EAAG2mC,GAAKA,EAAE3mC,GAML,SAASkyD,EAAUh5D,GACxB,MAAMu+B,EAAQv+B,EAAIm+B,MAAM,KAClB/nC,EAAiB,GACvB,IAAImB,EAAM,GACV,IAAK,MAAM0hE,KAAQ16B,EACjBhnC,GAAO0hE,EACH1hE,EAAIygE,SAAS,MACfzgE,EAAMA,EAAIuxC,MAAM,GAAI,GAAK,KAEzB1yC,EAAKkG,KAAK/E,GACVA,EAAM,IAGV,OAAOnB,CACT,CAiBO,SAAS+T,EAAiB/R,EAAgB4H,GAC/C,MAAMwkC,EAAWu0B,EAAa/4D,KAAS+4D,EAAa/4D,GAhBtD,SAAyBA,GACvB,MAAM5J,EAAO4iE,EAAUh5D,GACvB,OAAO5H,IACL,IAAK,MAAMpO,KAAKoM,EAAM,CACpB,GAAU,KAANpM,EAGF,MAEFoO,EAAMA,GAAOA,EAAIpO,EACnB,CACA,OAAOoO,CAAAA,CAEX,CAG6D8gE,CAAgBl5D,IAC3E,OAAOwkC,EAASpsC,EAClB,CAKO,SAASkoC,EAAYn3C,GAC1B,OAAOA,EAAI4O,OAAO,GAAGohE,cAAgBhwE,EAAI2/C,MAAM,EACjD,OAGap7B,EAAWzM,QAAoC,IAAVA,EAErC4jC,EAAc5jC,GAAsE,mBAAVA,EAG1EkpC,EAAY,CAAI3hD,EAAWC,KACtC,GAAID,EAAE2Y,OAAS1Y,EAAE0Y,KACf,OAAO,EAGT,IAAK,MAAM3F,KAAQhT,EACjB,IAAKC,EAAE+T,IAAIhB,GACT,OAAO,EAIX,OAAO,CAAI,EAON,SAAS2xC,EAAcvkD,GAC5B,MAAkB,YAAXA,EAAE5B,MAAiC,UAAX4B,EAAE5B,MAA+B,gBAAX4B,EAAE5B,IACzD,CCvZO,MAAMg0B,EAAKt0B,KAAKs0B,GACV3B,EAAM,EAAI2B,EACVo+C,EAAQ//C,EAAM2B,EACdq+C,EAAWtuD,OAAOC,kBAClBsuD,EAAct+C,EAAK,IACnBF,EAAUE,EAAK,EACfu+C,EAAav+C,EAAK,EAClBw+C,EAAqB,EAALx+C,EAAS,EAEzB0zC,EAAQhoE,KAAKgoE,MACbjsD,EAAO/b,KAAK+b,KAElB,SAASyrD,EAAa3iE,EAAWub,EAAWyoB,GACjD,OAAO7oC,KAAKuqB,IAAI1lB,EAAIub,GAAKyoB,CAC3B,CAKO,SAASy+B,EAAQzjD,GACtB,MAAMkvD,EAAe/yE,KAAKY,MAAMijB,GAChCA,EAAQ2jD,EAAa3jD,EAAOkvD,EAAclvD,EAAQ,KAAQkvD,EAAelvD,EACzE,MAAMmvD,EAAYhzE,KAAKyQ,IAAI,GAAIzQ,KAAKwX,MAAMwwD,EAAMnkD,KAC1CovD,EAAWpvD,EAAQmvD,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CACxB,CAMO,SAAS/qC,EAAW1tB,GACzB,MAAMgtB,EAAmB,GACnB/L,EAAOx7B,KAAKw7B,KAAKjhB,GACvB,IAAI5W,EAEJ,IAAKA,EAAI,EAAGA,EAAI63B,EAAM73B,IAChB4W,EAAQ5W,GAAM,IAChB4jC,EAAO3xB,KAAKjS,GACZ4jC,EAAO3xB,KAAK2E,EAAQ5W,IAQxB,OALI63B,KAAiB,EAAPA,IACZ+L,EAAO3xB,KAAK4lB,GAGd+L,EAAOrd,MAAK,CAACpoB,EAAGC,IAAMD,EAAIC,IAAGoT,MACtBoyB,CACT,CAEO,SAAS5Q,EAAStzB,GACvB,OAAQ6qB,MAAM2lC,WAAWxwD,KAAiByY,SAASzY,EACrD,CAEO,SAASkkE,EAAY1iE,EAAWgkC,GACrC,MAAMqqC,EAAUlzE,KAAKY,MAAMiE,GAC3B,OAAO,EAAYgkC,GAAYhkC,GAAQquE,EAAUrqC,GAAYhkC,CAC/D,CAKO,SAAS+iE,EACdnrC,EACA1lB,EACAwgC,GAEA,IAAI5zC,EAAW0X,EAAcd,EAE7B,IAAK5W,EAAI,EAAG0X,EAAOohB,EAAM18B,OAAQ4D,EAAI0X,EAAM1X,IACzC4W,EAAQkiB,EAAM94B,GAAG4zC,GACZrpB,MAAM3T,KACTxD,EAAO9V,IAAMjB,KAAKiB,IAAI8V,EAAO9V,IAAKsZ,GAClCxD,EAAO9W,IAAMD,KAAKC,IAAI8W,EAAO9W,IAAKsa,GAGxC,CAEO,SAASiY,EAAU2gD,GACxB,OAAOA,GAAW7+C,EAAK,IACzB,CAEO,SAASia,EAAU6kC,GACxB,OAAOA,GAAW,IAAM9+C,EAC1B,CASO,SAASozC,EAAe7iE,GAC7B,IAAKwuE,EAAexuE,GAClB,OAEF,IAAI3C,EAAI,EACJ+P,EAAI,EACR,KAAOjS,KAAKY,MAAMiE,EAAI3C,GAAKA,IAAM2C,GAC/B3C,GAAK,GACL+P,IAEF,OAAOA,CACT,CAGO,SAAS8pB,EACdu3C,EACAC,GAEA,MAAMC,EAAsBD,EAAW1uE,EAAIyuE,EAAYzuE,EACjD4uE,EAAsBF,EAAWnzD,EAAIkzD,EAAYlzD,EACjDszD,EAA2B1zE,KAAKw7B,KAAKg4C,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAI1/C,EAAQ/zB,KAAK2zE,MAAMF,EAAqBD,GAM5C,OAJIz/C,GAAU,GAAMO,IAClBP,GAASpB,GAGJ,CACLoB,QACA6H,SAAU83C,EAEd,CAEO,SAAShX,EAAsBthC,EAAYC,GAChD,OAAOr7B,KAAKw7B,KAAKx7B,KAAKyQ,IAAI4qB,EAAIx2B,EAAIu2B,EAAIv2B,EAAG,GAAK7E,KAAKyQ,IAAI4qB,EAAIjb,EAAIgb,EAAIhb,EAAG,GACxE,CAMO,SAASwzD,EAAW9xE,EAAWC,GACpC,OAAQD,EAAIC,EAAI2wE,GAAS//C,EAAM2B,CACjC,CAMO,SAASw+B,GAAgBhxD,GAC9B,OAAQA,EAAI6wB,EAAMA,GAAOA,CAC3B,CAKO,SAASqB,GAAcD,EAAe3f,EAAe4G,EAAa64D,GACvE,MAAM/xE,EAAIgxD,GAAgB/+B,GACpB3wB,EAAI0vD,GAAgB1+C,GACpBlS,EAAI4wD,GAAgB93C,GACpB84D,EAAehhB,GAAgB1vD,EAAItB,GACnCiyE,EAAajhB,GAAgB5wD,EAAIJ,GACjCkyE,EAAelhB,GAAgBhxD,EAAIsB,GACnC6wE,EAAanhB,GAAgBhxD,EAAII,GACvC,OAAOJ,IAAMsB,GAAKtB,IAAMI,GAAM2xE,GAAyBzwE,IAAMlB,GACvD4xE,EAAeC,GAAcC,EAAeC,CACpD,CASO,SAAS3lC,GAAY/zB,EAAetZ,EAAahB,GACtD,OAAOD,KAAKC,IAAIgB,EAAKjB,KAAKiB,IAAIhB,EAAKsa,GACrC,CAMO,SAASq2B,GAAYr2B,GAC1B,OAAO+zB,GAAY/zB,GAAQ,MAAO,MACpC,CASO,SAASyvC,GAAWzvC,EAAenG,EAAe4G,EAAa6tB,EAAU,MAC9E,OAAOtuB,GAASva,KAAKiB,IAAImT,EAAO4G,GAAO6tB,GAAWtuB,GAASva,KAAKC,IAAImU,EAAO4G,GAAO6tB,CACpF,CCpLO,SAAS4kC,GACd6C,EACA/1D,EACA25D,GAEAA,EAAMA,GAAAA,CAAS54D,GAAUg1D,EAAMh1D,GAASf,GACxC,IAEI45D,EAFA95C,EAAKi2C,EAAMvwE,OAAS,EACpBq6B,EAAK,EAGT,KAAOC,EAAKD,EAAK,GACf+5C,EAAO/5C,EAAKC,GAAO,EACf65C,EAAIC,GACN/5C,EAAK+5C,EAEL95C,EAAK85C,EAIT,MAAO,CAAC/5C,KAAIC,KACd,CAUO,MAAMJ,GAAe,CAC1Bq2C,EACAh3D,EACAiB,EACAyT,IAEAy/C,GAAQ6C,EAAO/1D,EAAOyT,EAClB1S,IACA,MAAM84D,EAAK9D,EAAMh1D,GAAOhC,GACxB,OAAO86D,EAAK75D,GAAS65D,IAAO75D,GAAS+1D,EAAMh1D,EAAQ,GAAGhC,KAASiB,CAAAA,EAE/De,GAASg1D,EAAMh1D,GAAOhC,GAAOiB,GAStByf,GAAgB,CAC3Bs2C,EACAh3D,EACAiB,IAEAkzD,GAAQ6C,EAAO/1D,GAAOe,GAASg1D,EAAMh1D,GAAOhC,IAAQiB,IAS/C,SAASm0D,GAAeh1D,EAAkBzY,EAAahB,GAC5D,IAAImU,EAAQ,EACR4G,EAAMtB,EAAO3Z,OAEjB,KAAOqU,EAAQ4G,GAAOtB,EAAOtF,GAASnT,GACpCmT,IAEF,KAAO4G,EAAM5G,GAASsF,EAAOsB,EAAM,GAAK/a,GACtC+a,IAGF,OAAO5G,EAAQ,GAAK4G,EAAMtB,EAAO3Z,OAC7B2Z,EAAO0oC,MAAMhuC,EAAO4G,GACpBtB,CACN,CAEA,MAAM26D,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WAgBhD,SAAStyD,GAAkB0a,EAAO4E,GACnC5E,EAAM63C,SACR73C,EAAM63C,SAASzgE,UAAU+B,KAAKyrB,IAIhC1xB,OAAO8gD,eAAeh0B,EAAO,WAAY,CACvCy0B,cAAc,EACdC,YAAY,EACZ52C,MAAO,CACL1G,UAAW,CAACwtB,MAIhBgzC,GAAYrgE,SAASsF,IACnB,MAAMX,EAAS,UAAYihC,EAAYtgC,GACjCoS,EAAO+Q,EAAMnjB,GAEnB3J,OAAO8gD,eAAeh0B,EAAOnjB,EAAK,CAChC43C,cAAc,EACdC,YAAY,EACZ52C,SAAS4O,GACP,MAAM3Q,EAAMkT,EAAKoxC,MAAMxrD,KAAM6X,GAQ7B,OANAsT,EAAM63C,SAASzgE,UAAUG,SAASugE,IACF,mBAAnBA,EAAO57D,IAChB47D,EAAO57D,MAAWwQ,MAIf3Q,CACT,GACF,IAEJ,CAQO,SAASkJ,GAAoB+a,EAAO4E,GACzC,MAAMmzC,EAAO/3C,EAAM63C,SACnB,IAAKE,EACH,OAGF,MAAM3gE,EAAY2gE,EAAK3gE,UACjByH,EAAQzH,EAAUsa,QAAQkT,IACjB,IAAX/lB,GACFzH,EAAUoV,OAAO3N,EAAO,GAGtBzH,EAAU9T,OAAS,IAIvBs0E,GAAYrgE,SAASsF,WACZmjB,EAAMnjB,EAAI,WAGZmjB,EAAM63C,SACf,CAKO,SAASrqD,GAAgBpV,GAC9B,MAAMW,EAAM,IAAImnC,IAChB,IAAIh5C,EAAW0X,EAEf,IAAK1X,EAAI,EAAG0X,EAAOxG,EAAM9U,OAAQ4D,EAAI0X,IAAQ1X,EAC3C6R,EAAIK,IAAIhB,EAAMlR,IAGhB,OAAI6R,EAAIiF,OAASY,EACRxG,EAGF9Q,MAAM2M,KAAK8E,EACpB,CC/LO,SAASs6B,GAAW2kC,EAAmBC,EAAmBC,GAC/D,OAAOD,EAAY,IAAMD,EAAY,MAAQE,CAC/C,CAKargE,MAAAA,GACW,oBAAXC,OACF,SAASi5B,GACd,OAAOA,GACT,EAEKj5B,OAAOqgE,sBAOT,SAASvwC,GACdpwB,EACAs9D,GAEA,IAAIsD,EAAY,GACZC,GAAU,EAEd,OAAO,YAAY3rD,GAEjB0rD,EAAY1rD,EACP2rD,IACHA,GAAU,EACVxgE,GAAiBk3B,KAAKj3B,QAAQ,KAC5BugE,GAAU,EACV7gE,EAAG6oD,MAAMyU,EAASsD,EAAAA,IAGxB,CACF,CAKO,SAASp0B,GAAmCxsC,EAA8BwD,GAC/E,IAAIs9D,EACJ,OAAO,YAAY5rD,GAOjB,OANI1R,GACFu9D,aAAaD,GACbA,EAAUE,WAAWhhE,EAAIwD,EAAO0R,IAEhClV,EAAG6oD,MAAMxrD,KAAM6X,GAEV1R,CACT,CACF,CAMO,MAAM+xB,GAAsBD,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrH0M,GAAiB,CAAC1M,EAAmCn1B,EAAe4G,IAA0B,UAAVuuB,EAAoBn1B,EAAkB,QAAVm1B,EAAkBvuB,GAAO5G,EAAQ4G,GAAO,EAMxJ0/C,GAAS,CAACnxB,EAAoChkB,EAAcF,EAAeg0C,IAE/E9vB,KADO8vB,EAAM,OAAS,SACJh0C,EAAkB,WAAVkkB,GAAsBhkB,EAAOF,GAAS,EAAIE,EAOtE,SAAS6Q,GAAiCna,EAAqCmU,EAAwB+F,GAC5G,MAAM26B,EAAa1gC,EAAOrwB,OAE1B,IAAIqU,EAAQ,EACRyO,EAAQiuC,EAEZ,GAAI70C,EAAK8G,QAAS,CAChB,MAAM,OAAC9F,EAAAA,QAAQe,GAAW/B,EACpBkB,EAAOF,EAAOE,MACd,IAAClc,EAAG,IAAEhB,EAAG,WAAEykB,EAAU,WAAEC,GAAc1H,EAAO2H,gBAE9CF,IACFtQ,EAAQk6B,GAAYtuC,KAAKiB,IAEvBg5B,GAAajc,EAASf,EAAOE,KAAMlc,GAAKm5B,GAExCjE,EAAqB26B,EAAa72B,GAAa7J,EAAQjT,EAAMF,EAAOuN,iBAAiBvpB,IAAMm5B,IAC7F,EAAG02B,EAAa,IAGhBjuC,EADE8B,EACM2pB,GAAYtuC,KAAKC,IAEvBg6B,GAAajc,EAASf,EAAOE,KAAMld,GAAK,GAAMo6B,GAAK,EAEnDlE,EAAqB,EAAI8D,GAAa7J,EAAQjT,EAAMF,EAAOuN,iBAAiBvqB,IAAM,GAAMo6B,GAAK,GAC/FjmB,EAAO08C,GAAc18C,EAEb08C,EAAa18C,EAIzB,MAAO,CAACA,QAAOyO,QACjB,CAQO,SAASwT,GAAoBpa,GAClC,MAAM,OAACgF,EAAM,OAAEE,EAAAA,aAAQ+zD,GAAgBj5D,EACjCk5D,EAAY,CAChBC,KAAMn0D,EAAOhgB,IACbo0E,KAAMp0D,EAAOhhB,IACbq1E,KAAMn0D,EAAOlgB,IACbs0E,KAAMp0D,EAAOlhB,KAEf,IAAKi1E,EAEH,OADAj5D,EAAKi5D,aAAeC,GACb,EAET,MAAM/1C,EAAU81C,EAAaE,OAASn0D,EAAOhgB,KAC1Ci0E,EAAaG,OAASp0D,EAAOhhB,KAC7Bi1E,EAAaI,OAASn0D,EAAOlgB,KAC7Bi0E,EAAaK,OAASp0D,EAAOlhB,IAGhC,OADA0P,OAAOqB,OAAOkkE,EAAcC,GACrB/1C,CACT,CC/IA,MAAMo2C,GAAUpjE,GAAoB,IAANA,GAAiB,IAANA,EACnCqjE,GAAY,CAACrjE,EAAWhP,EAAW6O,KAAgBjS,KAAKyQ,IAAI,EAAG,IAAM2B,GAAK,IAAMpS,KAAK2zB,KAAKvhB,EAAIhP,GAAKuvB,EAAM1gB,GACzGyjE,GAAa,CAACtjE,EAAWhP,EAAW6O,IAAcjS,KAAKyQ,IAAI,GAAI,GAAK2B,GAAKpS,KAAK2zB,KAAKvhB,EAAIhP,GAAKuvB,EAAM1gB,GAAK,EAOvGoF,GAAU,CACds+D,OAASvjE,GAAcA,EAEvBwjE,WAAaxjE,GAAcA,EAAIA,EAE/ByjE,YAAczjE,IAAeA,GAAKA,EAAI,GAEtC0jE,cAAgB1jE,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAE9B2jE,YAAc3jE,GAAcA,EAAIA,EAAIA,EAEpC4jE,aAAe5jE,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhD6jE,eAAiB7jE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9B8jE,YAAc9jE,GAAcA,EAAIA,EAAIA,EAAIA,EAExC+jE,aAAe/jE,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtDgkE,eAAiBhkE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnCikE,YAAcjkE,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5CkkE,aAAelkE,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExDmkE,eAAiBnkE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtCokE,WAAapkE,GAAuC,EAAxBpS,KAAKyzB,IAAIrhB,EAAIgiB,GAEzCqiD,YAAcrkE,GAAcpS,KAAK2zB,IAAIvhB,EAAIgiB,GAEzCsiD,cAAgBtkE,IAAe,IAAOpS,KAAKyzB,IAAIa,EAAKliB,GAAK,GAEzDukE,WAAavkE,GAAqB,IAAP,EAAY,EAAIpS,KAAKyQ,IAAI,EAAG,IAAM2B,EAAI,IAEjEwkE,YAAcxkE,GAAqB,IAAP,EAAY,EAA4B,EAAvBpS,KAAKyQ,IAAI,GAAI,GAAK2B,GAE/DykE,cAAgBzkE,GAAcojE,GAAOpjE,GAAKA,EAAIA,EAAI,GAC9C,GAAMpS,KAAKyQ,IAAI,EAAG,IAAU,EAAJ2B,EAAQ,IAChC,IAAyC,EAAjCpS,KAAKyQ,IAAI,GAAI,IAAU,EAAJ2B,EAAQ,KAEvC0kE,WAAa1kE,GAAc,GAAM,EAAKA,IAAMpS,KAAKw7B,KAAK,EAAIppB,EAAIA,GAAK,GAEnE2kE,YAAc3kE,GAAcpS,KAAKw7B,KAAK,GAAKppB,GAAK,GAAKA,GAErD4kE,cAAgB5kE,IAAgBA,GAAK,IAAO,GACvC,IAAOpS,KAAKw7B,KAAK,EAAIppB,EAAIA,GAAK,GAC/B,IAAOpS,KAAKw7B,KAAK,GAAKppB,GAAK,GAAKA,GAAK,GAEzC6kE,cAAgB7kE,GAAcojE,GAAOpjE,GAAKA,EAAIqjE,GAAUrjE,EAAG,KAAO,IAElE8kE,eAAiB9kE,GAAcojE,GAAOpjE,GAAKA,EAAIsjE,GAAWtjE,EAAG,KAAO,IAEpE+kE,iBAAiB/kE,GACf,MAAMhP,EAAI,MAEV,OAAOoyE,GAAOpjE,GAAKA,EACjBA,EAAI,GACA,GAAMqjE,GAAc,EAAJrjE,EAAOhP,EAHnB,KAIJ,GAAM,GAAMsyE,GAAe,EAAJtjE,EAAQ,EAAGhP,EAJ9B,IAKZ,EAEAg0E,WAAWhlE,GACT,MAAMhP,EAAI,QACV,OAAOgP,EAAIA,IAAMhP,EAAI,GAAKgP,EAAIhP,EAChC,EAEAi0E,YAAYjlE,GACV,MAAMhP,EAAI,QACV,OAAQgP,GAAK,GAAKA,IAAMhP,EAAI,GAAKgP,EAAIhP,GAAK,CAC5C,EAEAk0E,cAAcllE,GACZ,IAAIhP,EAAI,QACR,OAAKgP,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBhP,GAAM,QAAegP,EAAIhP,GAA3C,GAEF,KAAQgP,GAAK,GAAKA,IAAuB,GAAhBhP,GAAM,QAAegP,EAAIhP,GAAK,EAChE,EAEAm0E,aAAenlE,GAAc,EAAIiF,GAAQmgE,cAAc,EAAIplE,GAE3DolE,cAAcplE,GACZ,MAAM9N,EAAI,OACJrC,EAAI,KACV,OAAImQ,EAAK,EAAInQ,EACJqC,EAAI8N,EAAIA,EAEbA,EAAK,EAAInQ,EACJqC,GAAK8N,GAAM,IAAMnQ,GAAMmQ,EAAI,IAEhCA,EAAK,IAAMnQ,EACNqC,GAAK8N,GAAM,KAAOnQ,GAAMmQ,EAAI,MAE9B9N,GAAK8N,GAAM,MAAQnQ,GAAMmQ,EAAI,OACtC,EAEAqlE,gBAAkBrlE,GAAeA,EAAI,GACH,GAA9BiF,GAAQkgE,aAAiB,EAAJnlE,GACc,GAAnCiF,GAAQmgE,cAAkB,EAAJplE,EAAQ,GAAW,ICpHxC,SAASslE,GAAoBn9D,GAClC,GAAIA,GAA0B,iBAAVA,EAAoB,CACtC,MAAMja,EAAOia,EAAM22D,WACnB,MAAgB,2BAAT5wE,GAA8C,4BAATA,EAG9C,OAAO,CACT,CAWO,SAASsR,GAAM2I,GACpB,OAAOm9D,GAAoBn9D,GAASA,EAAQ,IAAIpJ,EAAAA,MAAMoJ,EACxD,CAKO,SAASo9D,GAAcp9D,GAC5B,OAAOm9D,GAAoBn9D,GACvBA,EACA,IAAIpJ,EAAAA,MAAMoJ,GAAOzH,SAAS,IAAKD,OAAO,IAAK/P,WACjD,CC/BA,MAAM0pB,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CorD,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAIvkE,IAaf,SAASmiB,GAAaqiD,EAAapiD,EAAgB9b,GACxD,OAZF,SAAyB8b,EAAgB9b,GACvCA,EAAUA,GAAW,CAAC,EACtB,MAAMkN,EAAW4O,EAASqiD,KAAKC,UAAUp+D,GACzC,IAAI61D,EAAYoI,GAAUviE,IAAIwR,GAK9B,OAJK2oD,IACHA,EAAY,IAAIwI,KAAKC,aAAaxiD,EAAQ9b,GAC1Ci+D,GAAUriE,IAAIsR,EAAU2oD,IAEnBA,CACT,CAGS0I,CAAgBziD,EAAQ9b,GAAS0f,OAAOw+C,EACjD,CCRA,MAAMM,GAAa,CAOjB1+D,OAAOa,GACEvW,EAAQuW,GAAkCA,EAAS,GAAKA,EAWjE89D,QAAQC,EAAWh9D,EAAOmP,GACxB,GAAkB,IAAd6tD,EACF,MAAO,IAGT,MAAM5iD,EAASpkB,KAAKoC,MAAMkG,QAAQ8b,OAClC,IAAI6iD,EACAC,EAAQF,EAEZ,GAAI7tD,EAAM1qB,OAAS,EAAG,CAEpB,MAAM04E,EAAUz4E,KAAKC,IAAID,KAAKuqB,IAAIE,EAAM,GAAGlQ,OAAQva,KAAKuqB,IAAIE,EAAMA,EAAM1qB,OAAS,GAAGwa,SAChFk+D,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAmCN,SAAwBF,EAAW7tD,GAGjC,IAAI+tD,EAAQ/tD,EAAM1qB,OAAS,EAAI0qB,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAAQkQ,EAAM,GAAGlQ,MAGvFva,KAAKuqB,IAAIiuD,IAAU,GAAKF,IAAct4E,KAAKwX,MAAM8gE,KAEnDE,EAAQF,EAAYt4E,KAAKwX,MAAM8gE,IAEjC,OAAOE,CACT,CA9CcE,CAAeJ,EAAW7tD,GAGpC,MAAMkuD,EAAW3Q,EAAMhoE,KAAKuqB,IAAIiuD,IAC1BI,EAAa54E,KAAKC,IAAID,KAAKiB,KAAK,EAAIjB,KAAKwX,MAAMmhE,GAAW,IAAK,GAE/D/+D,EAAU,CAAC2+D,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFAjpE,OAAOqB,OAAO4I,EAAStI,KAAKsI,QAAQ6Q,MAAM6O,QAEnC7D,GAAa6iD,EAAW5iD,EAAQ9b,EACzC,EAWAm/D,YAAYT,EAAWh9D,EAAOmP,GAC5B,GAAkB,IAAd6tD,EACF,MAAO,IAET,MAAMlgE,EAASqS,EAAMnP,GAAOotD,aAAgB4P,EAAat4E,KAAKyQ,IAAI,GAAIzQ,KAAKwX,MAAMwwD,EAAMsQ,KACvF,MAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIl7C,SAAShlB,IAAWkD,EAAQ,GAAMmP,EAAM1qB,OACxDq4E,GAAWC,QAAQ7sC,KAAKl6B,KAAMgnE,EAAWh9D,EAAOmP,GAElD,EACT,GAsBF,OAAe,CAAC2tD,qBCzFHjgC,GAAYxoC,OAAOinC,OAAO,MAC1BqB,GAActoC,OAAOinC,OAAO,MAOzC,SAASoiC,GAASl2C,EAAMxpB,GACtB,IAAKA,EACH,OAAOwpB,EAET,MAAMpzB,EAAO4J,EAAIm+B,MAAM,KACvB,IAAK,IAAI9zC,EAAI,EAAGN,EAAIqM,EAAK3P,OAAQ4D,EAAIN,IAAKM,EAAG,CAC3C,MAAML,EAAIoM,EAAK/L,GACfm/B,EAAOA,EAAKx/B,KAAOw/B,EAAKx/B,GAAKqM,OAAOinC,OAAO,MAC7C,CACA,OAAO9T,CACT,CAEA,SAASttB,GAAIyjE,EAAMviC,EAAOh9B,GACxB,MAAqB,iBAAVg9B,EACFU,EAAM4hC,GAASC,EAAMviC,GAAQh9B,GAE/B09B,EAAM4hC,GAASC,EAAM,IAAKviC,EACnC,CAMO,MAAMwiC,GACX9nE,YAAY8oC,EAAci/B,GACxB7nE,KAAKkJ,eAAYvX,EACjBqO,KAAK5Q,gBAAkB,kBACvB4Q,KAAKqgB,YAAc,kBACnBrgB,KAAKM,MAAQ,OACbN,KAAK7Q,SAAW,CAAC,EACjB6Q,KAAKyyB,iBAAoB3d,GAAYA,EAAQ1S,MAAM0pC,SAAS7b,sBAC5DjwB,KAAKsU,SAAW,CAAC,EACjBtU,KAAKkyC,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFlyC,KAAK63B,KAAO,CACViwC,OAAQ,qDACR3+D,KAAM,GACN8W,MAAO,SACP8X,WAAY,IACZx3B,OAAQ,MAEVP,KAAK20C,MAAQ,CAAC,EACd30C,KAAK+nE,qBAAuB,CAAC76D,EAAK5E,IAAY+9D,GAAc/9D,EAAQlZ,iBACpE4Q,KAAKgoE,iBAAmB,CAAC96D,EAAK5E,IAAY+9D,GAAc/9D,EAAQ+X,aAChErgB,KAAKioE,WAAa,CAAC/6D,EAAK5E,IAAY+9D,GAAc/9D,EAAQhI,OAC1DN,KAAKsP,UAAY,IACjBtP,KAAKsnB,YAAc,CACjBjd,KAAM,UACNke,WAAW,EACXe,kBAAkB,GAEpBtpB,KAAKsvC,qBAAsB,EAC3BtvC,KAAKs1C,QAAU,KACft1C,KAAKygB,QAAU,KACfzgB,KAAKqR,SAAU,EACfrR,KAAK6f,QAAU,CAAC,EAChB7f,KAAKuvC,YAAa,EAClBvvC,KAAKsJ,WAAQ3X,EACbqO,KAAKsM,OAAS,CAAC,EACftM,KAAKykB,UAAW,EAChBzkB,KAAKyU,yBAA0B,EAE/BzU,KAAKkoE,SAASt/B,GACd5oC,KAAKwrD,MAAMqc,EACb,CAMA3jE,IAAIkhC,EAAOh9B,GACT,OAAOlE,GAAIlE,KAAMolC,EAAOh9B,EAC1B,CAKApE,IAAIohC,GACF,OAAOsiC,GAAS1nE,KAAMolC,EACxB,CAMA8iC,SAAS9iC,EAAOh9B,GACd,OAAOlE,GAAIyiC,GAAavB,EAAOh9B,EACjC,CAEAi9B,SAASD,EAAOh9B,GACd,OAAOlE,GAAI2iC,GAAWzB,EAAOh9B,EAC/B,CAmBA+/D,MAAM/iC,EAAOpoB,EAAMypB,EAAaD,GAC9B,MAAM4hC,EAAcV,GAAS1nE,KAAMolC,GAC7BijC,EAAoBX,GAAS1nE,KAAMymC,GACnC6hC,EAAc,IAAMtrD,EAE1B3e,OAAOkqE,iBAAiBH,EAAa,CAEnC,CAACE,GAAc,CACbr/D,MAAOm/D,EAAYprD,GACnBwrD,UAAU,GAGZ,CAACxrD,GAAO,CACN6iC,YAAY,EACZ77C,MACE,MAAMqlC,EAAQrpC,KAAKsoE,GACb7iE,EAAS4iE,EAAkB7hC,GACjC,OAAI7+B,EAAS0hC,GACJhrC,OAAOqB,OAAO,CAAC,EAAG+F,EAAQ4jC,GAE5Bp6B,EAAeo6B,EAAO5jC,EAC/B,EACAvB,IAAI+E,GACFjJ,KAAKsoE,GAAer/D,CACtB,IAGN,CAEAuiD,MAAMid,GACJA,EAAS/lE,SAAS8oD,GAAUA,EAAMxrD,OACpC,EAIF,OAA+B,IAAI4nE,GAAS,CAC1CloD,YAAc1C,IAAUA,EAAKutC,WAAW,MACxC5qC,WAAa3C,GAAkB,WAATA,EACtB23B,MAAO,CACL+e,UAAW,eAEbpsC,YAAa,CACX5H,aAAa,EACbC,YAAY,IAEb,CH3KI,SAAiC9X,GACtCA,EAAS3D,IAAI,YAAa,CACxBiC,WAAOxU,EACP8Q,SAAU,IACVuD,OAAQ,eACRrD,QAAIhR,EACJyN,UAAMzN,EACN0U,UAAM1U,EACNuN,QAAIvN,EACJ3C,UAAM2C,IAGRkW,EAASqgE,SAAS,YAAa,CAC7BxU,WAAW,EACX/zC,YAAY,EACZD,YAAc1C,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3EnV,EAAS3D,IAAI,aAAc,CACzBoiE,OAAQ,CACNt3E,KAAM,QACNkZ,WAAYo+D,IAEdprD,QAAS,CACPlsB,KAAM,SACNkZ,WAAYgT,MAIhBrT,EAASqgE,SAAS,aAAc,CAC9BxU,UAAW,cAGb7rD,EAAS3D,IAAI,cAAe,CAC1ByC,OAAQ,CACNuC,UAAW,CACTzG,SAAU,MAGdiwB,OAAQ,CACNxpB,UAAW,CACTzG,SAAU,IAGd8wC,KAAM,CACJ7qC,WAAY,CACV49D,OAAQ,CACNlnE,KAAM,eAER+xC,QAAS,CACPniD,KAAM,UACNyT,SAAU,KAIhB6wC,KAAM,CACJ5qC,WAAY,CACV49D,OAAQ,CACNpnE,GAAI,eAENiyC,QAAS,CACPniD,KAAM,UACNgX,OAAQ,SACRrD,GAAIpT,GAAS,EAAJA,MAKnB,EIvEO,SAA8BsY,GACnCA,EAAS3D,IAAI,SAAU,CACrBytC,aAAa,EACbzjB,QAAS,CACPpa,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGZ,ECRO,SAA4BpM,GACjCA,EAAS3D,IAAI,QAAS,CACpB8hB,SAAS,EACT5K,QAAQ,EACR3R,SAAS,EACT8R,aAAa,EASbuhC,OAAQ,QAMR1iB,MAAO,EAGP/e,KAAM,CACJ2K,SAAS,EACTzF,UAAW,EACXyjB,iBAAiB,EACjBtM,WAAW,EACXpC,WAAY,EACZiH,UAAW,CAACtvB,EAAM3E,IAAYA,EAAQiY,UACtCkhB,UAAW,CAACx0B,EAAM3E,IAAYA,EAAQhI,MACtC8a,QAAQ,GAGVsK,OAAQ,CACNM,SAAS,EACTsb,KAAM,GACNE,WAAY,EACZhlB,MAAO,GAITvuB,MAAO,CAEL+3B,SAAS,EAGT9F,KAAM,GAGNgO,QAAS,CACPpa,IAAK,EACLE,OAAQ,IAKZmF,MAAO,CACLkjB,YAAa,EACbC,YAAa,GACbmB,QAAQ,EACRiF,gBAAiB,EACjBF,gBAAiB,GACjBtU,QAAS,EACTlI,SAAS,EACTmP,UAAU,EACV0K,gBAAiB,EACjBwC,YAAa,EAEbnG,SAAUs6B,GAAMsQ,WAAW1+D,OAC3Bu1D,MAAO,CAAC,EACR5nC,MAAO,CAAC,EACRkC,MAAO,SACP2J,WAAY,OAEZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAIrBl7B,EAASsgE,MAAM,cAAe,QAAS,GAAI,SAC3CtgE,EAASsgE,MAAM,aAAc,QAAS,GAAI,eAC1CtgE,EAASsgE,MAAM,eAAgB,QAAS,GAAI,eAC5CtgE,EAASsgE,MAAM,cAAe,QAAS,GAAI,SAE3CtgE,EAASqgE,SAAS,QAAS,CACzBxU,WAAW,EACXh0C,YAAc1C,IAAUA,EAAKutC,WAAW,YAAcvtC,EAAKutC,WAAW,UAAqB,aAATvtC,GAAgC,WAATA,EACzG2C,WAAa3C,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9EnV,EAASqgE,SAAS,SAAU,CAC1BxU,UAAW,UAGb7rD,EAASqgE,SAAS,cAAe,CAC/BxoD,YAAc1C,GAAkB,oBAATA,GAAuC,aAATA,EACrD2C,WAAa3C,GAAkB,oBAATA,GAE1B,ICjFO,SAAS0rD,GAAa7wC,GAC3B,OAAKA,GAAQ5b,EAAc4b,EAAK1uB,OAAS8S,EAAc4b,EAAKiwC,QACnD,MAGDjwC,EAAK5X,MAAQ4X,EAAK5X,MAAQ,IAAM,KACrC4X,EAAKt3B,OAASs3B,EAAKt3B,OAAS,IAAM,IACnCs3B,EAAK1uB,KAAO,MACZ0uB,EAAKiwC,MACT,CAKO,SAAS/oC,GAAa7xB,EAAKje,EAAM6vC,EAAI6pC,EAAS9pC,GACnD,IAAI6pB,EAAYz5D,EAAK4vC,GAQrB,OAPK6pB,IACHA,EAAYz5D,EAAK4vC,GAAU3xB,EAAI+5C,YAAYpoB,GAAQriB,MACnDsiB,EAAGx6B,KAAKu6B,IAEN6pB,EAAYigB,IACdA,EAAUjgB,GAELigB,CACT,CAKO,SAAStQ,GAAanrD,EAAK2qB,EAAM+wC,EAAerzD,GAErD,IAAItmB,GADJsmB,EAAQA,GAAS,CAAC,GACDtmB,KAAOsmB,EAAMtmB,MAAQ,CAAC,EACnC6vC,EAAKvpB,EAAM0pB,eAAiB1pB,EAAM0pB,gBAAkB,GAEpD1pB,EAAMsiB,OAASA,IACjB5oC,EAAOsmB,EAAMtmB,KAAO,CAAC,EACrB6vC,EAAKvpB,EAAM0pB,eAAiB,GAC5B1pB,EAAMsiB,KAAOA,GAGf3qB,EAAIk2B,OAEJl2B,EAAI2qB,KAAOA,EACX,IAAI8wC,EAAU,EACd,MAAM5+D,EAAO6+D,EAAcn6E,OAC3B,IAAI4D,EAAGkM,EAAG+/B,EAAMuqC,EAAOC,EACvB,IAAKz2E,EAAI,EAAGA,EAAI0X,EAAM1X,IAIpB,GAHAw2E,EAAQD,EAAcv2E,GAGlBw2E,UAA4D,IAAnBn2E,EAAQm2E,GACnDF,EAAU5pC,GAAa7xB,EAAKje,EAAM6vC,EAAI6pC,EAASE,QAC1C,GAAIn2E,EAAQm2E,GAGjB,IAAKtqE,EAAI,EAAG+/B,EAAOuqC,EAAMp6E,OAAQ8P,EAAI+/B,EAAM//B,IACzCuqE,EAAcD,EAAMtqE,GAEhBuqE,SAAsDp2E,EAAQo2E,KAChEH,EAAU5pC,GAAa7xB,EAAKje,EAAM6vC,EAAI6pC,EAASG,IAMvD57D,EAAIo2B,UAEJ,MAAMtE,EAAQF,EAAGrwC,OAAS,EAC1B,GAAIuwC,EAAQ4pC,EAAcn6E,OAAQ,CAChC,IAAK4D,EAAI,EAAGA,EAAI2sC,EAAO3sC,WACdpD,EAAK6vC,EAAGzsC,IAEjBysC,EAAGnnB,OAAO,EAAGqnB,GAEf,OAAO2pC,CACT,CAUO,SAASppC,GAAYn9B,EAAOg9B,EAAO5iB,GACxC,MAAMiW,EAAmBrwB,EAAMuwB,wBACzBo2C,EAAsB,IAAVvsD,EAAc9tB,KAAKC,IAAI6tB,EAAQ,EAAG,IAAO,EAC3D,OAAO9tB,KAAKY,OAAO8vC,EAAQ2pC,GAAat2C,GAAoBA,EAAmBs2C,CACjF,CAOO,SAASr5B,GAAY9f,EAAQ1iB,IAClCA,EAAMA,GAAO0iB,EAAOxe,WAAW,OAE3BgyB,OAGJl2B,EAAI87D,iBACJ97D,EAAI+7D,UAAU,EAAG,EAAGr5C,EAAOpT,MAAOoT,EAAOrT,QACzCrP,EAAIo2B,SACN,CAEO,SAASkZ,GAAUtvC,EAAK5E,EAAS/U,EAAGub,GACzCk6C,GAAgB97C,EAAK5E,EAAS/U,EAAGub,EAAG,KACtC,CAEO,SAASk6C,GAAgB97C,EAAK5E,EAAS/U,EAAGub,EAAG3c,GAClD,IAAInD,EAAMk6E,EAASC,EAAShgE,EAAM8kD,EAAczxC,EAAO4sD,EAAUC,EACjE,MAAMppD,EAAQ3X,EAAQ0X,WAChBT,EAAWjX,EAAQiX,SACnBV,EAASvW,EAAQuW,OACvB,IAAI01C,GAAOh1C,GAAY,GAAK+hD,EAE5B,GAAIrhD,GAA0B,iBAAVA,IAClBjxB,EAAOixB,EAAM2/C,WACA,8BAAT5wE,GAAiD,+BAATA,GAM1C,OALAke,EAAIk2B,OACJl2B,EAAI2rC,UAAUtlD,EAAGub,GACjB5B,EAAI9Z,OAAOmhE,GACXrnD,EAAIo8D,UAAUrpD,GAAQA,EAAMzD,MAAQ,GAAIyD,EAAM1D,OAAS,EAAG0D,EAAMzD,MAAOyD,EAAM1D,aAC7ErP,EAAIo2B,UAKR,KAAI1mB,MAAMiC,IAAWA,GAAU,GAA/B,CAMA,OAFA3R,EAAI02B,YAEI3jB,GAER,QACM9tB,EACF+a,EAAIq8D,QAAQh2E,EAAGub,EAAG3c,EAAI,EAAG0sB,EAAQ,EAAG,EAAGwC,GAEvCnU,EAAI+W,IAAI1wB,EAAGub,EAAG+P,EAAQ,EAAGwC,GAE3BnU,EAAI2qC,YACJ,MACF,IAAK,WACHr7B,EAAQrqB,EAAIA,EAAI,EAAI0sB,EACpB3R,EAAI22B,OAAOtwC,EAAI7E,KAAK2zB,IAAIkyC,GAAO/3C,EAAO1N,EAAIpgB,KAAKyzB,IAAIoyC,GAAO11C,GAC1D01C,GAAOiN,EACPt0D,EAAI42B,OAAOvwC,EAAI7E,KAAK2zB,IAAIkyC,GAAO/3C,EAAO1N,EAAIpgB,KAAKyzB,IAAIoyC,GAAO11C,GAC1D01C,GAAOiN,EACPt0D,EAAI42B,OAAOvwC,EAAI7E,KAAK2zB,IAAIkyC,GAAO/3C,EAAO1N,EAAIpgB,KAAKyzB,IAAIoyC,GAAO11C,GAC1D3R,EAAI2qC,YACJ,MACF,IAAK,cAQHoW,EAAwB,KAATpvC,EACf1V,EAAO0V,EAASovC,EAChBib,EAAUx6E,KAAKyzB,IAAIoyC,EAAMgN,GAAcp4D,EACvCigE,EAAW16E,KAAKyzB,IAAIoyC,EAAMgN,IAAepvE,EAAIA,EAAI,EAAI87D,EAAe9kD,GACpEggE,EAAUz6E,KAAK2zB,IAAIkyC,EAAMgN,GAAcp4D,EACvCkgE,EAAW36E,KAAK2zB,IAAIkyC,EAAMgN,IAAepvE,EAAIA,EAAI,EAAI87D,EAAe9kD,GACpE+D,EAAI+W,IAAI1wB,EAAI61E,EAAUt6D,EAAIq6D,EAASlb,EAAcsG,EAAMvxC,EAAIuxC,EAAMzxC,GACjE5V,EAAI+W,IAAI1wB,EAAI81E,EAAUv6D,EAAIo6D,EAASjb,EAAcsG,EAAMzxC,EAASyxC,GAChErnD,EAAI+W,IAAI1wB,EAAI61E,EAAUt6D,EAAIq6D,EAASlb,EAAcsG,EAAKA,EAAMzxC,GAC5D5V,EAAI+W,IAAI1wB,EAAI81E,EAAUv6D,EAAIo6D,EAASjb,EAAcsG,EAAMzxC,EAASyxC,EAAMvxC,GACtE9V,EAAI2qC,YACJ,MACF,IAAK,OACH,IAAKt4B,EAAU,CACbpW,EAAOza,KAAK86E,QAAU3qD,EACtBrC,EAAQrqB,EAAIA,EAAI,EAAIgX,EACpB+D,EAAI4wC,KAAKvqD,EAAIipB,EAAO1N,EAAI3F,EAAM,EAAIqT,EAAO,EAAIrT,GAC7C,MAEForD,GAAOgN,EAET,IAAK,UACH6H,EAAW16E,KAAKyzB,IAAIoyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxCqqD,EAAUx6E,KAAKyzB,IAAIoyC,GAAO11C,EAC1BsqD,EAAUz6E,KAAK2zB,IAAIkyC,GAAO11C,EAC1BwqD,EAAW36E,KAAK2zB,IAAIkyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxC3R,EAAI22B,OAAOtwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI42B,OAAOvwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7Bh8D,EAAI42B,OAAOvwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI42B,OAAOvwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7Bh8D,EAAI2qC,YACJ,MACF,IAAK,WACH0c,GAAOgN,EAET,IAAK,QACH6H,EAAW16E,KAAKyzB,IAAIoyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxCqqD,EAAUx6E,KAAKyzB,IAAIoyC,GAAO11C,EAC1BsqD,EAAUz6E,KAAK2zB,IAAIkyC,GAAO11C,EAC1BwqD,EAAW36E,KAAK2zB,IAAIkyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxC3R,EAAI22B,OAAOtwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI42B,OAAOvwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI22B,OAAOtwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7Bh8D,EAAI42B,OAAOvwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7B,MACF,IAAK,OACHE,EAAW16E,KAAKyzB,IAAIoyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxCqqD,EAAUx6E,KAAKyzB,IAAIoyC,GAAO11C,EAC1BsqD,EAAUz6E,KAAK2zB,IAAIkyC,GAAO11C,EAC1BwqD,EAAW36E,KAAK2zB,IAAIkyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxC3R,EAAI22B,OAAOtwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI42B,OAAOvwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI22B,OAAOtwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7Bh8D,EAAI42B,OAAOvwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7B3U,GAAOgN,EACP6H,EAAW16E,KAAKyzB,IAAIoyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxCqqD,EAAUx6E,KAAKyzB,IAAIoyC,GAAO11C,EAC1BsqD,EAAUz6E,KAAK2zB,IAAIkyC,GAAO11C,EAC1BwqD,EAAW36E,KAAK2zB,IAAIkyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GACxC3R,EAAI22B,OAAOtwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI42B,OAAOvwC,EAAI61E,EAAUt6D,EAAIq6D,GAC7Bj8D,EAAI22B,OAAOtwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7Bh8D,EAAI42B,OAAOvwC,EAAI81E,EAAUv6D,EAAIo6D,GAC7B,MACF,IAAK,OACHA,EAAU/2E,EAAIA,EAAI,EAAIzD,KAAKyzB,IAAIoyC,GAAO11C,EACtCsqD,EAAUz6E,KAAK2zB,IAAIkyC,GAAO11C,EAC1B3R,EAAI22B,OAAOtwC,EAAI21E,EAASp6D,EAAIq6D,GAC5Bj8D,EAAI42B,OAAOvwC,EAAI21E,EAASp6D,EAAIq6D,GAC5B,MACF,IAAK,OACHj8D,EAAI22B,OAAOtwC,EAAGub,GACd5B,EAAI42B,OAAOvwC,EAAI7E,KAAKyzB,IAAIoyC,IAAQpiE,EAAIA,EAAI,EAAI0sB,GAAS/P,EAAIpgB,KAAK2zB,IAAIkyC,GAAO11C,GACzE,MACF,KAAK,EACH3R,EAAI2qC,YAIN3qC,EAAIoB,OACAhG,EAAQkY,YAAc,GACxBtT,EAAI62B,SAER,CAUO,SAASva,GAAezK,EAAOxK,EAAMkZ,GAG1C,OAFAA,EAASA,GAAU,IAEXlZ,GAASwK,GAASA,EAAMxrB,EAAIghB,EAAKN,KAAOwZ,GAAU1O,EAAMxrB,EAAIghB,EAAKR,MAAQ0Z,GACjF1O,EAAMjQ,EAAIyF,EAAKT,IAAM2Z,GAAU1O,EAAMjQ,EAAIyF,EAAKP,OAASyZ,CACzD,CAEO,SAAS2W,GAASl3B,EAAKqH,GAC5BrH,EAAIk2B,OACJl2B,EAAI02B,YACJ12B,EAAI4wC,KAAKvpC,EAAKN,KAAMM,EAAKT,IAAKS,EAAKR,MAAQQ,EAAKN,KAAMM,EAAKP,OAASO,EAAKT,KACzE5G,EAAIkH,MACN,CAEO,SAASmwB,GAAWr3B,GACzBA,EAAIo2B,SACN,CAKO,SAASuW,GAAe3sC,EAAKisC,EAAU1zC,EAAQgkE,EAAMp/D,GAC1D,IAAK8uC,EACH,OAAOjsC,EAAI42B,OAAOr+B,EAAOlS,EAAGkS,EAAOqJ,GAErC,GAAa,WAATzE,EAAmB,CACrB,MAAMq/D,GAAYvwB,EAAS5lD,EAAIkS,EAAOlS,GAAK,EAC3C2Z,EAAI42B,OAAO4lC,EAAUvwB,EAASrqC,GAC9B5B,EAAI42B,OAAO4lC,EAAUjkE,EAAOqJ,EAC9B,KAAoB,UAATzE,KAAuBo/D,EAChCv8D,EAAI42B,OAAOqV,EAAS5lD,EAAGkS,EAAOqJ,GAE9B5B,EAAI42B,OAAOr+B,EAAOlS,EAAG4lD,EAASrqC,GAEhC5B,EAAI42B,OAAOr+B,EAAOlS,EAAGkS,EAAOqJ,EAC9B,CAKO,SAASkrC,GAAe9sC,EAAKisC,EAAU1zC,EAAQgkE,GACpD,IAAKtwB,EACH,OAAOjsC,EAAI42B,OAAOr+B,EAAOlS,EAAGkS,EAAOqJ,GAErC5B,EAAIy8D,cACFF,EAAOtwB,EAASywB,KAAOzwB,EAAS0wB,KAChCJ,EAAOtwB,EAAS2wB,KAAO3wB,EAAS4wB,KAChCN,EAAOhkE,EAAOokE,KAAOpkE,EAAOmkE,KAC5BH,EAAOhkE,EAAOskE,KAAOtkE,EAAOqkE,KAC5BrkE,EAAOlS,EACPkS,EAAOqJ,EACX,CAKO,SAASw1B,GAAWp3B,EAAKgT,EAAM3sB,EAAGub,EAAG+oB,EAAMruB,EAAO,IACvD,MAAMijD,EAAQ/5D,EAAQwtB,GAAQA,EAAO,CAACA,GAChC6jB,EAASv6B,EAAKi5B,YAAc,GAA0B,KAArBj5B,EAAK+4B,YAC5C,IAAIlwC,EAAGsyB,EAMP,IAJAzX,EAAIk2B,OACJl2B,EAAI2qB,KAAOA,EAAKgH,OA+BlB,SAAuB3xB,EAAK1D,GACtBA,EAAKy5B,aACP/1B,EAAI2rC,UAAUrvC,EAAKy5B,YAAY,GAAIz5B,EAAKy5B,YAAY,IAGjDhnB,EAAczS,EAAK+V,WACtBrS,EAAI9Z,OAAOoW,EAAK+V,UAGd/V,EAAKlJ,QACP4M,EAAIiT,UAAY3W,EAAKlJ,OAGnBkJ,EAAKu4B,YACP70B,EAAI60B,UAAYv4B,EAAKu4B,WAGnBv4B,EAAK04B,eACPh1B,EAAIg1B,aAAe14B,EAAK04B,aAE5B,CAlDE8nC,CAAc98D,EAAK1D,GAEdnX,EAAI,EAAGA,EAAIo6D,EAAMh+D,SAAU4D,EAC9BsyB,EAAO8nC,EAAMp6D,GAETmX,EAAKm5B,UACPsnC,GAAa/8D,EAAK1D,EAAKm5B,UAGrBoB,IACEv6B,EAAK+4B,cACPr1B,EAAIkT,YAAc5W,EAAK+4B,aAGpBtmB,EAAczS,EAAKi5B,eACtBv1B,EAAIqT,UAAY/W,EAAKi5B,aAGvBv1B,EAAIg9D,WAAWvlD,EAAMpxB,EAAGub,EAAGtF,EAAK2Z,WAGlCjW,EAAIo8C,SAAS3kC,EAAMpxB,EAAGub,EAAGtF,EAAK2Z,UAC9BgnD,GAAaj9D,EAAK3Z,EAAGub,EAAG6V,EAAMnb,GAE9BsF,GAAK+oB,EAAKE,WAGZ7qB,EAAIo2B,SACN,CAwBA,SAAS6mC,GAAaj9D,EAAK3Z,EAAGub,EAAG6V,EAAMnb,GACrC,GAAIA,EAAK6/C,eAAiB7/C,EAAK4gE,UAAW,CAQxC,MAAMC,EAAUn9D,EAAI+5C,YAAYtiC,GAC1B1Q,EAAO1gB,EAAI82E,EAAQC,sBACnBv2D,EAAQxgB,EAAI82E,EAAQE,uBACpBz2D,EAAMhF,EAAIu7D,EAAQG,wBAClBx2D,EAASlF,EAAIu7D,EAAQI,yBACrBC,EAAclhE,EAAK6/C,eAAiBv1C,EAAME,GAAU,EAAIA,EAE9D9G,EAAIkT,YAAclT,EAAIiT,UACtBjT,EAAI02B,YACJ12B,EAAIqT,UAAY/W,EAAKmhE,iBAAmB,EACxCz9D,EAAI22B,OAAO5vB,EAAMy2D,GACjBx9D,EAAI42B,OAAO/vB,EAAO22D,GAClBx9D,EAAI62B,SAER,CAEA,SAASkmC,GAAa/8D,EAAK1D,GACzB,MAAMohE,EAAW19D,EAAIiT,UAErBjT,EAAIiT,UAAY3W,EAAKlJ,MACrB4M,EAAIm2B,SAAS75B,EAAKyK,KAAMzK,EAAKsK,IAAKtK,EAAKgT,MAAOhT,EAAK+S,QACnDrP,EAAIiT,UAAYyqD,CAClB,CAOO,SAASxsB,GAAmBlxC,EAAK4wC,GACtC,MAAM,EAACvqD,EAAC,EAAEub,EAAC,EAAE3c,EAAC,EAAEzC,EAAC,OAAEmvB,GAAUi/B,EAG7B5wC,EAAI+W,IAAI1wB,EAAIsrB,EAAOy+B,QAASxuC,EAAI+P,EAAOy+B,QAASz+B,EAAOy+B,SAAUx6B,EAASE,GAAI,GAG9E9V,EAAI42B,OAAOvwC,EAAGub,EAAIpf,EAAImvB,EAAO2+B,YAG7BtwC,EAAI+W,IAAI1wB,EAAIsrB,EAAO2+B,WAAY1uC,EAAIpf,EAAImvB,EAAO2+B,WAAY3+B,EAAO2+B,WAAYx6B,EAAIF,GAAS,GAG1F5V,EAAI42B,OAAOvwC,EAAIpB,EAAI0sB,EAAO4+B,YAAa3uC,EAAIpf,GAG3Cwd,EAAI+W,IAAI1wB,EAAIpB,EAAI0sB,EAAO4+B,YAAa3uC,EAAIpf,EAAImvB,EAAO4+B,YAAa5+B,EAAO4+B,YAAa36B,EAAS,GAAG,GAGhG5V,EAAI42B,OAAOvwC,EAAIpB,EAAG2c,EAAI+P,EAAO0+B,UAG7BrwC,EAAI+W,IAAI1wB,EAAIpB,EAAI0sB,EAAO0+B,SAAUzuC,EAAI+P,EAAO0+B,SAAU1+B,EAAO0+B,SAAU,GAAIz6B,GAAS,GAGpF5V,EAAI42B,OAAOvwC,EAAIsrB,EAAOy+B,QAASxuC,EACjC,CClcA,MAAM+7D,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAa9hE,EAAwBE,GACnD,MAAM6hE,GAAW,GAAK/hE,GAAOgiE,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAP7hE,EAKT,OAFAF,GAAS+hE,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAO/hE,EACT,IAAK,IACHA,GAAS,IAMb,OAAOE,EAAOF,CAChB,CAUO,SAAS0sC,GAAkB1sC,EAAwCD,GACxE,MAAM5X,EAAM,CAAC,EACP85E,EAAWvjE,EAASqB,GACpB5K,EAAO8sE,EAAW7sE,OAAOD,KAAK4K,GAASA,EACvCmiE,EAAOxjE,EAASsB,GAClBiiE,EACExlE,GAAQuJ,EAAehG,EAAMvD,GAAOuD,EAAMD,EAAMtD,KAChDA,GAAQuD,EAAMvD,GAChB,IAAMuD,EAEV,IAAK,MAAMvD,KAAQtH,EACjBhN,EAAIsU,IAAqBylE,EAAKzlE,IAnBS,EAqBzC,OAAOtU,CACT,CAUO,SAAS6rD,GAAOh0C,GACrB,OAAO0sC,GAAkB1sC,EAAO,CAAC6K,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC5E,CASO,SAASkpC,GAAcl0C,GAC5B,OAAO0sC,GAAkB1sC,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CAUO,SAASwlB,GAAUxlB,GACxB,MAAM7I,EAAM68C,GAAOh0C,GAKnB,OAHA7I,EAAIoc,MAAQpc,EAAI6T,KAAO7T,EAAI2T,MAC3B3T,EAAImc,OAASnc,EAAI0T,IAAM1T,EAAI4T,OAEpB5T,CACT,CAcO,SAAS03B,GAAOxvB,EAA4BsvB,GACjDtvB,EAAUA,GAAW,CAAC,EACtBsvB,EAAWA,GAAY/vB,GAASgwB,KAEhC,IAAI1uB,EAAO8F,EAAe3G,EAAQa,KAAMyuB,EAASzuB,MAE7B,iBAATA,IACTA,EAAOxK,SAASwK,EAAM,KAExB,IAAI8W,EAAQhR,EAAe3G,EAAQ2X,MAAO2X,EAAS3X,OAC/CA,KAAW,GAAKA,GAAOgrD,MAAMH,MAC/Bt8D,QAAQC,KAAK,kCAAoCwR,EAAQ,KACzDA,OAAQtuB,GAGV,MAAMkmC,EAAO,CACXiwC,OAAQ74D,EAAe3G,EAAQw/D,OAAQlwC,EAASkwC,QAChD/vC,WAAYgzC,GAAa97D,EAAe3G,EAAQyvB,WAAYH,EAASG,YAAa5uB,GAClFA,OACA8W,QACA1f,OAAQ0O,EAAe3G,EAAQ/H,OAAQq3B,EAASr3B,QAChDs+B,OAAQ,IAIV,OADAhH,EAAKgH,OAAS6pC,GAAa7wC,GACpBA,CACT,CAaO,SAASjyB,GAAQwlE,EAAwBt2D,EAAkB9K,EAAgBqhE,GAChF,IACIh5E,EAAW0X,EAAcd,EADzBqiE,GAAY,EAGhB,IAAKj5E,EAAI,EAAG0X,EAAOqhE,EAAO38E,OAAQ4D,EAAI0X,IAAQ1X,EAE5C,GADA4W,EAAQmiE,EAAO/4E,QACDV,IAAVsX,SAGYtX,IAAZmjB,GAA0C,mBAAV7L,IAClCA,EAAQA,EAAM6L,GACdw2D,GAAY,QAEA35E,IAAVqY,GAAuBtX,EAAQuW,KACjCA,EAAQA,EAAMe,EAAQf,EAAMxa,QAC5B68E,GAAY,QAEA35E,IAAVsX,GAIF,OAHIoiE,IAASC,IACXD,EAAKC,WAAY,GAEZriE,CAGb,CAQO,SAAS2xB,GAAU2wC,EAAuCnxC,EAAwB7e,GACvF,MAAM,IAAC5rB,EAAAA,IAAKhB,GAAO48E,EACb/7C,EAASlM,EAAY8W,GAAQzrC,EAAMgB,GAAO,GAC1C67E,EAAW,CAACviE,EAAe1E,IAAgBgX,GAAyB,IAAVtS,EAAc,EAAIA,EAAQ1E,EAC1F,MAAO,CACL5U,IAAK67E,EAAS77E,GAAMjB,KAAKuqB,IAAIuW,IAC7B7gC,IAAK68E,EAAS78E,EAAK6gC,GAEvB,CAUO,SAASxa,GAAcy2D,EAAuB32D,GACnD,OAAOzW,OAAOqB,OAAOrB,OAAOinC,OAAOmmC,GAAgB32D,EACrD,CCrMO,SAASs4B,GAAgBn8B,EAAQ2E,EAAW,CAAC,IAAK81D,EAAaz6D,EAAQ2mB,EAAU+zC,EAAY,KAAM16D,EAAO,KAC1GyE,EAAQkiB,KACXA,EAAWg0C,GAAS,YAAa36D,IAEnC,MAAMsE,EAAQ,CACZ,CAACs2D,OAAOC,aAAc,SACtB51D,YAAY,EACZ61D,QAAS96D,EACT+6D,YAAaN,EACbhY,UAAW97B,EACXwrB,WAAYuoB,EACZtmC,SAAWD,GAAUgI,GAAgB,CAAChI,KAAUn0B,GAAS2E,EAAU81D,EAAY9zC,IAEjF,OAAO,IAAIq0C,MAAM12D,EAAO,CAItB22D,eAAezmE,CAAAA,EAAQC,YACdD,EAAOC,UACPD,EAAO0mE,aACPl7D,EAAO,GAAGvL,IACV,GAMT1B,IAAIyB,CAAAA,EAAQC,IACH0mE,GAAQ3mE,EAAQC,GACrB,IA+QR,SAA8BA,EAAMkQ,EAAU3E,EAAQuiB,GACpD,IAAIvqB,EACJ,IAAK,MAAMirC,KAAUt+B,EAEnB,GADA3M,EAAQ2iE,GAASS,GAAQn4B,EAAQxuC,GAAOuL,GACpCyE,EAAQzM,GACV,OAAOqjE,GAAiB5mE,EAAMuD,GAC1BsjE,GAAkBt7D,EAAQuiB,EAAO9tB,EAAMuD,GACvCA,CAGV,CAzRcujE,CAAqB9mE,EAAMkQ,EAAU3E,EAAQxL,KAOvDgnE,yBAAyBhnE,CAAAA,EAAQC,IACxBgnE,QAAQD,yBAAyBhnE,EAAOsmE,QAAQ,GAAIrmE,GAM7DggC,eAAiB,IACRgnC,QAAQhnC,eAAez0B,EAAO,IAMvCzM,IAAIiB,CAAAA,EAAQC,IACHinE,GAAqBlnE,GAAQqmB,SAASpmB,GAM/CknE,QAAQnnE,GACCknE,GAAqBlnE,GAM9BvB,IAAIuB,EAAQC,EAAMuD,GAChB,MAAM4jE,EAAUpnE,EAAOqnE,WAAarnE,EAAOqnE,SAAWnB,KAGtD,OAFAlmE,EAAOC,GAAQmnE,EAAQnnE,GAAQuD,SACxBxD,EAAO0mE,OACP,CACT,GAEJ,CAUO,SAASl/B,GAAezZ,EAAO1e,EAASi4D,EAAU7/B,GACvD,MAAM33B,EAAQ,CACZW,YAAY,EACZw0B,OAAQlX,EACRw5C,SAAUl4D,EACVm4D,UAAWF,EACXhhD,OAAQ,IAAIsf,IACZzC,aAAcA,GAAapV,EAAO0Z,GAClC3T,WAAarsB,GAAQ+/B,GAAezZ,EAAOtmB,EAAK6/D,EAAU7/B,GAC1D7H,SAAWD,GAAU6H,GAAezZ,EAAM6R,SAASD,GAAQtwB,EAASi4D,EAAU7/B,IAEhF,OAAO,IAAI++B,MAAM12D,EAAO,CAItB22D,eAAezmE,CAAAA,EAAQC,YACdD,EAAOC,UACP8tB,EAAM9tB,IACN,GAMT1B,IAAAA,CAAIyB,EAAQC,EAAMwnE,IACTd,GAAQ3mE,EAAQC,GACrB,IA0ER,SAA6BD,EAAQC,EAAMwnE,GACzC,MAAM,OAACxiC,EAAM,SAAEsiC,EAAQ,UAAEC,EAAWrkC,aAAcjC,GAAelhC,EACjE,IAAIwD,EAAQyhC,EAAOhlC,GAGfmnC,EAAW5jC,IAAU09B,EAAYgG,aAAajnC,KAChDuD,EAYJ,SAA4BvD,EAAMuD,EAAOxD,EAAQynE,GAC/C,MAAM,OAACxiC,EAAAA,SAAQsiC,EAAAA,UAAUC,EAAS,OAAElhD,GAAUtmB,EAC9C,GAAIsmB,EAAOvnB,IAAIkB,GAEb,MAAM,IAAIgiB,MAAM,uBAAyBj1B,MAAM2M,KAAK2sB,GAAQua,KAAK,MAAQ,KAAO5gC,GAElFqmB,EAAOxnB,IAAImB,GACXuD,EAAQA,EAAM+jE,EAAUC,GAAaC,GACrCnhD,EAAO/mB,OAAOU,GACV4mE,GAAiB5mE,EAAMuD,KAEzBA,EAAQsjE,GAAkB7hC,EAAOqhC,QAASrhC,EAAQhlC,EAAMuD,IAE1D,OAAOA,CACT,CA1BYkkE,CAAmBznE,EAAMuD,EAAOxD,EAAQynE,IAE9Cx6E,EAAQuW,IAAUA,EAAMxa,SAC1Bwa,EAyBJ,SAAuBvD,EAAMuD,EAAOxD,EAAQmnC,GAC1C,MAAM,OAAClC,EAAM,SAAEsiC,EAAQ,UAAEC,EAAWrkC,aAAcjC,GAAelhC,EAEjE,GAAIiQ,EAAQs3D,EAAShjE,QAAU4iC,EAAYlnC,GACzCuD,EAAQA,EAAM+jE,EAAShjE,MAAQf,EAAMxa,aAChC,GAAIkZ,EAASsB,EAAM,IAAK,CAE7B,MAAMuO,EAAMvO,EACNgI,EAASy5B,EAAOqhC,QAAQx/D,QAAOza,GAAKA,IAAM0lB,IAChDvO,EAAQ,GACR,IAAK,MAAMzF,KAAQgU,EAAK,CACtB,MAAMg1B,EAAW+/B,GAAkBt7D,EAAQy5B,EAAQhlC,EAAMlC,GACzDyF,EAAM3E,KAAK2oC,GAAeT,EAAUwgC,EAAUC,GAAaA,EAAUvnE,GAAOihC,GAC9E,EAEF,OAAO19B,CACT,CAzCYmkE,CAAc1nE,EAAMuD,EAAOxD,EAAQkhC,EAAYiG,cAErD0/B,GAAiB5mE,EAAMuD,KAEzBA,EAAQgkC,GAAehkC,EAAO+jE,EAAUC,GAAaA,EAAUvnE,GAAOihC,IAExE,OAAO19B,CACT,CA1FcokE,CAAoB5nE,EAAQC,EAAMwnE,KAO5CT,yBAAyBhnE,CAAAA,EAAQC,IACxBD,EAAOmjC,aAAamB,QACvB2iC,QAAQloE,IAAIgvB,EAAO9tB,GAAQ,CAACm6C,YAAY,EAAMD,cAAc,QAAQjuD,EACpE+6E,QAAQD,yBAAyBj5C,EAAO9tB,GAM9CggC,eAAiB,IACRgnC,QAAQhnC,eAAelS,GAMhChvB,IAAIiB,CAAAA,EAAQC,IACHgnE,QAAQloE,IAAIgvB,EAAO9tB,GAM5BknE,QAAU,IACDF,QAAQE,QAAQp5C,GAMzBtvB,IAAAA,CAAIuB,EAAQC,EAAMuD,KAChBuqB,EAAM9tB,GAAQuD,SACPxD,EAAOC,IACP,IAGb,CAKO,SAASkjC,GAAapV,EAAO3rB,EAAW,CAACgiC,YAAY,EAAMC,WAAW,IAC3E,MAAM,YAACpqB,EAAc7X,EAASgiC,WAAU,WAAElqB,EAAa9X,EAASiiC,UAAS,SAAEwjC,EAAWzlE,EAASkiC,SAAWvW,EAC1G,MAAO,CACLuW,QAASujC,EACTzjC,WAAYnqB,EACZoqB,UAAWnqB,EACXgtB,aAAcE,EAAWntB,GAAeA,EAAc,IAAMA,EAC5DktB,YAAaC,EAAWltB,GAAcA,EAAa,IAAMA,EAE7D,CAEA,MAAM0sD,GAAU,CAACn4B,EAAQl3B,IAASk3B,EAASA,EAAS5L,EAAYtrB,GAAQA,EAClEsvD,GAAmB,CAAC5mE,EAAMuD,IAAUtB,EAASsB,IAAmB,aAATvD,IACzB,OAAjCrH,OAAOqnC,eAAez8B,IAAmBA,EAAMnJ,cAAgBzB,QAElE,SAAS+tE,GAAQ3mE,EAAQC,EAAME,GAC7B,GAAIvH,OAAOwpB,UAAUg5C,eAAe3mC,KAAKz0B,EAAQC,GAC/C,OAAOD,EAAOC,GAGhB,MAAMuD,EAAQrD,IAGd,OADAH,EAAOC,GAAQuD,EACRA,CACT,CAsDA,SAASskE,GAAgB31C,EAAUlyB,EAAMuD,GACvC,OAAO4jC,EAAWjV,GAAYA,EAASlyB,EAAMuD,GAAS2uB,CACxD,CAEA,MAAM8vC,GAAW,CAAC1/D,EAAK+M,KAAmB,IAAR/M,EAAe+M,EAC9B,iBAAR/M,EAAmBmK,EAAiB4C,EAAQ/M,QAAOrW,EAE9D,SAAS67E,GAAUtpE,EAAKupE,EAAczlE,EAAK0lE,EAAgBzkE,GACzD,IAAK,MAAM8L,KAAU04D,EAAc,CACjC,MAAMroC,EAAQsiC,GAAS1/D,EAAK+M,GAC5B,GAAIqwB,EAAO,CACTlhC,EAAIK,IAAI6gC,GACR,MAAMxN,EAAW21C,GAAgBnoC,EAAMsuB,UAAW1rD,EAAKiB,GACvD,GAAIyM,EAAQkiB,IAAaA,IAAa5vB,GAAO4vB,IAAa81C,EAGxD,OAAO91C,CAEX,MAAO,IAAc,IAAVwN,GAAmB1vB,EAAQg4D,IAAmB1lE,IAAQ0lE,EAG/D,OAAO,IAEX,CACA,OAAO,CACT,CAEA,SAASnB,GAAkBkB,EAAcjhC,EAAU9mC,EAAMuD,GACvD,MAAMyiE,EAAal/B,EAASw/B,YACtBp0C,EAAW21C,GAAgB/gC,EAASknB,UAAWhuD,EAAMuD,GACrD0kE,EAAY,IAAIF,KAAiB/B,GACjCxnE,EAAM,IAAImnC,IAChBnnC,EAAIK,IAAI0E,GACR,IAAIjB,EAAM4lE,GAAiB1pE,EAAKypE,EAAWjoE,EAAMkyB,GAAYlyB,EAAMuD,GACnE,OAAY,OAARjB,MAGA0N,EAAQkiB,IAAaA,IAAalyB,IACpCsC,EAAM4lE,GAAiB1pE,EAAKypE,EAAW/1C,EAAU5vB,EAAKiB,GAC1C,OAARjB,KAIColC,GAAgB36C,MAAM2M,KAAK8E,GAAM,CAAC,IAAKwnE,EAAY9zC,GACxD,IAUJ,SAAsB4U,EAAU9mC,EAAMuD,GACpC,MAAM8L,EAASy3B,EAAS4W,aAClB19C,KAAQqP,IACZA,EAAOrP,GAAQ,CAAC,GAElB,MAAMD,EAASsP,EAAOrP,GACtB,GAAIhT,EAAQ+S,IAAWkC,EAASsB,GAE9B,OAAOA,EAET,OAAOxD,GAAU,CAAC,CACpB,CArBUooE,CAAarhC,EAAU9mC,EAAMuD,KACvC,CAEA,SAAS2kE,GAAiB1pE,EAAKypE,EAAW3lE,EAAK4vB,EAAUp0B,GACvD,KAAOwE,GACLA,EAAMwlE,GAAUtpE,EAAKypE,EAAW3lE,EAAK4vB,EAAUp0B,GAEjD,OAAOwE,CACT,CA2BA,SAAS4jE,GAAS5jE,EAAKiJ,GACrB,IAAK,MAAMm0B,KAASn0B,EAAQ,CAC1B,IAAKm0B,EACH,SAEF,MAAMn8B,EAAQm8B,EAAMp9B,GACpB,GAAI0N,EAAQzM,GACV,OAAOA,CAEX,CACF,CAEA,SAAS0jE,GAAqBlnE,GAC5B,IAAIrH,EAAOqH,EAAO0mE,MAIlB,OAHK/tE,IACHA,EAAOqH,EAAO0mE,MAKlB,SAAkCl7D,GAChC,MAAM/M,EAAM,IAAImnC,IAChB,IAAK,MAAMjG,KAASn0B,EAClB,IAAK,MAAMjJ,KAAO3J,OAAOD,KAAKgnC,GAAO74B,QAAOva,IAAMA,EAAEu4D,WAAW,OAC7DrmD,EAAIK,IAAIyD,GAGZ,OAAOvV,MAAM2M,KAAK8E,EACpB,CAb0B4pE,CAAyBroE,EAAOsmE,UAEjD3tE,CACT,CAYO,SAAS+nB,GAA4Bxb,EAAM1b,EAAM6T,EAAOyO,GAC7D,MAAM,OAAC5F,GAAUhB,GACX,IAAC3C,EAAM,KAAOhI,KAAKsN,SACnB9B,EAAS,IAAI/Y,MAAM8e,GACzB,IAAIlf,EAAG0X,EAAMC,EAAOxG,EAEpB,IAAKnR,EAAI,EAAG0X,EAAOwH,EAAOlf,EAAI0X,IAAQ1X,EACpC2X,EAAQ3X,EAAIyQ,EACZU,EAAOvU,EAAK+a,GACZwB,EAAOnZ,GAAK,CACVf,EAAGqa,EAAO2F,MAAMa,EAAiB3O,EAAMwE,GAAMgC,IAGjD,OAAOwB,CACT,CC/VA,MAAMuiE,GAAUh7D,OAAOg7D,SAAW,MAG5BC,GAAW,CAAClvD,EAAuBzsB,IAAmCA,EAAIysB,EAAOrwB,SAAWqwB,EAAOzsB,GAAG6sB,MAAQJ,EAAOzsB,GACrH47E,GAAgB3+D,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAAS4+D,GACdvoD,EACAwoD,EACAC,EACAttE,GAUA,MAAMq4C,EAAWxzB,EAAWzG,KAAOivD,EAAcxoD,EAC3Cg7C,EAAUwN,EACV/vD,EAAOgwD,EAAWlvD,KAAOivD,EAAcC,EACvCC,EAAMjjB,EAAsBuV,EAASxnB,GACrCm1B,EAAMljB,EAAsBhtC,EAAMuiD,GAExC,IAAI4N,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAM3xD,MAAM2xD,GAAO,EAAIA,EACvBC,EAAM5xD,MAAM4xD,GAAO,EAAIA,EAEvB,MAAMC,EAAK3tE,EAAIytE,EACTG,EAAK5tE,EAAI0tE,EAEf,MAAO,CACLr1B,SAAU,CACR5lD,EAAGotE,EAAQptE,EAAIk7E,GAAMrwD,EAAK7qB,EAAI4lD,EAAS5lD,GACvCub,EAAG6xD,EAAQ7xD,EAAI2/D,GAAMrwD,EAAKtP,EAAIqqC,EAASrqC,IAEzCsP,KAAM,CACJ7qB,EAAGotE,EAAQptE,EAAIm7E,GAAMtwD,EAAK7qB,EAAI4lD,EAAS5lD,GACvCub,EAAG6xD,EAAQ7xD,EAAI4/D,GAAMtwD,EAAKtP,EAAIqqC,EAASrqC,IAG7C,CAsEO,SAAS6/D,GAAoB7vD,EAAuBxP,EAAuB,KAChF,MAAMs/D,EAAYX,GAAa3+D,GACzBu/D,EAAY/vD,EAAOrwB,OACnBqgF,EAAmBr8E,MAAMo8E,GAAWvgE,KAAK,GACzCygE,EAAet8E,MAAMo8E,GAG3B,IAAIx8E,EAAG28E,EAAkCC,EACrCC,EAAalB,GAASlvD,EAAQ,GAElC,IAAKzsB,EAAI,EAAGA,EAAIw8E,IAAax8E,EAI3B,GAHA28E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAASlvD,EAAQzsB,EAAI,GAC7B48E,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAW5/D,GAAa2/D,EAAa3/D,GAGxDw/D,EAAOz8E,GAAoB,IAAf88E,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,EAElGJ,EAAG18E,GAAM28E,EACJE,EACEzkE,EAAKqkE,EAAOz8E,EAAI,MAAQoY,EAAKqkE,EAAOz8E,IAAO,GACzCy8E,EAAOz8E,EAAI,GAAKy8E,EAAOz8E,IAAM,EAFpBy8E,EAAOz8E,EAAI,GADNy8E,EAAOz8E,IAzFlC,SAAwBysB,EAAuBgwD,EAAkBC,GAC/D,MAAMF,EAAY/vD,EAAOrwB,OAEzB,IAAI2gF,EAAgBC,EAAeC,EAAcC,EAA0BN,EACvEC,EAAalB,GAASlvD,EAAQ,GAClC,IAAK,IAAIzsB,EAAI,EAAGA,EAAIw8E,EAAY,IAAKx8E,EACnC48E,EAAeC,EACfA,EAAalB,GAASlvD,EAAQzsB,EAAI,GAC7B48E,GAAiBC,IAIlBhZ,EAAa4Y,EAAOz8E,GAAI,EAAG07E,IAC7BgB,EAAG18E,GAAK08E,EAAG18E,EAAI,GAAK,GAItB+8E,EAASL,EAAG18E,GAAKy8E,EAAOz8E,GACxBg9E,EAAQN,EAAG18E,EAAI,GAAKy8E,EAAOz8E,GAC3Bk9E,EAAmB7gF,KAAKyQ,IAAIiwE,EAAQ,GAAK1gF,KAAKyQ,IAAIkwE,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAI5gF,KAAKw7B,KAAKqlD,GACrBR,EAAG18E,GAAK+8E,EAASE,EAAOR,EAAOz8E,GAC/B08E,EAAG18E,EAAI,GAAKg9E,EAAQC,EAAOR,EAAOz8E,KAEtC,CAmEEm9E,CAAe1wD,EAAQgwD,EAAQC,GAjEjC,SAAyBjwD,EAAuBiwD,EAAcz/D,EAAuB,KACnF,MAAMs/D,EAAYX,GAAa3+D,GACzBu/D,EAAY/vD,EAAOrwB,OACzB,IAAIy4E,EAAe8H,EAAkCC,EACjDC,EAAalB,GAASlvD,EAAQ,GAElC,IAAK,IAAIzsB,EAAI,EAAGA,EAAIw8E,IAAax8E,EAAG,CAIlC,GAHA28E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAASlvD,EAAQzsB,EAAI,IAC7B48E,EACH,SAGF,MAAMjwD,EAASiwD,EAAa3/D,GACtB2P,EAASgwD,EAAaL,GACxBI,IACF9H,GAASloD,EAASgwD,EAAY1/D,IAAc,EAC5C2/D,EAAa,MAAM3/D,KAAe0P,EAASkoD,EAC3C+H,EAAa,MAAML,KAAe3vD,EAASioD,EAAQ6H,EAAG18E,IAEpD68E,IACFhI,GAASgI,EAAW5/D,GAAa0P,GAAU,EAC3CiwD,EAAa,MAAM3/D,KAAe0P,EAASkoD,EAC3C+H,EAAa,MAAML,KAAe3vD,EAASioD,EAAQ6H,EAAG18E,GAE1D,CACF,CAwCEo9E,CAAgB3wD,EAAQiwD,EAAIz/D,EAC9B,CAEA,SAASogE,GAAgBle,EAAY7hE,EAAahB,GAChD,OAAOD,KAAKC,IAAID,KAAKiB,IAAI6hE,EAAI7iE,GAAMgB,EACrC,CA2BO,SAAS6rD,GACd18B,EACAxW,EACAiM,EACAlO,EACAiJ,GAEA,IAAIjd,EAAW0X,EAAcgV,EAAoB4wD,EAOjD,GAJIrnE,EAAQoc,WACV5F,EAASA,EAAOvS,QAAQilD,IAAQA,EAAGtyC,QAGE,aAAnC5W,EAAQyxC,uBACV40B,GAAoB7vD,EAAQxP,OACvB,CACL,IAAIoC,EAAOrL,EAAOyY,EAAOA,EAAOrwB,OAAS,GAAKqwB,EAAO,GACrD,IAAKzsB,EAAI,EAAG0X,EAAO+U,EAAOrwB,OAAQ4D,EAAI0X,IAAQ1X,EAC5C0sB,EAAQD,EAAOzsB,GACfs9E,EAAgBzB,GACdx8D,EACAqN,EACAD,EAAOpwB,KAAKiB,IAAI0C,EAAI,EAAG0X,GAAQ1D,EAAO,EAAI,IAAM0D,GAChDzB,EAAQwxC,SAEV/6B,EAAM6qD,KAAO+F,EAAcx2B,SAAS5lD,EACpCwrB,EAAM+qD,KAAO6F,EAAcx2B,SAASrqC,EACpCiQ,EAAM8qD,KAAO8F,EAAcvxD,KAAK7qB,EAChCwrB,EAAMgrD,KAAO4F,EAAcvxD,KAAKtP,EAChC4C,EAAOqN,EAIPzW,EAAQ8yC,iBA3Dd,SAAyBt8B,EAAuBvK,GAC9C,IAAIliB,EAAG0X,EAAMgV,EAAO6wD,EAAQC,EACxBC,EAAatmD,GAAe1K,EAAO,GAAIvK,GAC3C,IAAKliB,EAAI,EAAG0X,EAAO+U,EAAOrwB,OAAQ4D,EAAI0X,IAAQ1X,EAC5Cw9E,EAAaD,EACbA,EAASE,EACTA,EAAaz9E,EAAI0X,EAAO,GAAKyf,GAAe1K,EAAOzsB,EAAI,GAAIkiB,GACtDq7D,IAGL7wD,EAAQD,EAAOzsB,GACXw9E,IACF9wD,EAAM6qD,KAAO8F,GAAgB3wD,EAAM6qD,KAAMr1D,EAAKN,KAAMM,EAAKR,OACzDgL,EAAM+qD,KAAO4F,GAAgB3wD,EAAM+qD,KAAMv1D,EAAKT,IAAKS,EAAKP,SAEtD87D,IACF/wD,EAAM8qD,KAAO6F,GAAgB3wD,EAAM8qD,KAAMt1D,EAAKN,KAAMM,EAAKR,OACzDgL,EAAMgrD,KAAO2F,GAAgB3wD,EAAMgrD,KAAMx1D,EAAKT,IAAKS,EAAKP,SAG9D,CAwCIonC,CAAgBt8B,EAAQvK,EAE5B,CC1NO,SAASsgB,KACd,MAAyB,oBAAX5xB,QAA8C,oBAAbnU,QACjD,CAKO,SAASgkC,GAAei9C,GAC7B,IAAIh7D,EAASg7D,EAAQC,WAIrB,OAHIj7D,GAAgC,wBAAtBA,EAAO6qD,aACnB7qD,EAAUA,EAAsBk7D,MAE3Bl7D,CACT,CAOA,SAASm7D,GAAcC,EAA6B3+C,EAAmB4+C,GACrE,IAAIC,EAYJ,MAX0B,iBAAfF,GACTE,EAAgB1xE,SAASwxE,EAAY,KAEJ,IAA7BA,EAAWtzD,QAAQ,OAErBwzD,EAAgB,EAAiB,IAAO7+C,EAAKw+C,WAAWI,KAG1DC,EAAgBF,EAGXE,CACT,CAEA,MAAMC,GAAoB57D,GACxBA,EAAQ67D,cAAcC,YAAYF,iBAAiB57D,EAAS,MAEvD,SAASC,GAASiU,EAAiBqd,GACxC,OAAOqqC,GAAiB1nD,GAAI6nD,iBAAiBxqC,EAC/C,CAEA,MAAMzY,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASkjD,GAAmBC,EAA6B1wD,EAAe2wD,GACtE,MAAM36C,EAAS,CAAC,EAChB26C,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAIv+E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM+4B,EAAMoC,GAAUn7B,GACtB4jC,EAAO7K,GAAOm3B,WAAWouB,EAAO1wD,EAAQ,IAAMmL,EAAMwlD,KAAY,CAClE,CAGA,OAFA36C,EAAOzZ,MAAQyZ,EAAOhiB,KAAOgiB,EAAOliB,MACpCkiB,EAAO1Z,OAAS0Z,EAAOniB,IAAMmiB,EAAOjiB,OAC7BiiB,CACT,CA0CO,SAASlL,GACd3mB,EACAhC,GAEA,GAAI,WAAYgC,EACd,OAAOA,EAGT,MAAM,OAACwrB,EAAAA,wBAAQ+C,GAA2BvwB,EACpC6d,EAAQqwD,GAAiB1gD,GACzBihD,EAAgC,eAApB5wD,EAAM+T,UAClB88C,EAAWJ,GAAmBzwD,EAAO,WACrC8wD,EAAUL,GAAmBzwD,EAAO,SAAU,UAC9C,EAAC1sB,EAAAA,EAAGub,EAAAA,IAAGwc,GA7Cf,SACE16B,EACAg/B,GAMA,MAAMohD,EAAU,EAAkBA,QAC5B31C,EAAU21C,GAAWA,EAAQviF,OAASuiF,EAAQ,GAAKpgF,GACnD,QAACkwB,EAAAA,QAASC,GAAWsa,EAC3B,IACI9nC,EAAGub,EADHwc,GAAM,EAEV,GArBmB,EAAC/3B,EAAWub,EAAWrJ,KACzClS,EAAI,GAAKub,EAAI,MAAQrJ,IAAW,EAAwBwrE,YAoBrDC,CAAapwD,EAASC,EAASnwB,EAAE6U,QACnClS,EAAIutB,EACJhS,EAAIiS,MACC,CACL,MAAM+8B,EAAOluB,EAAOuhD,wBACpB59E,EAAI8nC,EAAO+1C,QAAUtzB,EAAK7pC,KAC1BnF,EAAIusB,EAAOg2C,QAAUvzB,EAAKhqC,IAC1BwX,GAAM,EAER,MAAO,CAAC/3B,IAAGub,IAAGwc,MAChB,CAsBsBgmD,CAAkBltE,EAAOwrB,GACvCs5C,EAAU4H,EAAS78D,MAAQqX,GAAOylD,EAAQ98D,MAC1Ck1D,EAAU2H,EAASh9D,KAAOwX,GAAOylD,EAAQj9D,KAE/C,IAAI,MAAC0I,EAAAA,OAAOD,GAAUna,EAKtB,OAJIyuE,IACFr0D,GAASs0D,EAASt0D,MAAQu0D,EAAQv0D,MAClCD,GAAUu0D,EAASv0D,OAASw0D,EAAQx0D,QAE/B,CACLhpB,EAAG7E,KAAKY,OAAOiE,EAAI21E,GAAW1sD,EAAQoT,EAAOpT,MAAQmW,GACrD7jB,EAAGpgB,KAAKY,OAAOwf,EAAIq6D,GAAW5sD,EAASqT,EAAOrT,OAASoW,GAE3D,CA6BA,MAAM4+C,GAAUhiF,GAAcb,KAAKY,MAAU,GAAJC,GAAU,GAG5C,SAAS2gC,GACdN,EACA4hD,EACAC,EACA7xD,GAEA,MAAMK,EAAQqwD,GAAiB1gD,GACzBuK,EAAUu2C,GAAmBzwD,EAAO,UACpCkD,EAAW+sD,GAAcjwD,EAAMkD,SAAUyM,EAAQ,gBAAkByxC,EACnEj+C,EAAY8sD,GAAcjwD,EAAMmD,UAAWwM,EAAQ,iBAAmByxC,EACtEqQ,EAxCR,SAA0B9hD,EAA2BpT,EAAeD,GAClE,IAAI4G,EAAkBC,EAEtB,QAAczxB,IAAV6qB,QAAkC7qB,IAAX4qB,EAAsB,CAC/C,MAAMsW,EAAYC,GAAelD,GACjC,GAAKiD,EAGE,CACL,MAAMirB,EAAOjrB,EAAUs+C,wBACjBQ,EAAiBrB,GAAiBz9C,GAClC++C,EAAkBlB,GAAmBiB,EAAgB,SAAU,SAC/DE,EAAmBnB,GAAmBiB,EAAgB,WAC5Dn1D,EAAQshC,EAAKthC,MAAQq1D,EAAiBr1D,MAAQo1D,EAAgBp1D,MAC9DD,EAASuhC,EAAKvhC,OAASs1D,EAAiBt1D,OAASq1D,EAAgBr1D,OACjE4G,EAAW+sD,GAAcyB,EAAexuD,SAAU0P,EAAW,eAC7DzP,EAAY8sD,GAAcyB,EAAevuD,UAAWyP,EAAW,qBAV/DrW,EAAQoT,EAAOoD,YACfzW,EAASqT,EAAOkiD,aAYpB,MAAO,CACLt1D,QACAD,SACA4G,SAAUA,GAAYk+C,EACtBj+C,UAAWA,GAAai+C,EAE5B,CAewB0Q,CAAiBniD,EAAQ4hD,EAASC,GACxD,IAAI,MAACj1D,EAAAA,OAAOD,GAAUm1D,EAEtB,GAAwB,gBAApBzxD,EAAM+T,UAA6B,CACrC,MAAM+8C,EAAUL,GAAmBzwD,EAAO,SAAU,SAC9C6wD,EAAWJ,GAAmBzwD,EAAO,WAC3CzD,GAASs0D,EAASt0D,MAAQu0D,EAAQv0D,MAClCD,GAAUu0D,EAASv0D,OAASw0D,EAAQx0D,OAEtCC,EAAQ9tB,KAAKC,IAAI,EAAG6tB,EAAQ2d,EAAQ3d,OACpCD,EAAS7tB,KAAKC,IAAI,EAAGixB,EAAcpD,EAAQoD,EAAcrD,EAAS4d,EAAQ5d,QAC1EC,EAAQ+0D,GAAO7iF,KAAKiB,IAAI6sB,EAAO2G,EAAUuuD,EAAcvuD,WACvD5G,EAASg1D,GAAO7iF,KAAKiB,IAAI4sB,EAAQ6G,EAAWsuD,EAActuD,YACtD5G,IAAUD,IAGZA,EAASg1D,GAAO/0D,EAAQ,IAU1B,YAPmC7qB,IAAZ6/E,QAAsC7/E,IAAb8/E,IAE1B7xD,GAAe8xD,EAAcn1D,QAAUA,EAASm1D,EAAcn1D,SAClFA,EAASm1D,EAAcn1D,OACvBC,EAAQ+0D,GAAO7iF,KAAKwX,MAAMqW,EAASqD,KAG9B,CAACpD,QAAOD,SACjB,CAQO,SAASizB,GACdptC,EACA4vE,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAezjF,KAAKwX,MAAM9D,EAAMma,OAAS21D,GACzCE,EAAc1jF,KAAKwX,MAAM9D,EAAMoa,MAAQ01D,GAE7C9vE,EAAMma,OAAS7tB,KAAKwX,MAAM9D,EAAMma,QAChCna,EAAMoa,MAAQ9tB,KAAKwX,MAAM9D,EAAMoa,OAE/B,MAAMoT,EAASxtB,EAAMwtB,OAUrB,OALIA,EAAO3P,QAAUgyD,IAAgBriD,EAAO3P,MAAM1D,SAAWqT,EAAO3P,MAAMzD,SACxEoT,EAAO3P,MAAM1D,OAAS,GAAGna,EAAMma,WAC/BqT,EAAO3P,MAAMzD,MAAQ,GAAGpa,EAAMoa,YAG5Bpa,EAAMuwB,0BAA4Bu/C,GAC/BtiD,EAAOrT,SAAW41D,GAClBviD,EAAOpT,QAAU41D,KACtBhwE,EAAMuwB,wBAA0Bu/C,EAChCtiD,EAAOrT,OAAS41D,EAChBviD,EAAOpT,MAAQ41D,EACfhwE,EAAM8K,IAAImlE,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CAOa/gD,MAAAA,GAAgC,WAC3C,IAAImhD,GAAmB,EACvB,IACE,MAAMhqE,EAAU,CACV8oB,cAEF,OADAkhD,GAAmB,GACZ,CACT,GAGFrvE,OAAO6sB,iBAAiB,OAAQ,KAAMxnB,GACtCrF,OAAO+sB,oBAAoB,OAAQ,KAAM1nB,EAG3C,CAFE,MAAO1X,GAET,CACA,OAAO0hF,CACT,CAhB6C,GA4BtC,SAASp+C,GACdxf,EACAuxB,GAEA,MAAMh9B,EAAQ0L,GAASD,EAASuxB,GAC1B+kC,EAAU/hE,GAASA,EAAMgiE,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKr5E,CACjC,CC3RO,SAASmqD,GAAa5oD,EAAWC,EAAW2N,EAAWuJ,GAC5D,MAAO,CACL9W,EAAGL,EAAGK,EAAIuN,GAAK3N,EAAGI,EAAIL,EAAGK,GACzBub,EAAG5b,EAAG4b,EAAIhO,GAAK3N,EAAG2b,EAAI5b,EAAG4b,GAE7B,CAKO,SAAS8sC,GACd1oD,EACAC,EACA2N,EAAWuJ,GAEX,MAAO,CACL9W,EAAGL,EAAGK,EAAIuN,GAAK3N,EAAGI,EAAIL,EAAGK,GACzBub,EAAY,WAATzE,EAAoBvJ,EAAI,GAAM5N,EAAG4b,EAAI3b,EAAG2b,EAC9B,UAATzE,EAAmBvJ,EAAI,EAAI5N,EAAG4b,EAAI3b,EAAG2b,EACnChO,EAAI,EAAI3N,EAAG2b,EAAI5b,EAAG4b,EAE5B,CAKO,SAAS+sC,GAAqB3oD,EAAiBC,EAAiB2N,EAAWuJ,GAChF,MAAMkoE,EAAM,CAACh/E,EAAGL,EAAG22E,KAAM/6D,EAAG5b,EAAG62E,MACzByI,EAAM,CAACj/E,EAAGJ,EAAGy2E,KAAM96D,EAAG3b,EAAG22E,MACzBt5E,EAAIsrD,GAAa5oD,EAAIq/E,EAAKzxE,GAC1BrQ,EAAIqrD,GAAay2B,EAAKC,EAAK1xE,GAC3BpQ,EAAIorD,GAAa02B,EAAKr/E,EAAI2N,GAC1BnQ,EAAImrD,GAAatrD,EAAGC,EAAGqQ,GACvBlQ,EAAIkrD,GAAarrD,EAAGC,EAAGoQ,GAC7B,OAAOg7C,GAAanrD,EAAGC,EAAGkQ,EAC5B,CCSO,SAASmnD,GAAcF,EAAc0qB,EAAej2D,GACzD,OAAOurC,EA3CqB,SAAS0qB,EAAej2D,GACpD,MAAO,CACLjpB,EAAEA,GACOk/E,EAAQA,EAAQj2D,EAAQjpB,EAEjCo1D,SAASx2D,GACPqqB,EAAQrqB,CACV,EACA4vC,UAAU9J,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtC8wB,MAAMx1D,CAAAA,EAAG0V,IACA1V,EAAI0V,EAEbk/C,WAAW50D,CAAAA,EAAGyzD,IACLzzD,EAAIyzD,EAGjB,CAsBe0rB,CAAsBD,EAAOj2D,GAnBnC,CACLjpB,EAAEA,GACOA,EAETo1D,SAASx2D,GAAI,EAEb4vC,UAAU9J,GACDA,EAET8wB,MAAMx1D,CAAAA,EAAG0V,IACA1V,EAAI0V,EAEbk/C,WAAW50D,CAAAA,EAAGo/E,IACLp/E,EAOb,CAEO,SAASi1D,GAAsBt7C,EAA+B0lE,GACnE,IAAI3yD,EAA4B4yD,EACd,QAAdD,GAAqC,QAAdA,IACzB3yD,EAAQ/S,EAAI0iB,OAAO3P,MACnB4yD,EAAW,CACT5yD,EAAMwwD,iBAAiB,aACvBxwD,EAAM6yD,oBAAoB,cAG5B7yD,EAAM8yD,YAAY,YAAaH,EAAW,aACzC1lE,EAAiD8lE,kBAAoBH,EAE1E,CAEO,SAAStpB,GAAqBr8C,EAA+B2lE,QACjDlhF,IAAbkhF,WACM3lE,EAAiD8lE,kBACzD9lE,EAAI0iB,OAAO3P,MAAM8yD,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CChEA,SAASI,GAAWhtC,GAClB,MAAiB,UAAbA,EACK,CACLitC,QAASxwD,GACTywD,QAAS7Q,EACTvD,UAAWvd,IAGR,CACL0xB,QAASx6B,GACTy6B,QAAS,CAAC3iF,EAAGC,IAAMD,EAAIC,EACvBsuE,UAAWxrE,GAAKA,EAEpB,CAEA,SAAS6/E,IAAiB,MAACtwE,EAAK,IAAE4G,EAAG,MAAE6H,EAAK,KAAElL,EAAI,MAAE4Z,IAClD,MAAO,CACLnd,MAAOA,EAAQyO,EACf7H,IAAKA,EAAM6H,EACXlL,KAAMA,IAASqD,EAAM5G,EAAQ,GAAKyO,GAAU,EAC5C0O,QAEJ,CA4CO,SAAS0kC,GAAcz/B,EAASpG,EAAQg+B,GAC7C,IAAKA,EACH,MAAO,CAAC53B,GAGV,MAAM,SAAC+gB,EAAUnjC,MAAOuwE,EAAY3pE,IAAK4pE,GAAYx2B,EAC/CvrC,EAAQuN,EAAOrwB,QACf,QAAC0kF,EAAAA,QAASD,EAAAA,UAASnU,GAAakU,GAAWhtC,IAC3C,MAACnjC,EAAAA,IAAO4G,EAAAA,KAAKrD,EAAAA,MAAM4Z,GAlD3B,SAAoBiF,EAASpG,EAAQg+B,GACnC,MAAM,SAAC7W,EAAUnjC,MAAOuwE,EAAY3pE,IAAK4pE,GAAYx2B,GAC/C,QAACo2B,EAAO,UAAEnU,GAAakU,GAAWhtC,GAClC10B,EAAQuN,EAAOrwB,OAErB,IACI4D,EAAG0X,GADH,MAACjH,EAAK,IAAE4G,EAAAA,KAAKrD,GAAQ6e,EAGzB,GAAI7e,EAAM,CAGR,IAFAvD,GAASyO,EACT7H,GAAO6H,EACFlf,EAAI,EAAG0X,EAAOwH,EAAOlf,EAAI0X,GACvBmpE,EAAQnU,EAAUjgD,EAAOhc,EAAQyO,GAAO00B,IAAYotC,EAAYC,KADjCjhF,EAIpCyQ,IACA4G,IAEF5G,GAASyO,EACT7H,GAAO6H,EAMT,OAHI7H,EAAM5G,IACR4G,GAAO6H,GAEF,CAACzO,QAAO4G,MAAKrD,OAAM4Z,MAAOiF,EAAQjF,MAC3C,CAwBoCszD,CAAWruD,EAASpG,EAAQg+B,GAExD7mB,EAAS,GACf,IAEIhtB,EAAO8V,EAAOy0D,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAc,IAAMF,GAFEP,EAAQG,EAAYG,EAAWvqE,IAA6C,IAAnCkqE,EAAQE,EAAYG,GAGnFI,EAAa,KAAOH,GAF6B,IAA7BN,EAAQG,EAAUrqE,IAAgBiqE,EAAQI,EAAUE,EAAWvqE,GAIzF,IAAK,IAAI5W,EAAIyQ,EAAO4O,EAAO5O,EAAOzQ,GAAKqX,IAAOrX,EAC5C0sB,EAAQD,EAAOzsB,EAAIkf,GAEfwN,EAAMG,OAIVjW,EAAQ81D,EAAUhgD,EAAMknB,IAEpBh9B,IAAUuqE,IAIdC,EAASP,EAAQjqE,EAAOoqE,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BP,EAAQlqE,EAAOoqE,GAAoBhhF,EAAIqf,GAGnC,OAAbgiE,GAAqBE,MACvB39C,EAAO3xB,KAAK8uE,GAAiB,CAACtwE,MAAO4wE,EAAUhqE,IAAKrX,EAAGgU,OAAMkL,QAAO0O,WACpEyzD,EAAW,MAEbhiE,EAAOrf,EACPmhF,EAAYvqE,IAOd,OAJiB,OAAbyqE,GACFz9C,EAAO3xB,KAAK8uE,GAAiB,CAACtwE,MAAO4wE,EAAUhqE,MAAKrD,OAAMkL,QAAO0O,WAG5DgW,CACT,CAYO,SAASylB,GAAe/2B,EAAMm4B,GACnC,MAAM7mB,EAAS,GACT+kB,EAAWr2B,EAAKq2B,SAEtB,IAAK,IAAI3oD,EAAI,EAAGA,EAAI2oD,EAASvsD,OAAQ4D,IAAK,CACxC,MAAMwhF,EAAMlvB,GAAc3J,EAAS3oD,GAAIsyB,EAAK7F,OAAQg+B,GAChD+2B,EAAIplF,QACNwnC,EAAO3xB,QAAQuvE,EAEnB,CACA,OAAO59C,CACT,CAsFO,SAASwlB,GAAiB92B,EAAMmvD,GACrC,MAAMh1D,EAAS6F,EAAK7F,OACd4F,EAAWC,EAAKrc,QAAQoc,SACxBnT,EAAQuN,EAAOrwB,OAErB,IAAK8iB,EACH,MAAO,GAGT,MAAMlL,IAASse,EAAKve,OACd,MAACtD,EAAAA,IAAO4G,GA3FhB,SAAyBoV,EAAQvN,EAAOlL,EAAMqe,GAC5C,IAAI5hB,EAAQ,EACR4G,EAAM6H,EAAQ,EAElB,GAAIlL,IAASqe,EAEX,KAAO5hB,EAAQyO,IAAUuN,EAAOhc,GAAOoc,MACrCpc,IAKJ,KAAOA,EAAQyO,GAASuN,EAAOhc,GAAOoc,MACpCpc,IAWF,IAPAA,GAASyO,EAELlL,IAEFqD,GAAO5G,GAGF4G,EAAM5G,GAASgc,EAAOpV,EAAM6H,GAAO2N,MACxCxV,IAMF,OAFAA,GAAO6H,EAEA,CAACzO,QAAO4G,MACjB,CA2DuBqqE,CAAgBj1D,EAAQvN,EAAOlL,EAAMqe,GAE1D,IAAiB,IAAbA,EACF,OAAOsvD,GAAcrvD,EAAM,CAAC,CAAC7hB,QAAO4G,MAAKrD,SAAQyY,EAAQg1D,GAK3D,OAAOE,GAAcrvD,EA1DvB,SAAuB7F,EAAQhc,EAAOnU,EAAK0X,GACzC,MAAMkL,EAAQuN,EAAOrwB,OACfwnC,EAAS,GACf,IAEIvsB,EAFAgT,EAAO5Z,EACP4O,EAAOoN,EAAOhc,GAGlB,IAAK4G,EAAM5G,EAAQ,EAAG4G,GAAO/a,IAAO+a,EAAK,CACvC,MAAM/E,EAAMma,EAAOpV,EAAM6H,GACrB5M,EAAIua,MAAQva,EAAIE,KACb6M,EAAKwN,OACR7Y,GAAO,EACP4vB,EAAO3xB,KAAK,CAACxB,MAAOA,EAAQyO,EAAO7H,KAAMA,EAAM,GAAK6H,EAAOlL,SAE3DvD,EAAQ4Z,EAAO/X,EAAIE,KAAO6E,EAAM,OAGlCgT,EAAOhT,EACHgI,EAAKwN,OACPpc,EAAQ4G,IAGZgI,EAAO/M,CACT,CAMA,OAJa,OAAT+X,GACFuZ,EAAO3xB,KAAK,CAACxB,MAAOA,EAAQyO,EAAO7H,IAAKgT,EAAOnL,EAAOlL,SAGjD4vB,CACT,CA4B6Bg+C,CAAcn1D,EAAQhc,EAFrC4G,EAAM5G,EAAQ4G,EAAM6H,EAAQ7H,IACjBib,EAAKuC,WAAuB,IAAVpkB,GAAe4G,IAAQ6H,EAAQ,GACIuN,EAAQg1D,EACtF,CAQA,SAASE,GAAcrvD,EAAMq2B,EAAUl8B,EAAQg1D,GAC7C,OAAKA,GAAmBA,EAAev6C,YAAeza,EAaxD,SAAyB6F,EAAMq2B,EAAUl8B,EAAQg1D,GAC/C,MAAMI,EAAevvD,EAAKnd,OAAO4J,aAC3B+iE,EAAYC,GAAUzvD,EAAKrc,UAC1B0c,cAAe1a,EAAchC,SAAS,SAACoc,IAAaC,EACrDpT,EAAQuN,EAAOrwB,OACfwnC,EAAS,GACf,IAAIo+C,EAAYF,EACZrxE,EAAQk4C,EAAS,GAAGl4C,MACpBzQ,EAAIyQ,EAER,SAASwxE,EAASxiF,EAAGlB,EAAGnB,EAAG8kF,GACzB,MAAMC,EAAM9vD,GAAY,EAAI,EAC5B,GAAI5yB,IAAMlB,EAAV,CAKA,IADAkB,GAAKyf,EACEuN,EAAOhtB,EAAIyf,GAAO2N,MACvBptB,GAAK0iF,EAEP,KAAO11D,EAAOluB,EAAI2gB,GAAO2N,MACvBtuB,GAAK4jF,EAEH1iF,EAAIyf,GAAU3gB,EAAI2gB,IACpB0kB,EAAO3xB,KAAK,CAACxB,MAAOhR,EAAIyf,EAAO7H,IAAK9Y,EAAI2gB,EAAOlL,KAAM5W,EAAGwwB,MAAOs0D,IAC/DF,EAAYE,EACZzxE,EAAQlS,EAAI2gB,GAEhB,CAEA,IAAK,MAAM2T,KAAW81B,EAAU,CAC9Bl4C,EAAQ4hB,EAAW5hB,EAAQoiB,EAAQpiB,MACnC,IACImd,EADAvO,EAAOoN,EAAOhc,EAAQyO,GAE1B,IAAKlf,EAAIyQ,EAAQ,EAAGzQ,GAAK6yB,EAAQxb,IAAKrX,IAAK,CACzC,MAAMm/D,EAAK1yC,EAAOzsB,EAAIkf,GACtB0O,EAAQm0D,GAAUN,EAAev6C,WAAWvkB,GAAck/D,EAAc,CACtEllF,KAAM,UACNylF,GAAI/iE,EACJxe,GAAIs+D,EACJkjB,aAAcriF,EAAI,GAAKkf,EACvBojE,YAAatiF,EAAIkf,EACjBjH,mBAEEsqE,GAAa30D,EAAOo0D,IACtBC,EAASxxE,EAAOzQ,EAAI,EAAG6yB,EAAQ7e,KAAMguE,GAEvC3iE,EAAO8/C,EACP6iB,EAAYp0D,CACd,CACInd,EAAQzQ,EAAI,GACdiiF,EAASxxE,EAAOzQ,EAAI,EAAG6yB,EAAQ7e,KAAMguE,EAEzC,CAEA,OAAOp+C,CACT,CAlES4+C,CAAgBlwD,EAAMq2B,EAAUl8B,EAAQg1D,GAFtC94B,CAGX,CAmEA,SAASo5B,GAAU9rE,GACjB,MAAO,CACLlZ,gBAAiBkZ,EAAQlZ,gBACzB8pD,eAAgB5wC,EAAQ4wC,eACxB7X,WAAY/4B,EAAQ+4B,WACpBE,iBAAkBj5B,EAAQi5B,iBAC1BwW,gBAAiBzvC,EAAQyvC,gBACzBv3B,YAAalY,EAAQkY,YACrBH,YAAa/X,EAAQ+X,YAEzB,CAEA,SAASu0D,GAAa30D,EAAOo0D,GAC3B,OAAOA,GAAa5N,KAAKC,UAAUzmD,KAAWwmD,KAAKC,UAAU2N,EAC/D,IC5VIS,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrjF,IAAjBsjF,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CCrBAH,EAAoBpkF,EAAI,CAACukF,EAASG,KACjC,IAAI,IAAIrtE,KAAOqtE,EACXN,EAAoBt/B,EAAE4/B,EAAYrtE,KAAS+sE,EAAoBt/B,EAAEy/B,EAASltE,IAC5E3J,OAAO8gD,eAAe+1B,EAASltE,EAAK,CAAE63C,YAAY,EAAM77C,IAAKqxE,EAAWrtE,IAE1E,ECND+sE,EAAoBt/B,EAAI,CAACr1C,EAAKsF,IAAUrH,OAAOwpB,UAAUg5C,eAAe3mC,KAAK95B,EAAKsF,GCClFqvE,EAAoBzjF,EAAK4jF,IACH,oBAAXrJ,QAA0BA,OAAOC,aAC1CztE,OAAO8gD,eAAe+1B,EAASrJ,OAAOC,YAAa,CAAE7iE,MAAO,WAE7D5K,OAAO8gD,eAAe+1B,EAAS,aAAc,CAAEjsE,OAAO,GAAO,2KCD9D,MAAMqsE,EAAmBxmF,SAASC,eAAe,qBAC3CwmF,EAAczmF,SAAS0mF,cAAc,kBACrCC,EAAa3mF,SAASC,eAAe,cACrC2mF,EAAa5mF,SAASC,eAAe,YAC3C,IAAIX,EAAgB,GACpB,MAAMunF,GAAgB,aAASvnF,EAAcme,QAAO/I,IAASA,EAAKrV,SAAQM,OAAQL,EAAcme,QAAO/I,GAAQA,EAAKrV,SAAQM,QAEtHmnF,EAAc,KAChBD,EAAc1mF,KAAKE,SAAS,GAAGF,KAAO,CAACb,EAAcme,QAAO/I,IAASA,EAAKrV,SAAQM,OAAQL,EAAcme,QAAO/I,GAAQA,EAAKrV,SAAQM,QACpIknF,EAAc/uE,QAAQ,EAsB1B0uE,EAAiBO,QAAU,KACvBN,EAAYO,UAAUC,OAAO,UAC7BT,EAAiBQ,UAAUC,OAAO,SAAS,EAG/CN,EAAWI,QAAU,KACjBN,EAAYO,UAAUC,OAAO,UAC7BT,EAAiBQ,UAAUC,OAAO,SAAQ,EAG9CL,EAAWG,QAAU,KACjB,MAAM7nF,EAAO,IAAImV,KAKXpV,EAAa,CACfE,MALUa,SAASC,eAAe,SAASka,MAM3C/a,YALgBY,SAASC,eAAe,eAAeka,MAMvD+sE,SALalnF,SAAS0mF,cAAc,mCAAmCvsE,OAAS,MAMhFjb,KAAMA,EAAKioF,mBAAmB,SAC9B9nF,QAAQ,EACRI,IAAI,aAAeH,IAGnBL,EAAWE,MAAMioF,OAAQznF,OAAS,GAClC0nF,EAAiBpoF,GACjBqoF,EAA0BroF,GAC1BsoF,EAAmB,OACnBT,KAIApnE,QAAQ8nE,IAAI,kBAChB,EAGJ,MAAMF,EAA6BroF,IAC/BK,EAAgB,IAAIA,EAAeL,EAAU,EAO3CooF,EAAoBpoF,IACtB,IAAIwoF,EAAaznF,SAAS0nF,cAAc,WACpCC,EAAc3nF,SAAS0mF,cAAc,eAEzCe,EAAWG,UAAY,QAAQ3oF,EAAWioF,WAAWjoF,EAAWI,OAAS,aAAe,KACxFooF,EAAW5nE,QAAQpgB,GAAKR,EAAWQ,GACnCgoF,EAAWI,WAAY,aAAuB5oF,GAC9C0oF,EAAYG,QAAQL,EAAU,EAG5BF,EAAsBQ,IACxBC,aAAaC,QAAQ,QAAStQ,KAAKC,UAAUt4E,IAE/B,WAAXyoF,GAAwBzoF,EAAcK,QACrCqoF,aAAaE,WAAW,QAC5B,EAGJloF,SAASghC,iBAAiB,SAAUl/B,IAChC,GAAqB,aAAlBA,EAAE6U,OAAOzW,KAAqB,CAC7B,MAAMioF,EAAiBrmF,EAAE6U,OAAOyxE,QAAQ,gBAAgBvoE,QAAQpgB,GAC1D4oF,EAAsBroF,SAAS0mF,cAAc,aAAayB,QAGxC,IAArBrmF,EAAE6U,OAAO2xE,QACRD,EAAoBrB,UAAUvxE,IAAI,aAGlC4yE,EAAoBrB,UAAU/wE,OAAO,aAIzC3W,EAAgBA,EAAcE,KAAK+oF,GAC5BA,EAAS9oF,IAAM0oF,EACP,IAAII,EAAUlpF,OAAQyC,EAAE6U,OAAO2xE,SAGnCC,IAGXhB,EAAmB,UACnBT,GACJ,MAAO,GAAgC,mBAA5BhlF,EAAE6U,OAAOkJ,QAAQkoE,OAA6B,CACrD,MAAMI,EAAiBrmF,EAAE6U,OAAOyxE,QAAQ,gBAAgBvoE,QAAQpgB,GAC1D+oF,EAAqBlpF,EAAcmpF,MAAKF,GAAYA,EAAS9oF,IAAM0oF,IAC7CnoF,SAAS0mF,cAAc,aAAayB,OAE5ClyE,SAnDShX,EAoDDupF,EAnDhClpF,EAAgBA,EAAcme,QAAO8qE,GAAYA,EAAS9oF,KAAOR,EAAWQ,KAoDxE8nF,EAAmB,UACnBT,GACJ,CAvDgC,IAAC7nF,CAuDjC,IAnHsB,MACtB,GAAG+oF,aAAaU,QAAQ,SAAU,CAC9B,IAAIf,EAAc3nF,SAAS0mF,cAAc,eACzCpnF,EAAgBq4E,KAAKn1D,MAAMwlE,aAAaU,QAAQ,UAChD5B,IAGAxnF,EAAcE,KAAKP,IACf,IAAIwoF,EAAaznF,SAAS0nF,cAAc,WACxCD,EAAWG,UAAY,QAAQ3oF,EAAWioF,WAC1CO,EAAW5nE,QAAQpgB,GAAKR,EAAWQ,GACnCgoF,EAAWI,WAAY,aAAuB5oF,GAC9C0oF,EAAYG,QAAQL,EAAU,GAGtC,GAwGJkB","sources":["webpack:///./src/scripts/modules/generateArticleContent.js","webpack:///./src/scripts/modules/generateTodoId.js","webpack:///./src/scripts/modules/pieChart.js","webpack:///./node_modules/@kurkle/color/dist/color.esm.js","webpack:///./node_modules/chart.js/auto/auto.js","webpack:///./node_modules/chart.js/src/core/core.animator.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.animations.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/controllers/controller.pie.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/core/core.adapters.ts","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/platform/platform.base.js","webpack:///./node_modules/chart.js/src/platform/platform.basic.js","webpack:///./node_modules/chart.js/src/platform/platform.dom.js","webpack:///./node_modules/chart.js/src/platform/index.js","webpack:///./node_modules/chart.js/src/core/core.element.ts","webpack:///./node_modules/chart.js/src/core/core.scale.autoskip.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.typedRegistry.js","webpack:///./node_modules/chart.js/src/core/core.registry.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/core/core.config.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chart.js/src/elements/element.arc.ts","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/elements/element.point.ts","webpack:///./node_modules/chart.js/src/elements/element.bar.js","webpack:///./node_modules/chart.js/src/plugins/plugin.colors.ts","webpack:///./node_modules/chart.js/src/plugins/plugin.decimation.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler/index.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/plugins/plugin.subtitle.js","webpack:///./node_modules/chart.js/src/plugins/plugin.tooltip.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/scales/scale.timeseries.js","webpack:///./node_modules/chart.js/src/index.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.core.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.math.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.collection.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.extras.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.color.ts","webpack:///./node_modules/chart.js/src/core/core.animations.defaults.js","webpack:///./node_modules/chart.js/src/helpers/helpers.intl.ts","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/core/core.layouts.defaults.js","webpack:///./node_modules/chart.js/src/core/core.scale.defaults.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.config.js","webpack:///./node_modules/chart.js/src/helpers/helpers.curve.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.dom.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.interpolation.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.rtl.ts","webpack:///./node_modules/chart.js/src/helpers/helpers.segment.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/scripts/main.js"],"sourcesContent":["const generateArticleContent = (todoObject) => {\n    const articleContent = ` \\\n        <header> \\\n            <div class=\"date\">Created: ${todoObject.date}</div> \\\n        </header> \\\n        <h2 class=\"title\">${todoObject.title}</h2> \\\n        <p class=\"description\"> \\\n            ${todoObject.description} \\\n        </p> \\\n        <button class=\"task-delete\" data-action=\"js-delete-todo\">x</button> \\\n        <div class=\"task-check\"> \\\n            <input type=\"checkbox\" ${todoObject.isDone ? 'checked' : ''}> \\\n        </div>`;\n\n    return articleContent;\n}\n\nexport default generateArticleContent;","const generateTodoId = (dataStructure) => {\n    const idArray = dataStructure.map(todoObject => todoObject.id);\n    let newId;\n    if (idArray.length===0){\n            newId=1;\n    }else{\n            newId=Math.max(...idArray)+1;\n    }\n    return newId;\n}\n\nexport default generateTodoId;","import Chart from 'chart.js/auto'\n\nconst pieChart = (nonComplete, complete) => {\n    return new Chart(\n        document.getElementById('js-completed-todos'),\n        {\n            type: 'pie',\n            data: {\n                labels: [\n                    'Neodrađeno',\n                    'Odrađeno',\n                ],\n                datasets: [{\n                    data: [nonComplete, complete],\n                    backgroundColor: [\n                        'rgb(255, 99, 132)',\n                        'rgb(54, 162, 235)'\n                    ],\n                    hoverOffset: 4\n                }]\n            }\n        }\n    );\n};\n\nexport default pieChart;","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import generateArticleContent from \"./modules/generateArticleContent\";\nimport generateTodoId from \"./modules/generateTodoId\";\nimport pieChart from \"./modules/pieChart\";\n\nconst toggleFormButton = document.getElementById('toggleNewTaskForm');\nconst newTaskForm = document.querySelector('.new-task-form');\nconst cancelTask = document.getElementById('cancelTask');\nconst saveButton = document.getElementById('saveTask');\nlet dataStructure = [];\nconst completeRatio = pieChart(dataStructure.filter(item => !item.isDone).length, dataStructure.filter(item => item.isDone).length);\n\nconst updateChart = () => {\n    completeRatio.data.datasets[0].data = [dataStructure.filter(item => !item.isDone).length, dataStructure.filter(item => item.isDone).length];\n    completeRatio.update();\n}\n\nconst initialListRender = () => {\n    if(localStorage.getItem('tasks')) {\n        let articleWrap = document.querySelector('#tasks-wrap');\n        dataStructure = JSON.parse(localStorage.getItem('tasks'))\n        updateChart();\n\n        // render tasks\n        dataStructure.map((todoObject) => {\n            let newArticle = document.createElement('article')\n            newArticle.className = `task ${todoObject.priority}`\n            newArticle.dataset.id = todoObject.id\n            newArticle.innerHTML = generateArticleContent(todoObject);\n            articleWrap.prepend(newArticle)\n        })\n\n    }\n}\n\n// TOGGLE FORM\ntoggleFormButton.onclick = () => {\n    newTaskForm.classList.toggle('d-none');\n    toggleFormButton.classList.toggle('d-none');\n}\n\ncancelTask.onclick = () => {\n    newTaskForm.classList.toggle('d-none')\n    toggleFormButton.classList.toggle('d-none')\n}\n\nsaveButton.onclick = () => {\n    const date = new Date()\n    const title = document.getElementById('title').value;\n    const description = document.getElementById('description').value;\n    const priority = document.querySelector('input[name=\"priority\"]:checked')?.value || 'low';\n\n    const todoObject = {\n        title,\n        description,\n        priority,\n        date: date.toLocaleDateString('hr-HR'),\n        isDone: false,\n        id: generateTodoId(dataStructure)\n    };\n\n    if((todoObject.title.trim()).length > 2) {\n        appendTaskToHtml(todoObject)\n        appendTaskToDataStructure(todoObject)\n        handleLocalStorage('add');\n        updateChart();\n    }\n    else {\n        // error message to be logged\n        console.log('Title too short');\n    }\n}\n\nconst appendTaskToDataStructure = (todoObject) => {\n    dataStructure = [...dataStructure, todoObject]\n}\n\nconst removeTaskFromDataStructure = (todoObject) => {\n    dataStructure = dataStructure.filter(todoItem => todoItem.id !== todoObject.id)\n}\n\nconst appendTaskToHtml = (todoObject) => {\n    let newArticle = document.createElement('article');\n    let articleWrap = document.querySelector('#tasks-wrap');\n\n    newArticle.className = `task ${todoObject.priority}${todoObject.isDone ? ' todo-done' : ''}`\n    newArticle.dataset.id = todoObject.id\n    newArticle.innerHTML = generateArticleContent(todoObject);\n    articleWrap.prepend(newArticle)\n}\n\nconst handleLocalStorage = (action) => {\n    localStorage.setItem('tasks', JSON.stringify(dataStructure));\n\n    if(action === 'remove' && !dataStructure.length) {\n        localStorage.removeItem('tasks');\n    }\n}\n\ndocument.addEventListener('click', (e) => {\n    if(e.target.type === 'checkbox') {\n        const referentTodoId = e.target.closest('article.task').dataset.id;\n        const referentTodoElement = document.querySelector(`[data-id='${referentTodoId}']`);\n\n        // stylize done todo\n        if(e.target.checked === true) {\n            referentTodoElement.classList.add('todo-done');\n        }\n        else {\n            referentTodoElement.classList.remove('todo-done');\n        }\n\n        // change property value in todo array\n        dataStructure = dataStructure.map((todoItem) => {\n            if(todoItem.id == referentTodoId) {\n                return {...todoItem, isDone: e.target.checked}\n            }\n\n            return todoItem;\n        })\n\n        handleLocalStorage('change');\n        updateChart();\n    } else if (e.target.dataset.action === \"js-delete-todo\") {\n        const referentTodoId = e.target.closest('article.task').dataset.id;\n        const referentTodoObject = dataStructure.find(todoItem => todoItem.id == referentTodoId);\n        const referentTodoElement = document.querySelector(`[data-id='${referentTodoId}']`);\n\n        referentTodoElement.remove();\n        removeTaskFromDataStructure(referentTodoObject);\n        handleLocalStorage('remove');\n        updateChart();\n    }\n})\n\n// initial todos render\ninitialListRender();\n"],"names":["todoObject","date","title","description","isDone","dataStructure","idArray","map","id","newId","length","Math","max","nonComplete","complete","document","getElementById","type","data","labels","datasets","backgroundColor","hoverOffset","round","v","lim","l","h","min","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexParse","str","ret","len","r","g","hexString","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","Color","constructor","charAt","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","Chart","registerables","Animator","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","start","_refresh","requestAnimFrame","window","_update","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_getAnims","charts","get","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","_duration","stop","cancel","remove","delete","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","defaults","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","value","animation","size","animator","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","y","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","style","text","fillStyle","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","ringWeightOffset","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","call","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","enumerable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","describe","route","scopeObject","targetScopeObject","privateName","defineProperties","writable","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","objProps","read","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","rectX","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","toggleFormButton","newTaskForm","querySelector","cancelTask","saveButton","completeRatio","updateChart","onclick","classList","toggle","priority","toLocaleDateString","trim","appendTaskToHtml","appendTaskToDataStructure","handleLocalStorage","log","newArticle","createElement","articleWrap","className","innerHTML","prepend","action","localStorage","setItem","removeItem","referentTodoId","closest","referentTodoElement","checked","todoItem","referentTodoObject","find","getItem","initialListRender"],"sourceRoot":""}